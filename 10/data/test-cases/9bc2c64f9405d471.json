{
  "uid" : "9bc2c64f9405d471",
  "name" : "Проверка попапа о принятии файлов cookie на странице https://pulsewave.ru/auth/signup",
  "fullName" : "tests.test_footer.test_footer.TestFooter#test_get_all_cookies",
  "historyId" : "699631e946f45eb31bd1759424fb1735",
  "time" : {
    "start" : 1714443541781,
    "stop" : 1714443541997,
    "duration" : 216
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x560ac899ce33 <unknown>\n#1 0x560ac868c567 <unknown>\n#2 0x560ac8684879 <unknown>\n#3 0x560ac8674852 <unknown>\n#4 0x560ac8675e44 <unknown>\n#5 0x560ac8674bbe <unknown>\n#6 0x560ac86742e0 <unknown>\n#7 0x560ac8674181 <unknown>\n#8 0x560ac86720ec <unknown>\n#9 0x560ac867260a <unknown>\n#10 0x560ac868eeef <unknown>\n#11 0x560ac8718695 <unknown>\n#12 0x560ac86f9362 <unknown>\n#13 0x560ac8717ae2 <unknown>\n#14 0x560ac86f9103 <unknown>\n#15 0x560ac86ca1ba <unknown>\n#16 0x560ac86cab8e <unknown>\n#17 0x560ac896159b <unknown>\n#18 0x560ac896534b <unknown>\n#19 0x560ac894d681 <unknown>\n#20 0x560ac8965eb2 <unknown>\n#21 0x560ac89326af <unknown>\n#22 0x560ac898c428 <unknown>\n#23 0x560ac898c600 <unknown>\n#24 0x560ac899bf84 <unknown>\n#25 0x7f11e2694ac3 <unknown>",
  "statusTrace" : "self = <tests.test_footer.test_footer.TestFooter object at 0x7f17c83ae150>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"739213c0705cb181f3a974efc505d338\")>\nurl = 'https://pulsewave.ru/auth/signup'\n\n    @pytest.mark.parametrize('url', FooterConstant.PAGES)\n    @pytest.mark.smoke\n    def test_get_all_cookies(self, driver, url):\n        allure.dynamic.title(f\"Проверка попапа о принятии файлов cookie на странице {url}\")\n        page = FooterPage(driver)\n>       page.get_page_open(driver, url)\n\ntests/test_footer/test_footer.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer.py:50: in get_page_open\n    driver.get(url)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f17c7be34a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x560ac898c600 \\\\u003Cunknown>\\\\n#24 0x560ac899bf84 \\\\u003Cunknown>\\\\n#25 0x7f11e2694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x560ac899ce33 <unknown>\nE       #1 0x560ac868c567 <unknown>\nE       #2 0x560ac8684879 <unknown>\nE       #3 0x560ac8674852 <unknown>\nE       #4 0x560ac8675e44 <unknown>\nE       #5 0x560ac8674bbe <unknown>\nE       #6 0x560ac86742e0 <unknown>\nE       #7 0x560ac8674181 <unknown>\nE       #8 0x560ac86720ec <unknown>\nE       #9 0x560ac867260a <unknown>\nE       #10 0x560ac868eeef <unknown>\nE       #11 0x560ac8718695 <unknown>\nE       #12 0x560ac86f9362 <unknown>\nE       #13 0x560ac8717ae2 <unknown>\nE       #14 0x560ac86f9103 <unknown>\nE       #15 0x560ac86ca1ba <unknown>\nE       #16 0x560ac86cab8e <unknown>\nE       #17 0x560ac896159b <unknown>\nE       #18 0x560ac896534b <unknown>\nE       #19 0x560ac894d681 <unknown>\nE       #20 0x560ac8965eb2 <unknown>\nE       #21 0x560ac89326af <unknown>\nE       #22 0x560ac898c428 <unknown>\nE       #23 0x560ac898c600 <unknown>\nE       #24 0x560ac899bf84 <unknown>\nE       #25 0x7f11e2694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1714443541583,
      "stop" : 1714443541780,
      "duration" : 197
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714443483373,
      "stop" : 1714443483373,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714443483355,
      "stop" : 1714443483372,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x560ac899ce33 <unknown>\n#1 0x560ac868c567 <unknown>\n#2 0x560ac8684879 <unknown>\n#3 0x560ac8674852 <unknown>\n#4 0x560ac8675e44 <unknown>\n#5 0x560ac8674bbe <unknown>\n#6 0x560ac86742e0 <unknown>\n#7 0x560ac8674181 <unknown>\n#8 0x560ac86720ec <unknown>\n#9 0x560ac867260a <unknown>\n#10 0x560ac868eeef <unknown>\n#11 0x560ac8718695 <unknown>\n#12 0x560ac86f9362 <unknown>\n#13 0x560ac8717ae2 <unknown>\n#14 0x560ac86f9103 <unknown>\n#15 0x560ac86ca1ba <unknown>\n#16 0x560ac86cab8e <unknown>\n#17 0x560ac896159b <unknown>\n#18 0x560ac896534b <unknown>\n#19 0x560ac894d681 <unknown>\n#20 0x560ac8965eb2 <unknown>\n#21 0x560ac89326af <unknown>\n#22 0x560ac898c428 <unknown>\n#23 0x560ac898c600 <unknown>\n#24 0x560ac899bf84 <unknown>\n#25 0x7f11e2694ac3 <unknown>",
    "statusTrace" : "self = <tests.test_footer.test_footer.TestFooter object at 0x7f17c83ae150>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"739213c0705cb181f3a974efc505d338\")>\nurl = 'https://pulsewave.ru/auth/signup'\n\n    @pytest.mark.parametrize('url', FooterConstant.PAGES)\n    @pytest.mark.smoke\n    def test_get_all_cookies(self, driver, url):\n        allure.dynamic.title(f\"Проверка попапа о принятии файлов cookie на странице {url}\")\n        page = FooterPage(driver)\n>       page.get_page_open(driver, url)\n\ntests/test_footer/test_footer.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/footer.py:50: in get_page_open\n    driver.get(url)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f17c7be34a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x560ac898c600 \\\\u003Cunknown>\\\\n#24 0x560ac899bf84 \\\\u003Cunknown>\\\\n#25 0x7f11e2694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x560ac899ce33 <unknown>\nE       #1 0x560ac868c567 <unknown>\nE       #2 0x560ac8684879 <unknown>\nE       #3 0x560ac8674852 <unknown>\nE       #4 0x560ac8675e44 <unknown>\nE       #5 0x560ac8674bbe <unknown>\nE       #6 0x560ac86742e0 <unknown>\nE       #7 0x560ac8674181 <unknown>\nE       #8 0x560ac86720ec <unknown>\nE       #9 0x560ac867260a <unknown>\nE       #10 0x560ac868eeef <unknown>\nE       #11 0x560ac8718695 <unknown>\nE       #12 0x560ac86f9362 <unknown>\nE       #13 0x560ac8717ae2 <unknown>\nE       #14 0x560ac86f9103 <unknown>\nE       #15 0x560ac86ca1ba <unknown>\nE       #16 0x560ac86cab8e <unknown>\nE       #17 0x560ac896159b <unknown>\nE       #18 0x560ac896534b <unknown>\nE       #19 0x560ac894d681 <unknown>\nE       #20 0x560ac8965eb2 <unknown>\nE       #21 0x560ac89326af <unknown>\nE       #22 0x560ac898c428 <unknown>\nE       #23 0x560ac898c600 <unknown>\nE       #24 0x560ac899bf84 <unknown>\nE       #25 0x7f11e2694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
    "steps" : [ {
      "name" : "Открыть страницу 'https://pulsewave.ru/auth/signup'",
      "time" : {
        "start" : 1714443541781,
        "stop" : 1714443541997,
        "duration" : 216
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x560ac899ce33 <unknown>\n#1 0x560ac868c567 <unknown>\n#2 0x560ac8684879 <unknown>\n#3 0x560ac8674852 <unknown>\n#4 0x560ac8675e44 <unknown>\n#5 0x560ac8674bbe <unknown>\n#6 0x560ac86742e0 <unknown>\n#7 0x560ac8674181 <unknown>\n#8 0x560ac86720ec <unknown>\n#9 0x560ac867260a <unknown>\n#10 0x560ac868eeef <unknown>\n#11 0x560ac8718695 <unknown>\n#12 0x560ac86f9362 <unknown>\n#13 0x560ac8717ae2 <unknown>\n#14 0x560ac86f9103 <unknown>\n#15 0x560ac86ca1ba <unknown>\n#16 0x560ac86cab8e <unknown>\n#17 0x560ac896159b <unknown>\n#18 0x560ac896534b <unknown>\n#19 0x560ac894d681 <unknown>\n#20 0x560ac8965eb2 <unknown>\n#21 0x560ac89326af <unknown>\n#22 0x560ac898c428 <unknown>\n#23 0x560ac898c600 <unknown>\n#24 0x560ac899bf84 <unknown>\n#25 0x7f11e2694ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/pages/footer.py\", line 50, in get_page_open\n    driver.get(url)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "7d21d3e1b27ca2c3",
      "name" : "Screenshot",
      "source" : "7d21d3e1b27ca2c3.png",
      "type" : "image/png",
      "size" : 10592
    }, {
      "uid" : "a302d2a1d86dc797",
      "name" : "HTML source",
      "source" : "a302d2a1d86dc797.html",
      "type" : "text/html",
      "size" : 39
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1714443542159,
      "stop" : 1714443542217,
      "duration" : 58
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование Футера"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_footer"
  }, {
    "name" : "suite",
    "value" : "test_footer"
  }, {
    "name" : "subSuite",
    "value" : "TestFooter"
  }, {
    "name" : "host",
    "value" : "fv-az1385-609"
  }, {
    "name" : "thread",
    "value" : "2312-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_footer.test_footer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  }, {
    "name" : "url",
    "value" : "'https://pulsewave.ru/auth/signup'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 14
      },
      "items" : [ {
        "uid" : "5327f7116ca71a5c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/5327f7116ca71a5c",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x5558f186ce33 <unknown>\n#1 0x5558f155c567 <unknown>\n#2 0x5558f1554879 <unknown>\n#3 0x5558f1544852 <unknown>\n#4 0x5558f1545e44 <unknown>\n#5 0x5558f1544bbe <unknown>\n#6 0x5558f15442e0 <unknown>\n#7 0x5558f1544181 <unknown>\n#8 0x5558f15420ec <unknown>\n#9 0x5558f154260a <unknown>\n#10 0x5558f155eeef <unknown>\n#11 0x5558f15e8695 <unknown>\n#12 0x5558f15c9362 <unknown>\n#13 0x5558f15e7ae2 <unknown>\n#14 0x5558f15c9103 <unknown>\n#15 0x5558f159a1ba <unknown>\n#16 0x5558f159ab8e <unknown>\n#17 0x5558f183159b <unknown>\n#18 0x5558f183534b <unknown>\n#19 0x5558f181d681 <unknown>\n#20 0x5558f1835eb2 <unknown>\n#21 0x5558f18026af <unknown>\n#22 0x5558f185c428 <unknown>\n#23 0x5558f185c600 <unknown>\n#24 0x5558f186bf84 <unknown>\n#25 0x7fb933c94ac3 <unknown>",
        "time" : {
          "start" : 1714357202517,
          "stop" : 1714357202671,
          "duration" : 154
        }
      }, {
        "uid" : "a51f541d0cf73f4b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/a51f541d0cf73f4b",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55dba5a04e33 <unknown>\n#1 0x55dba56f4567 <unknown>\n#2 0x55dba573f27d <unknown>\n#3 0x55dba573f331 <unknown>\n#4 0x55dba5782624 <unknown>\n#5 0x55dba576138d <unknown>\n#6 0x55dba577fae2 <unknown>\n#7 0x55dba5761103 <unknown>\n#8 0x55dba57321ba <unknown>\n#9 0x55dba5732b8e <unknown>\n#10 0x55dba59c959b <unknown>\n#11 0x55dba59cd34b <unknown>\n#12 0x55dba59b5681 <unknown>\n#13 0x55dba59cdeb2 <unknown>\n#14 0x55dba599a6af <unknown>\n#15 0x55dba59f4428 <unknown>\n#16 0x55dba59f4600 <unknown>\n#17 0x55dba5a03f84 <unknown>\n#18 0x7ff3f9494ac3 <unknown>",
        "time" : {
          "start" : 1714271036475,
          "stop" : 1714271057203,
          "duration" : 20728
        }
      }, {
        "uid" : "c38b7678427288f6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/c38b7678427288f6",
        "status" : "passed",
        "time" : {
          "start" : 1714184694242,
          "stop" : 1714184697740,
          "duration" : 3498
        }
      }, {
        "uid" : "33e64a2ca0d41acf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/33e64a2ca0d41acf",
        "status" : "passed",
        "time" : {
          "start" : 1714148215902,
          "stop" : 1714148218595,
          "duration" : 2693
        }
      }, {
        "uid" : "2cc2ab7a6aa5895e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/2cc2ab7a6aa5895e",
        "status" : "passed",
        "time" : {
          "start" : 1714098262912,
          "stop" : 1714098265691,
          "duration" : 2779
        }
      }, {
        "uid" : "41b27e1d53937596",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/41b27e1d53937596",
        "status" : "passed",
        "time" : {
          "start" : 1714014180395,
          "stop" : 1714014182591,
          "duration" : 2196
        }
      }, {
        "uid" : "d2aefa26c5dcd507",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/d2aefa26c5dcd507",
        "status" : "passed",
        "time" : {
          "start" : 1713945657903,
          "stop" : 1713945660558,
          "duration" : 2655
        }
      }, {
        "uid" : "e04a46cddb7eafa2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/e04a46cddb7eafa2",
        "status" : "passed",
        "time" : {
          "start" : 1713925454853,
          "stop" : 1713925457382,
          "duration" : 2529
        }
      }, {
        "uid" : "8570c0a7f613bb1d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/8570c0a7f613bb1d",
        "status" : "passed",
        "time" : {
          "start" : 1713901280812,
          "stop" : 1713901283736,
          "duration" : 2924
        }
      }, {
        "uid" : "422b832d70e3f921",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/422b832d70e3f921",
        "status" : "passed",
        "time" : {
          "start" : 1713885425179,
          "stop" : 1713885428849,
          "duration" : 3670
        }
      }, {
        "uid" : "bc4057f97eeb1404",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/bc4057f97eeb1404",
        "status" : "passed",
        "time" : {
          "start" : 1713883339177,
          "stop" : 1713883342532,
          "duration" : 3355
        }
      }, {
        "uid" : "4be4bf02b38a6f90",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/4be4bf02b38a6f90",
        "status" : "passed",
        "time" : {
          "start" : 1713881840067,
          "stop" : 1713881843585,
          "duration" : 3518
        }
      }, {
        "uid" : "9da5bea1534d2b3b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/9da5bea1534d2b3b",
        "status" : "passed",
        "time" : {
          "start" : 1713879014066,
          "stop" : 1713879017718,
          "duration" : 3652
        }
      } ]
    },
    "tags" : [ "smoke" ]
  },
  "source" : "9bc2c64f9405d471.json",
  "parameterValues" : [ "'chrome'", "'https://pulsewave.ru/auth/signup'" ]
}