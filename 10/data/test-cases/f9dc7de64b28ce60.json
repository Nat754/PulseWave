{
  "uid" : "f9dc7de64b28ce60",
  "name" : "Проверить сообщение об отправке ссылки восстановления пароля на емайл",
  "fullName" : "tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage#test_fill_correct_email",
  "historyId" : "31cba4394a235068db88fa9e5b27aa06",
  "time" : {
    "start" : 1714443611067,
    "stop" : 1714443611067,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55febc450e33 <unknown>\n#1 0x55febc140567 <unknown>\n#2 0x55febc138879 <unknown>\n#3 0x55febc128852 <unknown>\n#4 0x55febc129e44 <unknown>\n#5 0x55febc128bbe <unknown>\n#6 0x55febc1282e0 <unknown>\n#7 0x55febc128181 <unknown>\n#8 0x55febc1260ec <unknown>\n#9 0x55febc12660a <unknown>\n#10 0x55febc142eef <unknown>\n#11 0x55febc1cc695 <unknown>\n#12 0x55febc1ad362 <unknown>\n#13 0x55febc1cbae2 <unknown>\n#14 0x55febc1ad103 <unknown>\n#15 0x55febc17e1ba <unknown>\n#16 0x55febc17eb8e <unknown>\n#17 0x55febc41559b <unknown>\n#18 0x55febc41934b <unknown>\n#19 0x55febc401681 <unknown>\n#20 0x55febc419eb2 <unknown>\n#21 0x55febc3e66af <unknown>\n#22 0x55febc440428 <unknown>\n#23 0x55febc440600 <unknown>\n#24 0x55febc44ff84 <unknown>\n#25 0x7f0055094ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"70b58434aca3d525c5b19c36203ca0d9\")>\n\n    @pytest.fixture(scope='function')\n    def recovery_page_open(driver):\n        recovery_page = PasswordRecoveryPage(driver)\n>       driver.get(Constant.PASSWORD_RECOVERY)\n\ntests/test_password_recovery/conftest.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f17c7c1e0f0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x55febc440600 \\\\u003Cunknown>\\\\n#24 0x55febc44ff84 \\\\u003Cunknown>\\\\n#25 0x7f0055094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x55febc450e33 <unknown>\nE       #1 0x55febc140567 <unknown>\nE       #2 0x55febc138879 <unknown>\nE       #3 0x55febc128852 <unknown>\nE       #4 0x55febc129e44 <unknown>\nE       #5 0x55febc128bbe <unknown>\nE       #6 0x55febc1282e0 <unknown>\nE       #7 0x55febc128181 <unknown>\nE       #8 0x55febc1260ec <unknown>\nE       #9 0x55febc12660a <unknown>\nE       #10 0x55febc142eef <unknown>\nE       #11 0x55febc1cc695 <unknown>\nE       #12 0x55febc1ad362 <unknown>\nE       #13 0x55febc1cbae2 <unknown>\nE       #14 0x55febc1ad103 <unknown>\nE       #15 0x55febc17e1ba <unknown>\nE       #16 0x55febc17eb8e <unknown>\nE       #17 0x55febc41559b <unknown>\nE       #18 0x55febc41934b <unknown>\nE       #19 0x55febc401681 <unknown>\nE       #20 0x55febc419eb2 <unknown>\nE       #21 0x55febc3e66af <unknown>\nE       #22 0x55febc440428 <unknown>\nE       #23 0x55febc440600 <unknown>\nE       #24 0x55febc44ff84 <unknown>\nE       #25 0x7f0055094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1714443611068,
      "stop" : 1714443611264,
      "duration" : 196
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "recovery_page_open",
    "time" : {
      "start" : 1714443611264,
      "stop" : 1714443611483,
      "duration" : 219
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55febc450e33 <unknown>\n#1 0x55febc140567 <unknown>\n#2 0x55febc138879 <unknown>\n#3 0x55febc128852 <unknown>\n#4 0x55febc129e44 <unknown>\n#5 0x55febc128bbe <unknown>\n#6 0x55febc1282e0 <unknown>\n#7 0x55febc128181 <unknown>\n#8 0x55febc1260ec <unknown>\n#9 0x55febc12660a <unknown>\n#10 0x55febc142eef <unknown>\n#11 0x55febc1cc695 <unknown>\n#12 0x55febc1ad362 <unknown>\n#13 0x55febc1cbae2 <unknown>\n#14 0x55febc1ad103 <unknown>\n#15 0x55febc17e1ba <unknown>\n#16 0x55febc17eb8e <unknown>\n#17 0x55febc41559b <unknown>\n#18 0x55febc41934b <unknown>\n#19 0x55febc401681 <unknown>\n#20 0x55febc419eb2 <unknown>\n#21 0x55febc3e66af <unknown>\n#22 0x55febc440428 <unknown>\n#23 0x55febc440600 <unknown>\n#24 0x55febc44ff84 <unknown>\n#25 0x7f0055094ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/tests/test_password_recovery/conftest.py\", line 9, in recovery_page_open\n    driver.get(Constant.PASSWORD_RECOVERY)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714443483373,
      "stop" : 1714443483373,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714443483355,
      "stop" : 1714443483372,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1714443611514,
      "stop" : 1714443611571,
      "duration" : 57
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Восстановление пароля'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_password_recovery"
  }, {
    "name" : "suite",
    "value" : "test_password_recovery"
  }, {
    "name" : "subSuite",
    "value" : "TestPasswordRecoveryPage"
  }, {
    "name" : "host",
    "value" : "fv-az1385-609"
  }, {
    "name" : "thread",
    "value" : "2312-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_password_recovery.test_password_recovery"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 14
      },
      "items" : [ {
        "uid" : "125a0046239378ec",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/125a0046239378ec",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55a3b9046e33 <unknown>\n#1 0x55a3b8d36567 <unknown>\n#2 0x55a3b8d2e879 <unknown>\n#3 0x55a3b8d1e852 <unknown>\n#4 0x55a3b8d1fe44 <unknown>\n#5 0x55a3b8d1ebbe <unknown>\n#6 0x55a3b8d1e2e0 <unknown>\n#7 0x55a3b8d1e181 <unknown>\n#8 0x55a3b8d1c0ec <unknown>\n#9 0x55a3b8d1c60a <unknown>\n#10 0x55a3b8d38eef <unknown>\n#11 0x55a3b8dc2695 <unknown>\n#12 0x55a3b8da3362 <unknown>\n#13 0x55a3b8dc1ae2 <unknown>\n#14 0x55a3b8da3103 <unknown>\n#15 0x55a3b8d741ba <unknown>\n#16 0x55a3b8d74b8e <unknown>\n#17 0x55a3b900b59b <unknown>\n#18 0x55a3b900f34b <unknown>\n#19 0x55a3b8ff7681 <unknown>\n#20 0x55a3b900feb2 <unknown>\n#21 0x55a3b8fdc6af <unknown>\n#22 0x55a3b9036428 <unknown>\n#23 0x55a3b9036600 <unknown>\n#24 0x55a3b9045f84 <unknown>\n#25 0x7f409c494ac3 <unknown>",
        "time" : {
          "start" : 1714357262727,
          "stop" : 1714357262727,
          "duration" : 0
        }
      }, {
        "uid" : "d1640b7330103f51",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/d1640b7330103f51",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d1cbdc1e33 <unknown>\n#1 0x55d1cbab1567 <unknown>\n#2 0x55d1cbafc27d <unknown>\n#3 0x55d1cbafc331 <unknown>\n#4 0x55d1cbb3f624 <unknown>\n#5 0x55d1cbb1e38d <unknown>\n#6 0x55d1cbb3cae2 <unknown>\n#7 0x55d1cbb1e103 <unknown>\n#8 0x55d1cbaef1ba <unknown>\n#9 0x55d1cbaefb8e <unknown>\n#10 0x55d1cbd8659b <unknown>\n#11 0x55d1cbd8a34b <unknown>\n#12 0x55d1cbd72681 <unknown>\n#13 0x55d1cbd8aeb2 <unknown>\n#14 0x55d1cbd576af <unknown>\n#15 0x55d1cbdb1428 <unknown>\n#16 0x55d1cbdb1600 <unknown>\n#17 0x55d1cbdc0f84 <unknown>\n#18 0x7f2856094ac3 <unknown>",
        "time" : {
          "start" : 1714273895523,
          "stop" : 1714273895523,
          "duration" : 0
        }
      }, {
        "uid" : "782e474e4de2e1d7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/782e474e4de2e1d7",
        "status" : "passed",
        "time" : {
          "start" : 1714185214053,
          "stop" : 1714185215749,
          "duration" : 1696
        }
      }, {
        "uid" : "fb907f5484969aec",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/fb907f5484969aec",
        "status" : "passed",
        "time" : {
          "start" : 1714148640581,
          "stop" : 1714148642281,
          "duration" : 1700
        }
      }, {
        "uid" : "2f508f624ce92b97",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/2f508f624ce92b97",
        "status" : "passed",
        "time" : {
          "start" : 1714098690597,
          "stop" : 1714098692285,
          "duration" : 1688
        }
      }, {
        "uid" : "595fe6df1cda825f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/595fe6df1cda825f",
        "status" : "passed",
        "time" : {
          "start" : 1714014545638,
          "stop" : 1714014547331,
          "duration" : 1693
        }
      }, {
        "uid" : "1305d54b4f8a33ff",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/1305d54b4f8a33ff",
        "status" : "passed",
        "time" : {
          "start" : 1713946053451,
          "stop" : 1713946055133,
          "duration" : 1682
        }
      }, {
        "uid" : "ddbe594a39d73106",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/ddbe594a39d73106",
        "status" : "passed",
        "time" : {
          "start" : 1713925843859,
          "stop" : 1713925845543,
          "duration" : 1684
        }
      }, {
        "uid" : "c980b52fcd361f90",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/c980b52fcd361f90",
        "status" : "passed",
        "time" : {
          "start" : 1713901719313,
          "stop" : 1713901721009,
          "duration" : 1696
        }
      }, {
        "uid" : "e69861d980a15ac",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/e69861d980a15ac",
        "status" : "passed",
        "time" : {
          "start" : 1713885952877,
          "stop" : 1713885954558,
          "duration" : 1681
        }
      }, {
        "uid" : "bc32672695e52b89",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/bc32672695e52b89",
        "status" : "passed",
        "time" : {
          "start" : 1713883842432,
          "stop" : 1713883844129,
          "duration" : 1697
        }
      }, {
        "uid" : "c1b7d9d297c22e6c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/c1b7d9d297c22e6c",
        "status" : "passed",
        "time" : {
          "start" : 1713882370569,
          "stop" : 1713882372259,
          "duration" : 1690
        }
      }, {
        "uid" : "5ab9a58a9c428a91",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/5ab9a58a9c428a91",
        "status" : "passed",
        "time" : {
          "start" : 1713879549809,
          "stop" : 1713879551498,
          "duration" : 1689
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "f9dc7de64b28ce60.json",
  "parameterValues" : [ "'chrome'" ]
}