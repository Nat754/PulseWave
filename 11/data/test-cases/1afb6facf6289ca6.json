{
  "uid" : "1afb6facf6289ca6",
  "name" : "POST Создать колонку на доске",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_api_board_id_column",
  "historyId" : "98cca66e7423762d1d1f28acf9088f58",
  "time" : {
    "start" : 1714530278340,
    "stop" : 1714530279627,
    "duration" : 1287
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nKeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fd968499520>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fd967e78740>\n\n    @pytest.mark.xfail\n    @allure.title(\"POST Создать колонку на доске\")\n    def test_post_api_board_id_column(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:261: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1714530278339,
      "stop" : 1714530278339,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714530176359,
      "stop" : 1714530176376,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714530176376,
      "stop" : 1714530176376,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nKeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fd968499520>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fd967e78740>\n\n    @pytest.mark.xfail\n    @allure.title(\"POST Создать колонку на доске\")\n    def test_post_api_board_id_column(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:261: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1714530278340,
        "stop" : 1714530279627,
        "duration" : 1287
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az975-832"
  }, {
    "name" : "thread",
    "value" : "2293-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 15,
        "passed" : 0,
        "unknown" : 0,
        "total" : 15
      },
      "items" : [ {
        "uid" : "3620d3f924910c88",
        "reportUrl" : "https://Nat754.github.io/PulseWave/10//#testresult/3620d3f924910c88",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f17c7d95f10>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714443498846,
          "stop" : 1714443499038,
          "duration" : 192
        }
      }, {
        "uid" : "c075375e39c68710",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/c075375e39c68710",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f7971dda150>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714357173240,
          "stop" : 1714357173750,
          "duration" : 510
        }
      }, {
        "uid" : "92ee47faa17e83fe",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/92ee47faa17e83fe",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1000)')))",
        "time" : {
          "start" : 1714270960969,
          "stop" : 1714270961293,
          "duration" : 324
        }
      }, {
        "uid" : "7445ecaa8b51e19e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/7445ecaa8b51e19e",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714184365842,
          "stop" : 1714184372177,
          "duration" : 6335
        }
      }, {
        "uid" : "f032314a6be9039e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/f032314a6be9039e",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714147925739,
          "stop" : 1714147930921,
          "duration" : 5182
        }
      }, {
        "uid" : "9a525349d2c33d18",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/9a525349d2c33d18",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714097983457,
          "stop" : 1714097988655,
          "duration" : 5198
        }
      }, {
        "uid" : "18225889108243d6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/18225889108243d6",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714013909548,
          "stop" : 1714013914472,
          "duration" : 4924
        }
      }, {
        "uid" : "20c5d97a9b417aeb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/20c5d97a9b417aeb",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713945352891,
          "stop" : 1713945358555,
          "duration" : 5664
        }
      }, {
        "uid" : "bf81933922c7d91c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/bf81933922c7d91c",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713925172150,
          "stop" : 1713925177526,
          "duration" : 5376
        }
      }, {
        "uid" : "4e5970a70ed09cb8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/4e5970a70ed09cb8",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713900981299,
          "stop" : 1713900986940,
          "duration" : 5641
        }
      }, {
        "uid" : "c61fd933025de1cd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/c61fd933025de1cd",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713885093243,
          "stop" : 1713885099783,
          "duration" : 6540
        }
      }, {
        "uid" : "b215ee594a2bae04",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/b215ee594a2bae04",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713883027121,
          "stop" : 1713883033172,
          "duration" : 6051
        }
      }, {
        "uid" : "d33a8a763f375f0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/d33a8a763f375f0",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713881510748,
          "stop" : 1713881517153,
          "duration" : 6405
        }
      }, {
        "uid" : "5c3d90118c652400",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/5c3d90118c652400",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713878686884,
          "stop" : 1713878693089,
          "duration" : 6205
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "1afb6facf6289ca6.json",
  "parameterValues" : [ ]
}