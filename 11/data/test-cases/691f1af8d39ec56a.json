{
  "uid" : "691f1af8d39ec56a",
  "name" : "GET Получение комментария",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_task_id_comment",
  "historyId" : "0676f9cd255bfab810907c313091928a",
  "time" : {
    "start" : 1714530307546,
    "stop" : 1714530308804,
    "duration" : 1258
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nKeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fd96849bfb0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fd967e83080>\n\n    @pytest.mark.xfail\n    @allure.title(\"GET Получение комментария\")\n    def test_get_task_id_comment(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:480: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714530176359,
      "stop" : 1714530176376,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714530176376,
      "stop" : 1714530176376,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1714530307546,
      "stop" : 1714530307546,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nKeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fd96849bfb0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fd967e83080>\n\n    @pytest.mark.xfail\n    @allure.title(\"GET Получение комментария\")\n    def test_get_task_id_comment(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:480: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1714530307546,
        "stop" : 1714530308803,
        "duration" : 1257
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az975-832"
  }, {
    "name" : "thread",
    "value" : "2293-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 15,
        "passed" : 0,
        "unknown" : 0,
        "total" : 15
      },
      "items" : [ {
        "uid" : "87c1c55702878dea",
        "reportUrl" : "https://Nat754.github.io/PulseWave/10//#testresult/87c1c55702878dea",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f17c7dbe840>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714443505746,
          "stop" : 1714443505937,
          "duration" : 191
        }
      }, {
        "uid" : "e4ebdc1de879b57c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/e4ebdc1de879b57c",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f7971e01b80>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714357181362,
          "stop" : 1714357181486,
          "duration" : 124
        }
      }, {
        "uid" : "46434c04acd68381",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/46434c04acd68381",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1000)')))",
        "time" : {
          "start" : 1714270970426,
          "stop" : 1714270970740,
          "duration" : 314
        }
      }, {
        "uid" : "e64e62bb009add41",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/e64e62bb009add41",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714184501032,
          "stop" : 1714184510123,
          "duration" : 9091
        }
      }, {
        "uid" : "d6eff2a202a830ee",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/d6eff2a202a830ee",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714148039569,
          "stop" : 1714148047456,
          "duration" : 7887
        }
      }, {
        "uid" : "8a26ec9d9f8aa3d3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/8a26ec9d9f8aa3d3",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714098099657,
          "stop" : 1714098107740,
          "duration" : 8083
        }
      }, {
        "uid" : "9151b1ae77c850f3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/9151b1ae77c850f3",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714014020215,
          "stop" : 1714014027617,
          "duration" : 7402
        }
      }, {
        "uid" : "ded23b6f475e767",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/ded23b6f475e767",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713945473553,
          "stop" : 1713945482179,
          "duration" : 8626
        }
      }, {
        "uid" : "13bdb3f7efebb574",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/13bdb3f7efebb574",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713925285743,
          "stop" : 1713925293234,
          "duration" : 7491
        }
      }, {
        "uid" : "dbd3b93d7fa0c578",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/dbd3b93d7fa0c578",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713901100054,
          "stop" : 1713901108293,
          "duration" : 8239
        }
      }, {
        "uid" : "70863fd8a66ee8b3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/70863fd8a66ee8b3",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713885232096,
          "stop" : 1713885241855,
          "duration" : 9759
        }
      }, {
        "uid" : "89d1316393133030",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/89d1316393133030",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713883158573,
          "stop" : 1713883167887,
          "duration" : 9314
        }
      }, {
        "uid" : "4017219b292ce4de",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/4017219b292ce4de",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713881650695,
          "stop" : 1713881660248,
          "duration" : 9553
        }
      }, {
        "uid" : "33711c358560da4c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/33711c358560da4c",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713878824379,
          "stop" : 1713878833596,
          "duration" : 9217
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "691f1af8d39ec56a.json",
  "parameterValues" : [ ]
}