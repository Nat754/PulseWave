{
  "uid" : "dc31f479f8db84fc",
  "name" : "POST Активация пользователя с корректными данными",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_users_activation",
  "historyId" : "41cff5be4c2a881c5826f33ddc93442d",
  "time" : {
    "start" : 1723170729299,
    "stop" : 1723170733510,
    "duration" : 4211
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f95c9b1da60>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f95c9b56420>\n\n    @allure.title(\"POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/activation/'\n        user_token = use_api_base.get_activate_email_tokens(email1, password1)\n        response = requests.post(url, json=user_token)\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1723170718147,
      "stop" : 1723170718165,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1723170729299,
      "stop" : 1723170729299,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1723170718165,
      "stop" : 1723170718165,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f95c9b1da60>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f95c9b56420>\n\n    @allure.title(\"POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/activation/'\n        user_token = use_api_base.get_activate_email_tokens(email1, password1)\n        response = requests.post(url, json=user_token)\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить токен активации пользователя на емайл",
      "time" : {
        "start" : 1723170729299,
        "stop" : 1723170732373,
        "duration" : 3074
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 200",
      "time" : {
        "start" : 1723170733510,
        "stop" : 1723170733510,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az883-728"
  }, {
    "name" : "thread",
    "value" : "2285-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 20,
        "skipped" : 29,
        "passed" : 73,
        "unknown" : 0,
        "total" : 125
      },
      "items" : [ {
        "uid" : "afeff9d408c5652d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/110//#testresult/afeff9d408c5652d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 200. Actual: 400",
        "time" : {
          "start" : 1723084254236,
          "stop" : 1723084257780,
          "duration" : 3544
        }
      }, {
        "uid" : "cf3e473fd2e50c33",
        "reportUrl" : "https://Nat754.github.io/PulseWave/109//#testresult/cf3e473fd2e50c33",
        "status" : "passed",
        "time" : {
          "start" : 1722997918324,
          "stop" : 1722997921568,
          "duration" : 3244
        }
      }, {
        "uid" : "f752967a3cdb6a59",
        "reportUrl" : "https://Nat754.github.io/PulseWave/108//#testresult/f752967a3cdb6a59",
        "status" : "passed",
        "time" : {
          "start" : 1722911396621,
          "stop" : 1722911399687,
          "duration" : 3066
        }
      }, {
        "uid" : "bc99fe13c60ab49d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/107//#testresult/bc99fe13c60ab49d",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1722825096872,
          "stop" : 1722825098530,
          "duration" : 1658
        }
      }, {
        "uid" : "b2f49997537ba54b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/214//#testresult/b2f49997537ba54b",
        "status" : "passed",
        "time" : {
          "start" : 1722766491741,
          "stop" : 1722766495629,
          "duration" : 3888
        }
      }, {
        "uid" : "e95fa8322bda33",
        "reportUrl" : "https://Nat754.github.io/PulseWave/106//#testresult/e95fa8322bda33",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1722738777489,
          "stop" : 1722738779396,
          "duration" : 1907
        }
      }, {
        "uid" : "59fcc591830ce7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/105//#testresult/59fcc591830ce7",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1722652066070,
          "stop" : 1722652068443,
          "duration" : 2373
        }
      }, {
        "uid" : "12312ed7b67b32d0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/104//#testresult/12312ed7b67b32d0",
        "status" : "passed",
        "time" : {
          "start" : 1722565776375,
          "stop" : 1722565781908,
          "duration" : 5533
        }
      }, {
        "uid" : "1dd2c7c2af94aa22",
        "reportUrl" : "https://Nat754.github.io/PulseWave/103//#testresult/1dd2c7c2af94aa22",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1722479708980,
          "stop" : 1722479710993,
          "duration" : 2013
        }
      }, {
        "uid" : "5008dc4e10978d11",
        "reportUrl" : "https://Nat754.github.io/PulseWave/102//#testresult/5008dc4e10978d11",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1722391764389,
          "stop" : 1722391766170,
          "duration" : 1781
        }
      }, {
        "uid" : "f4e5e31884135afd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/101//#testresult/f4e5e31884135afd",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1722306551427,
          "stop" : 1722306553811,
          "duration" : 2384
        }
      }, {
        "uid" : "82674829d4c2a06c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/100//#testresult/82674829d4c2a06c",
        "status" : "passed",
        "time" : {
          "start" : 1722220293572,
          "stop" : 1722220297788,
          "duration" : 4216
        }
      }, {
        "uid" : "f3ecc3a5333af1cd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/99//#testresult/f3ecc3a5333af1cd",
        "status" : "passed",
        "time" : {
          "start" : 1722133947211,
          "stop" : 1722133950198,
          "duration" : 2987
        }
      }, {
        "uid" : "7577ca1ba5f49696",
        "reportUrl" : "https://Nat754.github.io/PulseWave/98//#testresult/7577ca1ba5f49696",
        "status" : "passed",
        "time" : {
          "start" : 1722047209985,
          "stop" : 1722047212861,
          "duration" : 2876
        }
      }, {
        "uid" : "320e9642d63d40fa",
        "reportUrl" : "https://Nat754.github.io/PulseWave/214//#testresult/320e9642d63d40fa",
        "status" : "passed",
        "time" : {
          "start" : 1722029242715,
          "stop" : 1722029245849,
          "duration" : 3134
        }
      }, {
        "uid" : "748d00b8c60a22c9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/97//#testresult/748d00b8c60a22c9",
        "status" : "passed",
        "time" : {
          "start" : 1721999079676,
          "stop" : 1721999083726,
          "duration" : 4050
        }
      }, {
        "uid" : "4100e82efe157ef6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/97//#testresult/4100e82efe157ef6",
        "status" : "passed",
        "time" : {
          "start" : 1721960939161,
          "stop" : 1721960942019,
          "duration" : 2858
        }
      }, {
        "uid" : "c97f200e94fdf2f2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/96//#testresult/c97f200e94fdf2f2",
        "status" : "passed",
        "time" : {
          "start" : 1721874548533,
          "stop" : 1721874552630,
          "duration" : 4097
        }
      }, {
        "uid" : "20b403f5fb947e10",
        "reportUrl" : "https://Nat754.github.io/PulseWave/213//#testresult/20b403f5fb947e10",
        "status" : "passed",
        "time" : {
          "start" : 1721797101541,
          "stop" : 1721797104806,
          "duration" : 3265
        }
      }, {
        "uid" : "dfb49a2a4c415098",
        "reportUrl" : "https://Nat754.github.io/PulseWave/95//#testresult/dfb49a2a4c415098",
        "status" : "passed",
        "time" : {
          "start" : 1721788126878,
          "stop" : 1721788130302,
          "duration" : 3424
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "dc31f479f8db84fc.json",
  "parameterValues" : [ ]
}