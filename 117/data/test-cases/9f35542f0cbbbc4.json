{
  "uid" : "9f35542f0cbbbc4",
  "name" : "POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке     auth/password/reset/confirm/{uid}/{token}",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_users_reset_password_confirm",
  "historyId" : "955584523e44b3e59bd87d6626c56c0c",
  "time" : {
    "start" : 1702502252301,
    "stop" : 1702502252886,
    "duration" : 585
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fced3f68590>\nuse_api_page = <pages.api_page.ApiPage object at 0x7fced3a03e50>\n\n    @allure.title(\"POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке \\\n    auth/password/reset/confirm/{uid}/{token}\")\n    def test_post_auth_users_reset_password_confirm(self, use_api_page):\n>       jwt = use_api_page.create_jwt(email2, password0)\n\ntests/test_api/test_api.py:233: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.api_page.ApiPage object at 0x7fced3a03e50>\ne_mail = 'test_stroyrem@mail.ru', passwrd = '!Q2w3e4r'\n\n    def create_jwt(self, e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\npages/api_page.py:74: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_page",
    "time" : {
      "start" : 1702502252300,
      "stop" : 1702502252300,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1702502203028,
      "stop" : 1702502203098,
      "duration" : 70
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1702502203098,
      "stop" : 1702502203098,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fced3f68590>\nuse_api_page = <pages.api_page.ApiPage object at 0x7fced3a03e50>\n\n    @allure.title(\"POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке \\\n    auth/password/reset/confirm/{uid}/{token}\")\n    def test_post_auth_users_reset_password_confirm(self, use_api_page):\n>       jwt = use_api_page.create_jwt(email2, password0)\n\ntests/test_api/test_api.py:233: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.api_page.ApiPage object at 0x7fced3a03e50>\ne_mail = 'test_stroyrem@mail.ru', passwrd = '!Q2w3e4r'\n\n    def create_jwt(self, e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\npages/api_page.py:74: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1702502252301,
        "stop" : 1702502252886,
        "duration" : 585
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/pages/api_page.py\", line 74, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az568-53"
  }, {
    "name" : "thread",
    "value" : "2423-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9f35542f0cbbbc4.json",
  "parameterValues" : [ ]
}