{
  "uid" : "65c080e5f0c7cc09",
  "name" : "DELETE Удалить колонку",
  "fullName" : "tests.test_api.test_api.TestAPI#test_delete_api_boards_id_column_id",
  "historyId" : "d43062706ac2fbaa882cfb0cdb8a8895",
  "time" : {
    "start" : 1714616358094,
    "stop" : 1714616359395,
    "duration" : 1301
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nKeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f3d9d4a66f0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f3d9ce205f0>\n\n    @pytest.mark.xfail\n    @allure.title(\"DELETE Удалить колонку\")\n    def test_delete_api_boards_id_column_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:392: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714616301924,
      "stop" : 1714616301924,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1714616358094,
      "stop" : 1714616358094,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714616301908,
      "stop" : 1714616301924,
      "duration" : 16
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nKeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f3d9d4a66f0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f3d9ce205f0>\n\n    @pytest.mark.xfail\n    @allure.title(\"DELETE Удалить колонку\")\n    def test_delete_api_boards_id_column_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:392: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1714616358094,
        "stop" : 1714616359395,
        "duration" : 1301
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1106-694"
  }, {
    "name" : "thread",
    "value" : "2271-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 16,
        "passed" : 0,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "7bb04d54e3ad2673",
        "reportUrl" : "https://Nat754.github.io/PulseWave/11//#testresult/7bb04d54e3ad2673",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nKeyError: 'access'",
        "time" : {
          "start" : 1714530292820,
          "stop" : 1714530294030,
          "duration" : 1210
        }
      }, {
        "uid" : "62f6c9b2296d21a3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/10//#testresult/62f6c9b2296d21a3",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f17c7d9ff50>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714443502896,
          "stop" : 1714443503086,
          "duration" : 190
        }
      }, {
        "uid" : "e96aefe7796a90e5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/e96aefe7796a90e5",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f7971de2360>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714357178030,
          "stop" : 1714357178521,
          "duration" : 491
        }
      }, {
        "uid" : "7e7f71bd1900da18",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/7e7f71bd1900da18",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1000)')))",
        "time" : {
          "start" : 1714270966191,
          "stop" : 1714270966505,
          "duration" : 314
        }
      }, {
        "uid" : "87a4ae4af05222d4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/87a4ae4af05222d4",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714184455008,
          "stop" : 1714184462631,
          "duration" : 7623
        }
      }, {
        "uid" : "7f309e7724650cbc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/7f309e7724650cbc",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714148001205,
          "stop" : 1714148007808,
          "duration" : 6603
        }
      }, {
        "uid" : "bb02c777fc6acbb5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/bb02c777fc6acbb5",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714098060833,
          "stop" : 1714098067866,
          "duration" : 7033
        }
      }, {
        "uid" : "33407391c453f90d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/33407391c453f90d",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714013982747,
          "stop" : 1714013988968,
          "duration" : 6221
        }
      }, {
        "uid" : "c172be24dfe1d222",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/c172be24dfe1d222",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713945433690,
          "stop" : 1713945440820,
          "duration" : 7130
        }
      }, {
        "uid" : "8ca4ac687134b8c1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/8ca4ac687134b8c1",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713925247539,
          "stop" : 1713925253769,
          "duration" : 6230
        }
      }, {
        "uid" : "7d6424126ffad8fd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/7d6424126ffad8fd",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713901059394,
          "stop" : 1713901066321,
          "duration" : 6927
        }
      }, {
        "uid" : "1abf185231bffe83",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/1abf185231bffe83",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713885184786,
          "stop" : 1713885192615,
          "duration" : 7829
        }
      }, {
        "uid" : "214909c48f85b386",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/214909c48f85b386",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713883113573,
          "stop" : 1713883120903,
          "duration" : 7330
        }
      }, {
        "uid" : "17a54b3c6786cdf5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/17a54b3c6786cdf5",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713881602459,
          "stop" : 1713881610521,
          "duration" : 8062
        }
      }, {
        "uid" : "63bd20f2537e2457",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/63bd20f2537e2457",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713878777233,
          "stop" : 1713878785566,
          "duration" : 8333
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "65c080e5f0c7cc09.json",
  "parameterValues" : [ ]
}