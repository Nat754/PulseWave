{
  "uid" : "cd901a7ba3b78f8c",
  "name" : "GET Информация о конкретной доске",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_api_workspace_id_boards_id",
  "historyId" : "598466f1e967902f5c12e56dfbd26f4c",
  "time" : {
    "start" : 1714616336375,
    "stop" : 1714616338031,
    "duration" : 1656
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nKeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f3d9d4a6bd0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f3d9ce10980>\n\n    @pytest.mark.xfail\n    @allure.title(\"GET Информация о конкретной доске\")\n    def test_get_api_workspace_id_boards_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:214: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1714616336375,
      "stop" : 1714616336375,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714616301924,
      "stop" : 1714616301924,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714616301908,
      "stop" : 1714616301924,
      "duration" : 16
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nKeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f3d9d4a6bd0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f3d9ce10980>\n\n    @pytest.mark.xfail\n    @allure.title(\"GET Информация о конкретной доске\")\n    def test_get_api_workspace_id_boards_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:214: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1714616336375,
        "stop" : 1714616338030,
        "duration" : 1655
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1106-694"
  }, {
    "name" : "thread",
    "value" : "2271-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 16,
        "passed" : 0,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "37c179100fb6f4fa",
        "reportUrl" : "https://Nat754.github.io/PulseWave/11//#testresult/37c179100fb6f4fa",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nKeyError: 'access'",
        "time" : {
          "start" : 1714530272188,
          "stop" : 1714530273400,
          "duration" : 1212
        }
      }, {
        "uid" : "92bc96bc9035a3d3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/10//#testresult/92bc96bc9035a3d3",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f17c7d8da60>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714443496172,
          "stop" : 1714443496937,
          "duration" : 765
        }
      }, {
        "uid" : "e2dd47e55b9eaeae",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/e2dd47e55b9eaeae",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f7971dd2660>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714357171253,
          "stop" : 1714357171380,
          "duration" : 127
        }
      }, {
        "uid" : "d0b16bed9ed0256a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/d0b16bed9ed0256a",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1000)')))",
        "time" : {
          "start" : 1714270957377,
          "stop" : 1714270958115,
          "duration" : 738
        }
      }, {
        "uid" : "b381e645daeca8a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/b381e645daeca8a",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714184339221,
          "stop" : 1714184345698,
          "duration" : 6477
        }
      }, {
        "uid" : "c89bdc1e414799d6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/c89bdc1e414799d6",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714147903647,
          "stop" : 1714147908930,
          "duration" : 5283
        }
      }, {
        "uid" : "33210184a4de982b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/33210184a4de982b",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714097960273,
          "stop" : 1714097966119,
          "duration" : 5846
        }
      }, {
        "uid" : "e3a3670faca2c91a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/e3a3670faca2c91a",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714013887449,
          "stop" : 1714013892927,
          "duration" : 5478
        }
      }, {
        "uid" : "592134cdbdcebdd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/592134cdbdcebdd",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713945329550,
          "stop" : 1713945334858,
          "duration" : 5308
        }
      }, {
        "uid" : "c513b2038c829958",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/c513b2038c829958",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713925150030,
          "stop" : 1713925155768,
          "duration" : 5738
        }
      }, {
        "uid" : "bcad8757d7b876d8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/bcad8757d7b876d8",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713900957874,
          "stop" : 1713900963492,
          "duration" : 5618
        }
      }, {
        "uid" : "7bbe32afa1f1e53d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/7bbe32afa1f1e53d",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713885066314,
          "stop" : 1713885072926,
          "duration" : 6612
        }
      }, {
        "uid" : "954187f3b8817932",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/954187f3b8817932",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713883001104,
          "stop" : 1713883007296,
          "duration" : 6192
        }
      }, {
        "uid" : "97e1c84c45bd8b3d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/97e1c84c45bd8b3d",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713881484354,
          "stop" : 1713881490684,
          "duration" : 6330
        }
      }, {
        "uid" : "34ecbdd271fa1b98",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/34ecbdd271fa1b98",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713878660780,
          "stop" : 1713878667000,
          "duration" : 6220
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "cd901a7ba3b78f8c.json",
  "parameterValues" : [ ]
}