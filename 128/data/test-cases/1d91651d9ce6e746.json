{
  "uid" : "1d91651d9ce6e746",
  "name" : "3.2, 3.2.1 Восстановить пароль на корректный емайл",
  "fullName" : "tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage#test_recovery_password_to_fill_correct_email",
  "historyId" : "3fbb91d2b204c3d1abb80d32ac377e08",
  "time" : {
    "start" : 1724640356139,
    "stop" : 1724640370561,
    "duration" : 14422
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55f4679146ca <unknown>\n#1 0x55f4675e5600 <unknown>\n#2 0x55f4675eb48f <unknown>\n#3 0x55f4675ed3a3 <unknown>\n#4 0x55f467676f6e <unknown>\n#5 0x55f4676578a2 <unknown>\n#6 0x55f46767604a <unknown>\n#7 0x55f467657643 <unknown>\n#8 0x55f467627d31 <unknown>\n#9 0x55f46762879e <unknown>\n#10 0x55f4678dc25b <unknown>\n#11 0x55f4678e01f2 <unknown>\n#12 0x55f4678c9615 <unknown>\n#13 0x55f4678e0d82 <unknown>\n#14 0x55f4678ae25f <unknown>\n#15 0x55f467903e68 <unknown>\n#16 0x55f467904040 <unknown>\n#17 0x55f46791349c <unknown>\n#18 0x7fe035a94ac3 <unknown>",
  "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7f3064363020>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7f306439bb30>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ec2564039fd5d422ec91fb85dabafa1\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        time.sleep(10)  # Получить ссылку на емайл\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:48: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:61: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f306439ae40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x55f467904040 \\\\u003Cunknown>\\\\n#17 0x55f46791349c \\\\u003Cunknown>\\\\n#18 0x7fe035a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=127.0.6533.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55f4679146ca <unknown>\nE       #1 0x55f4675e5600 <unknown>\nE       #2 0x55f4675eb48f <unknown>\nE       #3 0x55f4675ed3a3 <unknown>\nE       #4 0x55f467676f6e <unknown>\nE       #5 0x55f4676578a2 <unknown>\nE       #6 0x55f46767604a <unknown>\nE       #7 0x55f467657643 <unknown>\nE       #8 0x55f467627d31 <unknown>\nE       #9 0x55f46762879e <unknown>\nE       #10 0x55f4678dc25b <unknown>\nE       #11 0x55f4678e01f2 <unknown>\nE       #12 0x55f4678c9615 <unknown>\nE       #13 0x55f4678e0d82 <unknown>\nE       #14 0x55f4678ae25f <unknown>\nE       #15 0x55f467903e68 <unknown>\nE       #16 0x55f467904040 <unknown>\nE       #17 0x55f46791349c <unknown>\nE       #18 0x7fe035a94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1724640353204,
      "stop" : 1724640353403,
      "duration" : 199
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "recovery_page_open",
    "time" : {
      "start" : 1724640353404,
      "stop" : 1724640356138,
      "duration" : 2734
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1724640356084,
        "stop" : 1724640356110,
        "duration" : 26
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1724639553389,
      "stop" : 1724639553389,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1724639553370,
      "stop" : 1724639553389,
      "duration" : 19
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55f4679146ca <unknown>\n#1 0x55f4675e5600 <unknown>\n#2 0x55f4675eb48f <unknown>\n#3 0x55f4675ed3a3 <unknown>\n#4 0x55f467676f6e <unknown>\n#5 0x55f4676578a2 <unknown>\n#6 0x55f46767604a <unknown>\n#7 0x55f467657643 <unknown>\n#8 0x55f467627d31 <unknown>\n#9 0x55f46762879e <unknown>\n#10 0x55f4678dc25b <unknown>\n#11 0x55f4678e01f2 <unknown>\n#12 0x55f4678c9615 <unknown>\n#13 0x55f4678e0d82 <unknown>\n#14 0x55f4678ae25f <unknown>\n#15 0x55f467903e68 <unknown>\n#16 0x55f467904040 <unknown>\n#17 0x55f46791349c <unknown>\n#18 0x7fe035a94ac3 <unknown>",
    "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7f3064363020>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7f306439bb30>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3ec2564039fd5d422ec91fb85dabafa1\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        time.sleep(10)  # Получить ссылку на емайл\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:48: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:61: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f306439ae40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x55f467904040 \\\\u003Cunknown>\\\\n#17 0x55f46791349c \\\\u003Cunknown>\\\\n#18 0x7fe035a94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=127.0.6533.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55f4679146ca <unknown>\nE       #1 0x55f4675e5600 <unknown>\nE       #2 0x55f4675eb48f <unknown>\nE       #3 0x55f4675ed3a3 <unknown>\nE       #4 0x55f467676f6e <unknown>\nE       #5 0x55f4676578a2 <unknown>\nE       #6 0x55f46767604a <unknown>\nE       #7 0x55f467657643 <unknown>\nE       #8 0x55f467627d31 <unknown>\nE       #9 0x55f46762879e <unknown>\nE       #10 0x55f4678dc25b <unknown>\nE       #11 0x55f4678e01f2 <unknown>\nE       #12 0x55f4678c9615 <unknown>\nE       #13 0x55f4678e0d82 <unknown>\nE       #14 0x55f4678ae25f <unknown>\nE       #15 0x55f467903e68 <unknown>\nE       #16 0x55f467904040 <unknown>\nE       #17 0x55f46791349c <unknown>\nE       #18 0x7fe035a94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Заполнить поле емайл",
      "time" : {
        "start" : 1724640356139,
        "stop" : 1724640356213,
        "duration" : 74
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Продолжить'",
      "time" : {
        "start" : 1724640356213,
        "stop" : 1724640356278,
        "duration" : 65
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить ссылку для смены пароля на email",
      "time" : {
        "start" : 1724640366278,
        "stop" : 1724640368573,
        "duration" : 2295
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ввести пароль в поле пароль",
      "time" : {
        "start" : 1724640368767,
        "stop" : 1724640368832,
        "duration" : 65
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ввести пароль в поле подтверждение пароля",
      "time" : {
        "start" : 1724640368832,
        "stop" : 1724640368886,
        "duration" : 54
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Сохранить пароль'",
      "time" : {
        "start" : 1724640368886,
        "stop" : 1724640368968,
        "duration" : 82
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации",
      "time" : {
        "start" : 1724640368968,
        "stop" : 1724640370560,
        "duration" : 1592
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55f4679146ca <unknown>\n#1 0x55f4675e5600 <unknown>\n#2 0x55f4675eb48f <unknown>\n#3 0x55f4675ed3a3 <unknown>\n#4 0x55f467676f6e <unknown>\n#5 0x55f4676578a2 <unknown>\n#6 0x55f46767604a <unknown>\n#7 0x55f467657643 <unknown>\n#8 0x55f467627d31 <unknown>\n#9 0x55f46762879e <unknown>\n#10 0x55f4678dc25b <unknown>\n#11 0x55f4678e01f2 <unknown>\n#12 0x55f4678c9615 <unknown>\n#13 0x55f4678e0d82 <unknown>\n#14 0x55f4678ae25f <unknown>\n#15 0x55f467903e68 <unknown>\n#16 0x55f467904040 <unknown>\n#17 0x55f46791349c <unknown>\n#18 0x7fe035a94ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_password_recovery/test_password_recovery.py\", line 67, in test_recovery_password_to_fill_correct_email\n    recovery_page_open.click_resume_button()\n  File \"/home/runner/work/PulseWave/PulseWave/pages/password_recovery_page.py\", line 48, in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/pages/base_page.py\", line 61, in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 364, in _predicate\n    element = visibility_of(target)(driver)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 173, in _predicate\n    return _element_if_visible(element)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 179, in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n                      ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 252, in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 407, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "b27f6430b172ef61",
      "name" : "Screenshot",
      "source" : "b27f6430b172ef61.png",
      "type" : "image/png",
      "size" : 81394
    }, {
      "uid" : "1e727dd1de819ca5",
      "name" : "HTML source",
      "source" : "1e727dd1de819ca5.html",
      "type" : "text/html",
      "size" : 96347
    } ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1724640370779,
      "stop" : 1724640370841,
      "duration" : 62
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Восстановление пароля'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_password_recovery"
  }, {
    "name" : "suite",
    "value" : "test_password_recovery"
  }, {
    "name" : "subSuite",
    "value" : "TestPasswordRecoveryPage"
  }, {
    "name" : "host",
    "value" : "fv-az1435-55"
  }, {
    "name" : "thread",
    "value" : "2287-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_password_recovery.test_password_recovery"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 30,
        "passed" : 109,
        "unknown" : 0,
        "total" : 144
      },
      "items" : [ {
        "uid" : "fc7d5162dae1c125",
        "reportUrl" : "https://Nat754.github.io/PulseWave/127//#testresult/fc7d5162dae1c125",
        "status" : "passed",
        "time" : {
          "start" : 1724554246082,
          "stop" : 1724554263968,
          "duration" : 17886
        }
      }, {
        "uid" : "ac78779301e70c5e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/126//#testresult/ac78779301e70c5e",
        "status" : "passed",
        "time" : {
          "start" : 1724467461167,
          "stop" : 1724467477949,
          "duration" : 16782
        }
      }, {
        "uid" : "f95e969775b34cb1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/125//#testresult/f95e969775b34cb1",
        "status" : "passed",
        "time" : {
          "start" : 1724381247844,
          "stop" : 1724381265978,
          "duration" : 18134
        }
      }, {
        "uid" : "57efdd80b94db5d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/124//#testresult/57efdd80b94db5d",
        "status" : "passed",
        "time" : {
          "start" : 1724294999975,
          "stop" : 1724295017240,
          "duration" : 17265
        }
      }, {
        "uid" : "a25acfa03237046b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/123//#testresult/a25acfa03237046b",
        "status" : "passed",
        "time" : {
          "start" : 1724208380545,
          "stop" : 1724208397175,
          "duration" : 16630
        }
      }, {
        "uid" : "fd3be7fd81be3f1b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/122//#testresult/fd3be7fd81be3f1b",
        "status" : "passed",
        "time" : {
          "start" : 1724121839863,
          "stop" : 1724121856423,
          "duration" : 16560
        }
      }, {
        "uid" : "f8069f600f5a22f6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/121//#testresult/f8069f600f5a22f6",
        "status" : "passed",
        "time" : {
          "start" : 1724035613042,
          "stop" : 1724035629680,
          "duration" : 16638
        }
      }, {
        "uid" : "63f4b116b026d3f6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/120//#testresult/63f4b116b026d3f6",
        "status" : "passed",
        "time" : {
          "start" : 1723949352641,
          "stop" : 1723949369555,
          "duration" : 16914
        }
      }, {
        "uid" : "69b230a316c16c95",
        "reportUrl" : "https://Nat754.github.io/PulseWave/119//#testresult/69b230a316c16c95",
        "status" : "passed",
        "time" : {
          "start" : 1723862731761,
          "stop" : 1723862749061,
          "duration" : 17300
        }
      }, {
        "uid" : "7db4d4d80520cc1f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/118//#testresult/7db4d4d80520cc1f",
        "status" : "passed",
        "time" : {
          "start" : 1723776516945,
          "stop" : 1723776534660,
          "duration" : 17715
        }
      }, {
        "uid" : "5e3b72d02de2b809",
        "reportUrl" : "https://Nat754.github.io/PulseWave/117//#testresult/5e3b72d02de2b809",
        "status" : "passed",
        "time" : {
          "start" : 1723689943534,
          "stop" : 1723689960483,
          "duration" : 16949
        }
      }, {
        "uid" : "fcf04dc6b8273827",
        "reportUrl" : "https://Nat754.github.io/PulseWave/215//#testresult/fcf04dc6b8273827",
        "status" : "passed",
        "time" : {
          "start" : 1723652657286,
          "stop" : 1723652673483,
          "duration" : 16197
        }
      }, {
        "uid" : "785710f725ee55d2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/116//#testresult/785710f725ee55d2",
        "status" : "passed",
        "time" : {
          "start" : 1723603536551,
          "stop" : 1723603553689,
          "duration" : 17138
        }
      }, {
        "uid" : "51367021a3ed6544",
        "reportUrl" : "https://Nat754.github.io/PulseWave/115//#testresult/51367021a3ed6544",
        "status" : "passed",
        "time" : {
          "start" : 1723517167454,
          "stop" : 1723517183427,
          "duration" : 15973
        }
      }, {
        "uid" : "5caa44fd9c57d738",
        "reportUrl" : "https://Nat754.github.io/PulseWave/114//#testresult/5caa44fd9c57d738",
        "status" : "passed",
        "time" : {
          "start" : 1723441105780,
          "stop" : 1723441121933,
          "duration" : 16153
        }
      }, {
        "uid" : "581dd08ce8a7fd3d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/114//#testresult/581dd08ce8a7fd3d",
        "status" : "passed",
        "time" : {
          "start" : 1723430850303,
          "stop" : 1723430866940,
          "duration" : 16637
        }
      }, {
        "uid" : "1b6c2110f88582d1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/113//#testresult/1b6c2110f88582d1",
        "status" : "passed",
        "time" : {
          "start" : 1723344491149,
          "stop" : 1723344507994,
          "duration" : 16845
        }
      }, {
        "uid" : "d63a9cec805bd044",
        "reportUrl" : "https://Nat754.github.io/PulseWave/112//#testresult/d63a9cec805bd044",
        "status" : "passed",
        "time" : {
          "start" : 1723257869595,
          "stop" : 1723257885642,
          "duration" : 16047
        }
      }, {
        "uid" : "8afb9a5783010b58",
        "reportUrl" : "https://Nat754.github.io/PulseWave/111//#testresult/8afb9a5783010b58",
        "status" : "passed",
        "time" : {
          "start" : 1723171556466,
          "stop" : 1723171573101,
          "duration" : 16635
        }
      }, {
        "uid" : "f2935c149ebcdaee",
        "reportUrl" : "https://Nat754.github.io/PulseWave/110//#testresult/f2935c149ebcdaee",
        "status" : "passed",
        "time" : {
          "start" : 1723085239210,
          "stop" : 1723085256652,
          "duration" : 17442
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "1d91651d9ce6e746.json",
  "parameterValues" : [ "'chrome'" ]
}