{
  "uid" : "527c6b76be962ad3",
  "name" : "PATCH Частично обновить колонку (название/порядковый номер)",
  "fullName" : "tests.test_api.test_api.TestAPI#test_patch_api_boards_id_column_id",
  "historyId" : "9cc1f3825aceb9b9b771d880923f1311",
  "time" : {
    "start" : 1714789033500,
    "stop" : 1714789034916,
    "duration" : 1416
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nKeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7feef53af110>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7feef4cf5730>\n\n    @pytest.mark.xfail\n    @allure.title(\"PATCH Частично обновить колонку (название/порядковый номер)\")\n    def test_patch_api_boards_id_column_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1714789033500,
      "stop" : 1714789033500,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714788984061,
      "stop" : 1714788984078,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714788984078,
      "stop" : 1714788984078,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nKeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7feef53af110>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7feef4cf5730>\n\n    @pytest.mark.xfail\n    @allure.title(\"PATCH Частично обновить колонку (название/порядковый номер)\")\n    def test_patch_api_boards_id_column_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1714789033500,
        "stop" : 1714789034916,
        "duration" : 1416
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az915-783"
  }, {
    "name" : "thread",
    "value" : "2283-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 18,
        "passed" : 0,
        "unknown" : 0,
        "total" : 18
      },
      "items" : [ {
        "uid" : "dbf6326f9e527b71",
        "reportUrl" : "https://Nat754.github.io/PulseWave/13//#testresult/dbf6326f9e527b71",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nKeyError: 'access'",
        "time" : {
          "start" : 1714702896740,
          "stop" : 1714702898024,
          "duration" : 1284
        }
      }, {
        "uid" : "403cf460314e25ba",
        "reportUrl" : "https://Nat754.github.io/PulseWave/12//#testresult/403cf460314e25ba",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nKeyError: 'access'",
        "time" : {
          "start" : 1714616348972,
          "stop" : 1714616350366,
          "duration" : 1394
        }
      }, {
        "uid" : "f86d44ff10270196",
        "reportUrl" : "https://Nat754.github.io/PulseWave/11//#testresult/f86d44ff10270196",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nKeyError: 'access'",
        "time" : {
          "start" : 1714530283631,
          "stop" : 1714530284998,
          "duration" : 1367
        }
      }, {
        "uid" : "e4059bc03cda33a6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/10//#testresult/e4059bc03cda33a6",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f17c7d9e960>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714443500098,
          "stop" : 1714443500291,
          "duration" : 193
        }
      }, {
        "uid" : "799c980e7ab702ae",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/799c980e7ab702ae",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f7971debc50>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714357175370,
          "stop" : 1714357175495,
          "duration" : 125
        }
      }, {
        "uid" : "4fec545899b21f33",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/4fec545899b21f33",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1000)')))",
        "time" : {
          "start" : 1714270962897,
          "stop" : 1714270963226,
          "duration" : 329
        }
      }, {
        "uid" : "1da866c3b81c928d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/1da866c3b81c928d",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714184394131,
          "stop" : 1714184401603,
          "duration" : 7472
        }
      }, {
        "uid" : "85acc6a36383c3da",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/85acc6a36383c3da",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714147949667,
          "stop" : 1714147956197,
          "duration" : 6530
        }
      }, {
        "uid" : "ef64ab5979a39560",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/ef64ab5979a39560",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714098008165,
          "stop" : 1714098014954,
          "duration" : 6789
        }
      }, {
        "uid" : "e1b1c3fde1b5da0d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/e1b1c3fde1b5da0d",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714013931957,
          "stop" : 1714013938079,
          "duration" : 6122
        }
      }, {
        "uid" : "c79b6073858a51b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/c79b6073858a51b",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713945379088,
          "stop" : 1713945386388,
          "duration" : 7300
        }
      }, {
        "uid" : "7d252be5137be84b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/7d252be5137be84b",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713925195033,
          "stop" : 1713925201319,
          "duration" : 6286
        }
      }, {
        "uid" : "2fc9e651abe5c91",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/2fc9e651abe5c91",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713901006292,
          "stop" : 1713901012949,
          "duration" : 6657
        }
      }, {
        "uid" : "1a5d1f82a66ff7ef",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/1a5d1f82a66ff7ef",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713885122460,
          "stop" : 1713885130420,
          "duration" : 7960
        }
      }, {
        "uid" : "98177c6dc94bb02b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/98177c6dc94bb02b",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713883054982,
          "stop" : 1713883062585,
          "duration" : 7603
        }
      }, {
        "uid" : "92f7c89254943bc1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/92f7c89254943bc1",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713881540023,
          "stop" : 1713881548054,
          "duration" : 8031
        }
      }, {
        "uid" : "a8df008542c16611",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/a8df008542c16611",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713878714773,
          "stop" : 1713878722842,
          "duration" : 8069
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "527c6b76be962ad3.json",
  "parameterValues" : [ ]
}