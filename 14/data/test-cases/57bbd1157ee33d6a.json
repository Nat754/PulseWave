{
  "uid" : "57bbd1157ee33d6a",
  "name" : "GET Получить список всех пользователей для поиска",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_api_user_list",
  "historyId" : "7973464f532b6b2bcaf186b99044b722",
  "time" : {
    "start" : 1714789071547,
    "stop" : 1714789073063,
    "duration" : 1516
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7feef53b3a10>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7feef4cfcef0>\n\n    @allure.title(\"GET Получить список всех пользователей для поиска\")\n    def test_get_api_user_list(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:570: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1714789071546,
      "stop" : 1714789071546,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714788984061,
      "stop" : 1714788984078,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714788984078,
      "stop" : 1714788984078,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7feef53b3a10>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7feef4cfcef0>\n\n    @allure.title(\"GET Получить список всех пользователей для поиска\")\n    def test_get_api_user_list(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:570: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1714789071547,
        "stop" : 1714789073063,
        "duration" : 1516
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az915-783"
  }, {
    "name" : "thread",
    "value" : "2283-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 18
      },
      "items" : [ {
        "uid" : "6aa76ca19bcc5851",
        "reportUrl" : "https://Nat754.github.io/PulseWave/13//#testresult/6aa76ca19bcc5851",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714702931189,
          "stop" : 1714702932318,
          "duration" : 1129
        }
      }, {
        "uid" : "5e0f5f877f5c7a07",
        "reportUrl" : "https://Nat754.github.io/PulseWave/12//#testresult/5e0f5f877f5c7a07",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714616383437,
          "stop" : 1714616384697,
          "duration" : 1260
        }
      }, {
        "uid" : "21fa97c8390caa06",
        "reportUrl" : "https://Nat754.github.io/PulseWave/11//#testresult/21fa97c8390caa06",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714530318100,
          "stop" : 1714530319265,
          "duration" : 1165
        }
      }, {
        "uid" : "3a385d22f9597216",
        "reportUrl" : "https://Nat754.github.io/PulseWave/10//#testresult/3a385d22f9597216",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f17c7d93ce0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714443508857,
          "stop" : 1714443509047,
          "duration" : 190
        }
      }, {
        "uid" : "1fdc3ef0741de2c1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/1fdc3ef0741de2c1",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f7971dd4b30>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714357183348,
          "stop" : 1714357183474,
          "duration" : 126
        }
      }, {
        "uid" : "9a5de259e5697cb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/9a5de259e5697cb",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.SSLError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1000)')))",
        "time" : {
          "start" : 1714270974153,
          "stop" : 1714270974468,
          "duration" : 315
        }
      }, {
        "uid" : "e84adc9a138853ea",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/e84adc9a138853ea",
        "status" : "passed",
        "time" : {
          "start" : 1714184576904,
          "stop" : 1714184579157,
          "duration" : 2253
        }
      }, {
        "uid" : "adb34d42a302cca0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/adb34d42a302cca0",
        "status" : "passed",
        "time" : {
          "start" : 1714148103927,
          "stop" : 1714148106159,
          "duration" : 2232
        }
      }, {
        "uid" : "d30af4ecb071cac",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/d30af4ecb071cac",
        "status" : "passed",
        "time" : {
          "start" : 1714098163693,
          "stop" : 1714098165585,
          "duration" : 1892
        }
      }, {
        "uid" : "775134deb4cbd50b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/775134deb4cbd50b",
        "status" : "passed",
        "time" : {
          "start" : 1714014080427,
          "stop" : 1714014082455,
          "duration" : 2028
        }
      }, {
        "uid" : "8468b06db1c9a1ce",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/8468b06db1c9a1ce",
        "status" : "passed",
        "time" : {
          "start" : 1713945543563,
          "stop" : 1713945545396,
          "duration" : 1833
        }
      }, {
        "uid" : "8a6bad9d5fbcf636",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/8a6bad9d5fbcf636",
        "status" : "passed",
        "time" : {
          "start" : 1713925347224,
          "stop" : 1713925348947,
          "duration" : 1723
        }
      }, {
        "uid" : "9afc865e4d1c83e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/9afc865e4d1c83e",
        "status" : "passed",
        "time" : {
          "start" : 1713901164799,
          "stop" : 1713901166819,
          "duration" : 2020
        }
      }, {
        "uid" : "309dbd0d0d740455",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/309dbd0d0d740455",
        "status" : "passed",
        "time" : {
          "start" : 1713885310871,
          "stop" : 1713885313611,
          "duration" : 2740
        }
      }, {
        "uid" : "d65bc13a12bec93b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/d65bc13a12bec93b",
        "status" : "passed",
        "time" : {
          "start" : 1713883231753,
          "stop" : 1713883234137,
          "duration" : 2384
        }
      }, {
        "uid" : "76fdfd2bfaa56676",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/76fdfd2bfaa56676",
        "status" : "passed",
        "time" : {
          "start" : 1713881730078,
          "stop" : 1713881732510,
          "duration" : 2432
        }
      }, {
        "uid" : "6624a98847450ee5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/6624a98847450ee5",
        "status" : "passed",
        "time" : {
          "start" : 1713878902281,
          "stop" : 1713878904530,
          "duration" : 2249
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "57bbd1157ee33d6a.json",
  "parameterValues" : [ ]
}