{
  "uid" : "776d49a03e64c41b",
  "name" : "PATCH Частично обновить данные авторизованного пользователя",
  "fullName" : "tests.test_api.test_api.TestAPI#test_patch_auth_users_id",
  "historyId" : "066921845cf94d6c4358dca36744a0db",
  "time" : {
    "start" : 1714789080519,
    "stop" : 1714789081992,
    "duration" : 1473
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7feef53b3080>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7feef4d00ec0>\n\n    @allure.title(\"PATCH Частично обновить данные авторизованного пользователя\")\n    def test_patch_auth_users_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:615: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1714789080519,
      "stop" : 1714789080519,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714788984061,
      "stop" : 1714788984078,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714788984078,
      "stop" : 1714788984078,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7feef53b3080>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7feef4d00ec0>\n\n    @allure.title(\"PATCH Частично обновить данные авторизованного пользователя\")\n    def test_patch_auth_users_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:615: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1714789080519,
        "stop" : 1714789081991,
        "duration" : 1472
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az915-783"
  }, {
    "name" : "thread",
    "value" : "2283-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 18
      },
      "items" : [ {
        "uid" : "5b073d665671029c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/13//#testresult/5b073d665671029c",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714702938611,
          "stop" : 1714702939786,
          "duration" : 1175
        }
      }, {
        "uid" : "37569c06b3c5a556",
        "reportUrl" : "https://Nat754.github.io/PulseWave/12//#testresult/37569c06b3c5a556",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714616391210,
          "stop" : 1714616392417,
          "duration" : 1207
        }
      }, {
        "uid" : "4ecf2d11b0f3fa7a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/11//#testresult/4ecf2d11b0f3fa7a",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714530325620,
          "stop" : 1714530326846,
          "duration" : 1226
        }
      }, {
        "uid" : "18d3e3964183f427",
        "reportUrl" : "https://Nat754.github.io/PulseWave/10//#testresult/18d3e3964183f427",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f17c7bdaf90>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714443510733,
          "stop" : 1714443510924,
          "duration" : 191
        }
      }, {
        "uid" : "543437dfbdc00719",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/543437dfbdc00719",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f7971c1b7a0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714357185188,
          "stop" : 1714357185314,
          "duration" : 126
        }
      }, {
        "uid" : "dbd792c38e76ef09",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/dbd792c38e76ef09",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.SSLError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1000)')))",
        "time" : {
          "start" : 1714270976991,
          "stop" : 1714270977305,
          "duration" : 314
        }
      }, {
        "uid" : "99aae0786d722dc5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/99aae0786d722dc5",
        "status" : "passed",
        "time" : {
          "start" : 1714184598509,
          "stop" : 1714184603326,
          "duration" : 4817
        }
      }, {
        "uid" : "35b7f9ea1776a507",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/35b7f9ea1776a507",
        "status" : "passed",
        "time" : {
          "start" : 1714148121063,
          "stop" : 1714148125079,
          "duration" : 4016
        }
      }, {
        "uid" : "8a837bb6db137329",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/8a837bb6db137329",
        "status" : "passed",
        "time" : {
          "start" : 1714098180444,
          "stop" : 1714098184625,
          "duration" : 4181
        }
      }, {
        "uid" : "7379dab072fc2746",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/7379dab072fc2746",
        "status" : "passed",
        "time" : {
          "start" : 1714014096617,
          "stop" : 1714014100066,
          "duration" : 3449
        }
      }, {
        "uid" : "496eef15d6d18221",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/496eef15d6d18221",
        "status" : "passed",
        "time" : {
          "start" : 1713945561807,
          "stop" : 1713945565646,
          "duration" : 3839
        }
      }, {
        "uid" : "6c87c37f7ac92c28",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/6c87c37f7ac92c28",
        "status" : "passed",
        "time" : {
          "start" : 1713925362798,
          "stop" : 1713925366454,
          "duration" : 3656
        }
      }, {
        "uid" : "6abe76b8093155ee",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/6abe76b8093155ee",
        "status" : "passed",
        "time" : {
          "start" : 1713901181928,
          "stop" : 1713901185588,
          "duration" : 3660
        }
      }, {
        "uid" : "a6fac54b5144e7a5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/a6fac54b5144e7a5",
        "status" : "passed",
        "time" : {
          "start" : 1713885332517,
          "stop" : 1713885337837,
          "duration" : 5320
        }
      }, {
        "uid" : "fee45bf0ddcbe157",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/fee45bf0ddcbe157",
        "status" : "passed",
        "time" : {
          "start" : 1713883252091,
          "stop" : 1713883256346,
          "duration" : 4255
        }
      }, {
        "uid" : "c3ae29fb0e04127c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/c3ae29fb0e04127c",
        "status" : "passed",
        "time" : {
          "start" : 1713881750303,
          "stop" : 1713881755192,
          "duration" : 4889
        }
      }, {
        "uid" : "2c3d21fc5c8b9d94",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/2c3d21fc5c8b9d94",
        "status" : "passed",
        "time" : {
          "start" : 1713878923475,
          "stop" : 1713878928384,
          "duration" : 4909
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "776d49a03e64c41b.json",
  "parameterValues" : [ ]
}