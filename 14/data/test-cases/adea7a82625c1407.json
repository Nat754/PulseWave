{
  "uid" : "adea7a82625c1407",
  "name" : "GET Получить данные авторизованного пользователя по id",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_auth_user_id",
  "historyId" : "a6494b266d51cb0695ca878ab92f17b9",
  "time" : {
    "start" : 1714789077659,
    "stop" : 1714789079075,
    "duration" : 1416
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7feef53b1dc0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7feef4cf9070>\n\n    @allure.title(\"GET Получить данные авторизованного пользователя по id\")\n    def test_get_auth_user_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:599: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1714789077659,
      "stop" : 1714789077659,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714788984061,
      "stop" : 1714788984078,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714788984078,
      "stop" : 1714788984078,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7feef53b1dc0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7feef4cf9070>\n\n    @allure.title(\"GET Получить данные авторизованного пользователя по id\")\n    def test_get_auth_user_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:599: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1714789077659,
        "stop" : 1714789079075,
        "duration" : 1416
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az915-783"
  }, {
    "name" : "thread",
    "value" : "2283-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 18
      },
      "items" : [ {
        "uid" : "994d9979501ea3b8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/13//#testresult/994d9979501ea3b8",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714702936189,
          "stop" : 1714702937445,
          "duration" : 1256
        }
      }, {
        "uid" : "d7c0899e45228702",
        "reportUrl" : "https://Nat754.github.io/PulseWave/12//#testresult/d7c0899e45228702",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714616388467,
          "stop" : 1714616389663,
          "duration" : 1196
        }
      }, {
        "uid" : "dab2afc8d5f16bd0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/11//#testresult/dab2afc8d5f16bd0",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714530323244,
          "stop" : 1714530324412,
          "duration" : 1168
        }
      }, {
        "uid" : "5f5c172a0a76d981",
        "reportUrl" : "https://Nat754.github.io/PulseWave/10//#testresult/5f5c172a0a76d981",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f17c7bd6b40>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714443510113,
          "stop" : 1714443510303,
          "duration" : 190
        }
      }, {
        "uid" : "50a3d598befb0ef9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/50a3d598befb0ef9",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f7971c11d30>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714357184700,
          "stop" : 1714357184825,
          "duration" : 125
        }
      }, {
        "uid" : "700118b298c068b1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/700118b298c068b1",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.SSLError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1000)')))",
        "time" : {
          "start" : 1714270976050,
          "stop" : 1714270976365,
          "duration" : 315
        }
      }, {
        "uid" : "fa8c3f6dd5b981bc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/fa8c3f6dd5b981bc",
        "status" : "passed",
        "time" : {
          "start" : 1714184588299,
          "stop" : 1714184593585,
          "duration" : 5286
        }
      }, {
        "uid" : "acc7849b9507f958",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/acc7849b9507f958",
        "status" : "passed",
        "time" : {
          "start" : 1714148113290,
          "stop" : 1714148117167,
          "duration" : 3877
        }
      }, {
        "uid" : "8d5751b1807fabd6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/8d5751b1807fabd6",
        "status" : "passed",
        "time" : {
          "start" : 1714098172823,
          "stop" : 1714098176522,
          "duration" : 3699
        }
      }, {
        "uid" : "68e0287a8cc42471",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/68e0287a8cc42471",
        "status" : "passed",
        "time" : {
          "start" : 1714014089106,
          "stop" : 1714014092925,
          "duration" : 3819
        }
      }, {
        "uid" : "d563ebd29cd79dd1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/d563ebd29cd79dd1",
        "status" : "passed",
        "time" : {
          "start" : 1713945552656,
          "stop" : 1713945557279,
          "duration" : 4623
        }
      }, {
        "uid" : "c84db6f8412e7611",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/c84db6f8412e7611",
        "status" : "passed",
        "time" : {
          "start" : 1713925355657,
          "stop" : 1713925359077,
          "duration" : 3420
        }
      }, {
        "uid" : "587609721bf3f4ec",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/587609721bf3f4ec",
        "status" : "passed",
        "time" : {
          "start" : 1713901173983,
          "stop" : 1713901177781,
          "duration" : 3798
        }
      }, {
        "uid" : "295fdb6bb4163f8a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/295fdb6bb4163f8a",
        "status" : "passed",
        "time" : {
          "start" : 1713885322659,
          "stop" : 1713885327541,
          "duration" : 4882
        }
      }, {
        "uid" : "15583d25f105ed5d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/15583d25f105ed5d",
        "status" : "passed",
        "time" : {
          "start" : 1713883242737,
          "stop" : 1713883247603,
          "duration" : 4866
        }
      }, {
        "uid" : "3fe26815772ac4da",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/3fe26815772ac4da",
        "status" : "passed",
        "time" : {
          "start" : 1713881741005,
          "stop" : 1713881745806,
          "duration" : 4801
        }
      }, {
        "uid" : "6a2b437aafd73145",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/6a2b437aafd73145",
        "status" : "passed",
        "time" : {
          "start" : 1713878913912,
          "stop" : 1713878918735,
          "duration" : 4823
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "adea7a82625c1407.json",
  "parameterValues" : [ ]
}