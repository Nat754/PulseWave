{
  "uid" : "8fc0f884d2d4f5f6",
  "name" : "GET Список стикеров задачи",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_api_task_id_sticker",
  "historyId" : "6d6ecebe240d50664140f603964b63e9",
  "time" : {
    "start" : 1706129781811,
    "stop" : 1706129785571,
    "duration" : 3760
  },
  "status" : "broken",
  "statusMessage" : "IndexError: Cannot choose from an empty sequence",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f51fb9adad0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f51fd6db890>\n\n    @allure.title(\"GET Список стикеров задачи\")\n    def test_get_api_task_id_sticker(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n>       column_id, task_id = use_api_base.get_column_task_id()\n\ntests/test_api/test_api.py:390: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:159: in get_column_task_id\n    column_id = self.get_board_column_id()[1]\napi_testing/api_base.py:149: in get_board_column_id\n    board_id = self.get_board_id()[1]\napi_testing/api_base.py:143: in get_board_id\n    board_id = random.choice(boards_id)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <random.Random object at 0x557e6b6fcb20>, seq = []\n\n    def choice(self, seq):\n        \"\"\"Choose a random element from a non-empty sequence.\"\"\"\n    \n        # As an accommodation for NumPy, we don't use \"if not seq\"\n        # because bool(numpy.array()) raises a ValueError.\n        if not len(seq):\n>           raise IndexError('Cannot choose from an empty sequence')\nE           IndexError: Cannot choose from an empty sequence\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/random.py:373: IndexError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1706129674479,
      "stop" : 1706129674479,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1706129781811,
      "stop" : 1706129781811,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1706129674464,
      "stop" : 1706129674479,
      "duration" : 15
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "IndexError: Cannot choose from an empty sequence",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f51fb9adad0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f51fd6db890>\n\n    @allure.title(\"GET Список стикеров задачи\")\n    def test_get_api_task_id_sticker(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n>       column_id, task_id = use_api_base.get_column_task_id()\n\ntests/test_api/test_api.py:390: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:159: in get_column_task_id\n    column_id = self.get_board_column_id()[1]\napi_testing/api_base.py:149: in get_board_column_id\n    board_id = self.get_board_id()[1]\napi_testing/api_base.py:143: in get_board_id\n    board_id = random.choice(boards_id)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <random.Random object at 0x557e6b6fcb20>, seq = []\n\n    def choice(self, seq):\n        \"\"\"Choose a random element from a non-empty sequence.\"\"\"\n    \n        # As an accommodation for NumPy, we don't use \"if not seq\"\n        # because bool(numpy.array()) raises a ValueError.\n        if not len(seq):\n>           raise IndexError('Cannot choose from an empty sequence')\nE           IndexError: Cannot choose from an empty sequence\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/random.py:373: IndexError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1706129781811,
        "stop" : 1706129782399,
        "duration" : 588
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0
    }, {
      "name" : "Получить id задачи",
      "time" : {
        "start" : 1706129782400,
        "stop" : 1706129785571,
        "duration" : 3171
      },
      "status" : "broken",
      "statusMessage" : "IndexError: Cannot choose from an empty sequence\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 159, in get_column_task_id\n    column_id = self.get_board_column_id()[1]\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 149, in get_board_column_id\n    board_id = self.get_board_id()[1]\n               ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 143, in get_board_id\n    board_id = random.choice(boards_id)\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/random.py\", line 373, in choice\n    raise IndexError('Cannot choose from an empty sequence')\n",
      "steps" : [ {
        "name" : "Получить access токен пользователя на емайл",
        "time" : {
          "start" : 1706129782400,
          "stop" : 1706129782982,
          "duration" : 582
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0
      }, {
        "name" : "Получить id колонки",
        "time" : {
          "start" : 1706129782983,
          "stop" : 1706129785571,
          "duration" : 2588
        },
        "status" : "broken",
        "statusMessage" : "IndexError: Cannot choose from an empty sequence\n",
        "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 149, in get_board_column_id\n    board_id = self.get_board_id()[1]\n               ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 143, in get_board_id\n    board_id = random.choice(boards_id)\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/random.py\", line 373, in choice\n    raise IndexError('Cannot choose from an empty sequence')\n",
        "steps" : [ {
          "name" : "Получить access токен пользователя на емайл",
          "time" : {
            "start" : 1706129782983,
            "stop" : 1706129783562,
            "duration" : 579
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0
        }, {
          "name" : "Получить id доски",
          "time" : {
            "start" : 1706129783563,
            "stop" : 1706129785562,
            "duration" : 1999
          },
          "status" : "broken",
          "statusMessage" : "IndexError: Cannot choose from an empty sequence\n",
          "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 143, in get_board_id\n    board_id = random.choice(boards_id)\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/random.py\", line 373, in choice\n    raise IndexError('Cannot choose from an empty sequence')\n",
          "steps" : [ {
            "name" : "Получить access токен пользователя на емайл",
            "time" : {
              "start" : 1706129783563,
              "stop" : 1706129784164,
              "duration" : 601
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "shouldDisplayMessage" : false,
            "hasContent" : false,
            "stepsCount" : 0,
            "attachmentsCount" : 0
          }, {
            "name" : "Получить id рабочего пространства",
            "time" : {
              "start" : 1706129784165,
              "stop" : 1706129785149,
              "duration" : 984
            },
            "status" : "passed",
            "steps" : [ {
              "name" : "Получить access токен пользователя на емайл",
              "time" : {
                "start" : 1706129784165,
                "stop" : 1706129784744,
                "duration" : 579
              },
              "status" : "passed",
              "steps" : [ ],
              "attachments" : [ ],
              "parameters" : [ ],
              "shouldDisplayMessage" : false,
              "hasContent" : false,
              "stepsCount" : 0,
              "attachmentsCount" : 0
            } ],
            "attachments" : [ ],
            "parameters" : [ ],
            "shouldDisplayMessage" : false,
            "hasContent" : true,
            "stepsCount" : 1,
            "attachmentsCount" : 0
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "shouldDisplayMessage" : true,
          "hasContent" : true,
          "stepsCount" : 3,
          "attachmentsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 5,
        "attachmentsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 7,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 9,
    "attachmentsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az885-402"
  }, {
    "name" : "thread",
    "value" : "2267-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "8fc0f884d2d4f5f6.json",
  "parameterValues" : [ ]
}