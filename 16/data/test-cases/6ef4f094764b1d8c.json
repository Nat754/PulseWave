{
  "uid" : "6ef4f094764b1d8c",
  "name" : "POST Запрос на смену почты",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_change_email",
  "historyId" : "b05e07f6bb5e624e3a2d1bcc8ca2be0d",
  "time" : {
    "start" : 1714962431086,
    "stop" : 1714962443650,
    "duration" : 12564
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f64ca1ae180>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f64c9b3c320>\n\n    @allure.title(\"POST Запрос на смену почты\")\n    def test_post_auth_change_email(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.constant.BASE_URL}auth/change_email/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                                 json=self.constant.NEW_EMAIL)\n        time.sleep(10)\n>       Assertions.assert_status_code(response, self.code.STATUS_204)\n\ntests/test_api/test_api.py:636: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 204\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 204. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1714962431086,
      "stop" : 1714962431086,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714962123210,
      "stop" : 1714962123227,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714962123227,
      "stop" : 1714962123227,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f64ca1ae180>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f64c9b3c320>\n\n    @allure.title(\"POST Запрос на смену почты\")\n    def test_post_auth_change_email(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.constant.BASE_URL}auth/change_email/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                                 json=self.constant.NEW_EMAIL)\n        time.sleep(10)\n>       Assertions.assert_status_code(response, self.code.STATUS_204)\n\ntests/test_api/test_api.py:636: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 204\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 204. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1714962431086,
        "stop" : 1714962432290,
        "duration" : 1204
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 204",
      "time" : {
        "start" : 1714962443650,
        "stop" : 1714962443650,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1210-542"
  }, {
    "name" : "thread",
    "value" : "2299-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 21
      },
      "items" : [ {
        "uid" : "6986b9ebaad3b458",
        "reportUrl" : "https://Nat754.github.io/PulseWave/15//#testresult/6986b9ebaad3b458",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400",
        "time" : {
          "start" : 1714876020618,
          "stop" : 1714876033832,
          "duration" : 13214
        }
      }, {
        "uid" : "3bb14282122ebad3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/14//#testresult/3bb14282122ebad3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400",
        "time" : {
          "start" : 1714827545437,
          "stop" : 1714827558024,
          "duration" : 12587
        }
      }, {
        "uid" : "27863dca3a5a36f5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/14//#testresult/27863dca3a5a36f5",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714789083669,
          "stop" : 1714789085170,
          "duration" : 1501
        }
      }, {
        "uid" : "13407dc1ae07c924",
        "reportUrl" : "https://Nat754.github.io/PulseWave/13//#testresult/13407dc1ae07c924",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714702941257,
          "stop" : 1714702942379,
          "duration" : 1122
        }
      }, {
        "uid" : "f03b45d5ff491093",
        "reportUrl" : "https://Nat754.github.io/PulseWave/12//#testresult/f03b45d5ff491093",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714616393749,
          "stop" : 1714616394948,
          "duration" : 1199
        }
      }, {
        "uid" : "54012b110339e7c0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/11//#testresult/54012b110339e7c0",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1714530328237,
          "stop" : 1714530329591,
          "duration" : 1354
        }
      }, {
        "uid" : "76379376eb474216",
        "reportUrl" : "https://Nat754.github.io/PulseWave/10//#testresult/76379376eb474216",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f17c7bdc170>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714443511356,
          "stop" : 1714443511547,
          "duration" : 191
        }
      }, {
        "uid" : "ed6904b78a7495f6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/ed6904b78a7495f6",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f7971c1caa0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714357185676,
          "stop" : 1714357185801,
          "duration" : 125
        }
      }, {
        "uid" : "bd2863f1098f77ea",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/bd2863f1098f77ea",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.SSLError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1000)')))",
        "time" : {
          "start" : 1714270977921,
          "stop" : 1714270978250,
          "duration" : 329
        }
      }, {
        "uid" : "136ee6145b69ab32",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/136ee6145b69ab32",
        "status" : "passed",
        "time" : {
          "start" : 1714184605758,
          "stop" : 1714184619161,
          "duration" : 13403
        }
      }, {
        "uid" : "c604f6470bfd7bb9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/c604f6470bfd7bb9",
        "status" : "passed",
        "time" : {
          "start" : 1714148127123,
          "stop" : 1714148140064,
          "duration" : 12941
        }
      }, {
        "uid" : "b6f72de4d38041aa",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/b6f72de4d38041aa",
        "status" : "passed",
        "time" : {
          "start" : 1714098186632,
          "stop" : 1714098199745,
          "duration" : 13113
        }
      }, {
        "uid" : "539a796899fa32bd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/539a796899fa32bd",
        "status" : "passed",
        "time" : {
          "start" : 1714014101957,
          "stop" : 1714014114852,
          "duration" : 12895
        }
      }, {
        "uid" : "db3d9beb758a4bce",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/db3d9beb758a4bce",
        "status" : "passed",
        "time" : {
          "start" : 1713945567646,
          "stop" : 1713945581454,
          "duration" : 13808
        }
      }, {
        "uid" : "e22f446f152bdfbe",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/e22f446f152bdfbe",
        "status" : "passed",
        "time" : {
          "start" : 1713925368249,
          "stop" : 1713925381264,
          "duration" : 13015
        }
      }, {
        "uid" : "cabd28d12e94b220",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/cabd28d12e94b220",
        "status" : "passed",
        "time" : {
          "start" : 1713901187744,
          "stop" : 1713901200931,
          "duration" : 13187
        }
      }, {
        "uid" : "3497ac09bf702fc7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/3497ac09bf702fc7",
        "status" : "passed",
        "time" : {
          "start" : 1713885340454,
          "stop" : 1713885354367,
          "duration" : 13913
        }
      }, {
        "uid" : "e13fc165414e9d97",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/e13fc165414e9d97",
        "status" : "passed",
        "time" : {
          "start" : 1713883258472,
          "stop" : 1713883271757,
          "duration" : 13285
        }
      }, {
        "uid" : "b5d1476d4ea39c77",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/b5d1476d4ea39c77",
        "status" : "passed",
        "time" : {
          "start" : 1713881757544,
          "stop" : 1713881771420,
          "duration" : 13876
        }
      }, {
        "uid" : "b92af0c70abc66a8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/b92af0c70abc66a8",
        "status" : "passed",
        "time" : {
          "start" : 1713878931499,
          "stop" : 1713878945059,
          "duration" : 13560
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "6ef4f094764b1d8c.json",
  "parameterValues" : [ ]
}