{
  "uid" : "92acb9381c0d6399",
  "name" : "DELETE Активировать и удалить авторизованного пользователя",
  "fullName" : "tests.test_api.test_api.TestAPI#test_delete_auth_users_me_new",
  "historyId" : "1f31a195b6c51e9f98de1a5d94fabc7e",
  "time" : {
    "start" : 1707216577001,
    "stop" : 1707216577553,
    "duration" : 552
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fab7d6c05c0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fab7ce683e0>\n\n    @allure.title(\"DELETE Активировать и удалить авторизованного пользователя\")\n    def test_delete_auth_users_me_new(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:743: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707216388720,
      "stop" : 1707216388721,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707216388702,
      "stop" : 1707216388720,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707216577000,
      "stop" : 1707216577001,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fab7d6c05c0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fab7ce683e0>\n\n    @allure.title(\"DELETE Активировать и удалить авторизованного пользователя\")\n    def test_delete_auth_users_me_new(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:743: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707216577001,
        "stop" : 1707216577552,
        "duration" : 551
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1040-488"
  }, {
    "name" : "thread",
    "value" : "2295-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 7,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "bffe38b949b25a2f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/bffe38b949b25a2f",
        "status" : "passed",
        "time" : {
          "start" : 1707214901799,
          "stop" : 1707214905760,
          "duration" : 3961
        }
      }, {
        "uid" : "a9f745ed30bab943",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/a9f745ed30bab943",
        "status" : "broken",
        "statusDetails" : "TimeoutError: [Errno 110] Connection timed out",
        "time" : {
          "start" : 1707211367011,
          "stop" : 1707211497670,
          "duration" : 130659
        }
      }, {
        "uid" : "92de1699020259f8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/92de1699020259f8",
        "status" : "passed",
        "time" : {
          "start" : 1707078428067,
          "stop" : 1707078432234,
          "duration" : 4167
        }
      }, {
        "uid" : "6b0343b4dc6a266c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/6b0343b4dc6a266c",
        "status" : "passed",
        "time" : {
          "start" : 1706456459403,
          "stop" : 1706456464594,
          "duration" : 5191
        }
      }, {
        "uid" : "b449668bafd29376",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/b449668bafd29376",
        "status" : "passed",
        "time" : {
          "start" : 1706393143148,
          "stop" : 1706393147748,
          "duration" : 4600
        }
      }, {
        "uid" : "14b18fca09eaf679",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/14b18fca09eaf679",
        "status" : "passed",
        "time" : {
          "start" : 1706391772160,
          "stop" : 1706391776680,
          "duration" : 4520
        }
      }, {
        "uid" : "e195d7e6f2ed48ff",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/e195d7e6f2ed48ff",
        "status" : "passed",
        "time" : {
          "start" : 1706133445081,
          "stop" : 1706133449049,
          "duration" : 3968
        }
      }, {
        "uid" : "fed5158ca93ccfe9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/fed5158ca93ccfe9",
        "status" : "passed",
        "time" : {
          "start" : 1706129836087,
          "stop" : 1706129839912,
          "duration" : 3825
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "92acb9381c0d6399.json",
  "parameterValues" : [ ]
}