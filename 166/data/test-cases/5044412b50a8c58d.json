{
  "uid" : "5044412b50a8c58d",
  "name" : "POST Подтверждение приглашения в РП",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_api_workspace_confirm_invite",
  "historyId" : "c23dd85bddb9dc1409aaef04feeefb24",
  "time" : {
    "start" : 1707217184934,
    "stop" : 1707217322410,
    "duration" : 137476
  },
  "status" : "broken",
  "statusMessage" : "TimeoutError: [Errno 110] Connection timed out",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fc38c29c530>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fc38bbaff20>\n\n    @allure.title(\"POST Подтверждение приглашения в РП\")\n    def test_post_api_workspace_confirm_invite(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        workspace_id = use_api_base.get_workspace_id()\n        url = f'{self.constant.BASE_URL}api/workspace/{workspace_id}/invite_user/'\n        requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                      json=self.constant.INVITE_USER)\n        time.sleep(5)\n>       token = use_api_base.confirm_invite_token(email_auth, password_auth_email)\n\ntests/test_api/test_api.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:117: in confirm_invite_token\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1306: in __init__\n    IMAP4.__init__(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:202: in __init__\n    self.open(host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1319: in open\n    IMAP4.open(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:312: in open\n    self.sock = self._create_socket(timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1309: in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:302: in _create_socket\n    return socket.create_connection(address)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:852: in create_connection\n    raise exceptions[0]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddress = ('imap.mail.ru', 993), timeout = <object object at 0x7fc38df24aa0>\nsource_address = None\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None, *, all_errors=False):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default. When a connection\n        cannot be created, raises the last error if *all_errors* is False,\n        and an ExceptionGroup of all errors if *all_errors* is True.\n        \"\"\"\n    \n        host, port = address\n        exceptions = []\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [Errno 110] Connection timed out\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:837: TimeoutError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707217184934,
      "stop" : 1707217184934,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707217160840,
      "stop" : 1707217160858,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707217160858,
      "stop" : 1707217160858,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TimeoutError: [Errno 110] Connection timed out",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fc38c29c530>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fc38bbaff20>\n\n    @allure.title(\"POST Подтверждение приглашения в РП\")\n    def test_post_api_workspace_confirm_invite(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        workspace_id = use_api_base.get_workspace_id()\n        url = f'{self.constant.BASE_URL}api/workspace/{workspace_id}/invite_user/'\n        requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                      json=self.constant.INVITE_USER)\n        time.sleep(5)\n>       token = use_api_base.confirm_invite_token(email_auth, password_auth_email)\n\ntests/test_api/test_api.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:117: in confirm_invite_token\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1306: in __init__\n    IMAP4.__init__(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:202: in __init__\n    self.open(host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1319: in open\n    IMAP4.open(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:312: in open\n    self.sock = self._create_socket(timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1309: in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:302: in _create_socket\n    return socket.create_connection(address)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:852: in create_connection\n    raise exceptions[0]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddress = ('imap.mail.ru', 993), timeout = <object object at 0x7fc38df24aa0>\nsource_address = None\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None, *, all_errors=False):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default. When a connection\n        cannot be created, raises the last error if *all_errors* is False,\n        and an ExceptionGroup of all errors if *all_errors* is True.\n        \"\"\"\n    \n        host, port = address\n        exceptions = []\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [Errno 110] Connection timed out\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:837: TimeoutError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707217184934,
        "stop" : 1707217185631,
        "duration" : 697
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Получить id рабочего пространства",
      "time" : {
        "start" : 1707217185632,
        "stop" : 1707217186775,
        "duration" : 1143
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Получить access токен пользователя на емайл",
        "time" : {
          "start" : 1707217185632,
          "stop" : 1707217186359,
          "duration" : 727
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    }, {
      "name" : "Получить токен подтверждения приглашения на емайл",
      "time" : {
        "start" : 1707217192827,
        "stop" : 1707217322379,
        "duration" : 129552
      },
      "status" : "broken",
      "statusMessage" : "TimeoutError: [Errno 110] Connection timed out\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 117, in confirm_invite_token\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1306, in __init__\n    IMAP4.__init__(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 202, in __init__\n    self.open(host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1319, in open\n    IMAP4.open(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 312, in open\n    self.sock = self._create_socket(timeout)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1309, in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 302, in _create_socket\n    return socket.create_connection(address)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py\", line 852, in create_connection\n    raise exceptions[0]\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py\", line 837, in create_connection\n    sock.connect(sa)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 4
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az847-635"
  }, {
    "name" : "thread",
    "value" : "2217-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 9,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "a4e5cda666cb5f2d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/a4e5cda666cb5f2d",
        "status" : "passed",
        "time" : {
          "start" : 1707216411286,
          "stop" : 1707216421609,
          "duration" : 10323
        }
      }, {
        "uid" : "1771cb58ce7541ff",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/1771cb58ce7541ff",
        "status" : "passed",
        "time" : {
          "start" : 1707214731319,
          "stop" : 1707214741493,
          "duration" : 10174
        }
      }, {
        "uid" : "8e374c8f248699ac",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/8e374c8f248699ac",
        "status" : "passed",
        "time" : {
          "start" : 1707211152611,
          "stop" : 1707211164957,
          "duration" : 12346
        }
      }, {
        "uid" : "5feff0181dcc829c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/5feff0181dcc829c",
        "status" : "passed",
        "time" : {
          "start" : 1707078259440,
          "stop" : 1707078269387,
          "duration" : 9947
        }
      }, {
        "uid" : "14d730fa770c9521",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/14d730fa770c9521",
        "status" : "passed",
        "time" : {
          "start" : 1706456264925,
          "stop" : 1706456276901,
          "duration" : 11976
        }
      }, {
        "uid" : "cd3879a0a06f4d11",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/cd3879a0a06f4d11",
        "status" : "passed",
        "time" : {
          "start" : 1706392966426,
          "stop" : 1706392977512,
          "duration" : 11086
        }
      }, {
        "uid" : "4d726975dad1eceb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/4d726975dad1eceb",
        "status" : "passed",
        "time" : {
          "start" : 1706391624411,
          "stop" : 1706391634727,
          "duration" : 10316
        }
      }, {
        "uid" : "75a13a01d7f8bd3b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/75a13a01d7f8bd3b",
        "status" : "passed",
        "time" : {
          "start" : 1706133299130,
          "stop" : 1706133309987,
          "duration" : 10857
        }
      }, {
        "uid" : "3e4c2cc9d95576fc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/3e4c2cc9d95576fc",
        "status" : "passed",
        "time" : {
          "start" : 1706129697122,
          "stop" : 1706129706984,
          "duration" : 9862
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5044412b50a8c58d.json",
  "parameterValues" : [ ]
}