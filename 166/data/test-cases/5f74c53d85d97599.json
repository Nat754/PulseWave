{
  "uid" : "5f74c53d85d97599",
  "name" : "POST Подтверждение смены почты пользователя. Токен получить из ссылки auth/change_email/{token}.",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_change_email_confirm",
  "historyId" : "45e5562a3450eddd1d35fac0e3834f4b",
  "time" : {
    "start" : 1707235678399,
    "stop" : 1707235809319,
    "duration" : 130920
  },
  "status" : "broken",
  "statusMessage" : "TimeoutError: [Errno 110] Connection timed out",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f5da93c4bf0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f5da8b1a900>\n\n    @allure.title(\"POST Подтверждение смены почты пользователя. Токен получить из ссылки auth/change_email/{token}.\")\n    def test_post_auth_change_email_confirm(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.constant.BASE_URL}auth/change_email_confirm/'\n>       token_email = use_api_base.change_email_confirm_token(email2, password2)\n\ntests/test_api/test_api.py:662: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:100: in change_email_confirm_token\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1306: in __init__\n    IMAP4.__init__(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:202: in __init__\n    self.open(host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1319: in open\n    IMAP4.open(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:312: in open\n    self.sock = self._create_socket(timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1309: in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:302: in _create_socket\n    return socket.create_connection(address)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:852: in create_connection\n    raise exceptions[0]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddress = ('imap.mail.ru', 993), timeout = <object object at 0x7f5daab78aa0>\nsource_address = None\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None, *, all_errors=False):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default. When a connection\n        cannot be created, raises the last error if *all_errors* is False,\n        and an ExceptionGroup of all errors if *all_errors* is True.\n        \"\"\"\n    \n        host, port = address\n        exceptions = []\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [Errno 110] Connection timed out\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:837: TimeoutError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707235508669,
      "stop" : 1707235508669,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707235678398,
      "stop" : 1707235678398,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707235508650,
      "stop" : 1707235508668,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TimeoutError: [Errno 110] Connection timed out",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f5da93c4bf0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f5da8b1a900>\n\n    @allure.title(\"POST Подтверждение смены почты пользователя. Токен получить из ссылки auth/change_email/{token}.\")\n    def test_post_auth_change_email_confirm(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.constant.BASE_URL}auth/change_email_confirm/'\n>       token_email = use_api_base.change_email_confirm_token(email2, password2)\n\ntests/test_api/test_api.py:662: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:100: in change_email_confirm_token\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1306: in __init__\n    IMAP4.__init__(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:202: in __init__\n    self.open(host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1319: in open\n    IMAP4.open(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:312: in open\n    self.sock = self._create_socket(timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1309: in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:302: in _create_socket\n    return socket.create_connection(address)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:852: in create_connection\n    raise exceptions[0]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddress = ('imap.mail.ru', 993), timeout = <object object at 0x7f5daab78aa0>\nsource_address = None\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None, *, all_errors=False):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default. When a connection\n        cannot be created, raises the last error if *all_errors* is False,\n        and an ExceptionGroup of all errors if *all_errors* is True.\n        \"\"\"\n    \n        host, port = address\n        exceptions = []\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [Errno 110] Connection timed out\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:837: TimeoutError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707235678399,
        "stop" : 1707235678968,
        "duration" : 569
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить подтверждение смены почты пользователя на емайл",
      "time" : {
        "start" : 1707235678969,
        "stop" : 1707235809273,
        "duration" : 130304
      },
      "status" : "broken",
      "statusMessage" : "TimeoutError: [Errno 110] Connection timed out\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 100, in change_email_confirm_token\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1306, in __init__\n    IMAP4.__init__(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 202, in __init__\n    self.open(host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1319, in open\n    IMAP4.open(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 312, in open\n    self.sock = self._create_socket(timeout)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1309, in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 302, in _create_socket\n    return socket.create_connection(address)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py\", line 852, in create_connection\n    raise exceptions[0]\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py\", line 837, in create_connection\n    sock.connect(sa)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az885-230"
  }, {
    "name" : "thread",
    "value" : "2210-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "f4dbf5b2814d1035",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/f4dbf5b2814d1035",
        "status" : "passed",
        "time" : {
          "start" : 1707219995252,
          "stop" : 1707219998861,
          "duration" : 3609
        }
      }, {
        "uid" : "defdeb710d97ff77",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/defdeb710d97ff77",
        "status" : "passed",
        "time" : {
          "start" : 1707218419129,
          "stop" : 1707218422152,
          "duration" : 3023
        }
      }, {
        "uid" : "9859b0db308ecb36",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/9859b0db308ecb36",
        "status" : "passed",
        "time" : {
          "start" : 1707217458574,
          "stop" : 1707217461939,
          "duration" : 3365
        }
      }, {
        "uid" : "8954908b673b736",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/8954908b673b736",
        "status" : "passed",
        "time" : {
          "start" : 1707216556048,
          "stop" : 1707216558960,
          "duration" : 2912
        }
      }, {
        "uid" : "3c741aaee5929592",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/3c741aaee5929592",
        "status" : "passed",
        "time" : {
          "start" : 1707214880015,
          "stop" : 1707214883608,
          "duration" : 3593
        }
      }, {
        "uid" : "983bb67c431450d8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/983bb67c431450d8",
        "status" : "passed",
        "time" : {
          "start" : 1707211338941,
          "stop" : 1707211343247,
          "duration" : 4306
        }
      }, {
        "uid" : "f4fc9d6a98eaef78",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/f4fc9d6a98eaef78",
        "status" : "passed",
        "time" : {
          "start" : 1707078403192,
          "stop" : 1707078406579,
          "duration" : 3387
        }
      }, {
        "uid" : "1f1559cc9896c559",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/1f1559cc9896c559",
        "status" : "passed",
        "time" : {
          "start" : 1706456434284,
          "stop" : 1706456438545,
          "duration" : 4261
        }
      }, {
        "uid" : "a3f2983262ddf454",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/a3f2983262ddf454",
        "status" : "passed",
        "time" : {
          "start" : 1706393118244,
          "stop" : 1706393122432,
          "duration" : 4188
        }
      }, {
        "uid" : "563499563a9d55c2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/563499563a9d55c2",
        "status" : "passed",
        "time" : {
          "start" : 1706391749773,
          "stop" : 1706391753717,
          "duration" : 3944
        }
      }, {
        "uid" : "3871ed52f5c791ca",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/3871ed52f5c791ca",
        "status" : "passed",
        "time" : {
          "start" : 1706133422279,
          "stop" : 1706133425707,
          "duration" : 3428
        }
      }, {
        "uid" : "4f01810d96a4a06b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/4f01810d96a4a06b",
        "status" : "passed",
        "time" : {
          "start" : 1706129814823,
          "stop" : 1706129818009,
          "duration" : 3186
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5f74c53d85d97599.json",
  "parameterValues" : [ ]
}