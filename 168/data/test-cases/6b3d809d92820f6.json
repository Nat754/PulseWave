{
  "uid" : "6b3d809d92820f6",
  "name" : "POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке     auth/password/reset/confirm/{uid}/{token}",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_users_reset_password_confirm",
  "historyId" : "955584523e44b3e59bd87d6626c56c0c",
  "time" : {
    "start" : 1707241109815,
    "stop" : 1707241110200,
    "duration" : 385
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f3e406480e0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f3e3ffa90d0>\n\n    @allure.title(\"POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке \\\n    auth/password/reset/confirm/{uid}/{token}\")\n    def test_post_auth_users_reset_password_confirm(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email2, password0)\n\ntests/test_api/test_api.py:685: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_stroyrem@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707240825276,
      "stop" : 1707240825294,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707241109814,
      "stop" : 1707241109814,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707240825294,
      "stop" : 1707240825294,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f3e406480e0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f3e3ffa90d0>\n\n    @allure.title(\"POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке \\\n    auth/password/reset/confirm/{uid}/{token}\")\n    def test_post_auth_users_reset_password_confirm(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email2, password0)\n\ntests/test_api/test_api.py:685: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_stroyrem@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707241109815,
        "stop" : 1707241110199,
        "duration" : 384
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1116-70"
  }, {
    "name" : "thread",
    "value" : "2272-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 13,
        "unknown" : 0,
        "total" : 15
      },
      "items" : [ {
        "uid" : "6ceb910fd86296eb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/6ceb910fd86296eb",
        "status" : "passed",
        "time" : {
          "start" : 1707239511953,
          "stop" : 1707239516661,
          "duration" : 4708
        }
      }, {
        "uid" : "5abe384649af47d4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/5abe384649af47d4",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1707235809885,
          "stop" : 1707235810278,
          "duration" : 393
        }
      }, {
        "uid" : "382ca254cd0998f3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/382ca254cd0998f3",
        "status" : "passed",
        "time" : {
          "start" : 1707220005593,
          "stop" : 1707220009564,
          "duration" : 3971
        }
      }, {
        "uid" : "7e97ecdb1d1bd0a3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/7e97ecdb1d1bd0a3",
        "status" : "passed",
        "time" : {
          "start" : 1707218428539,
          "stop" : 1707218431753,
          "duration" : 3214
        }
      }, {
        "uid" : "f1e014c50df4519f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/f1e014c50df4519f",
        "status" : "passed",
        "time" : {
          "start" : 1707217468504,
          "stop" : 1707217471696,
          "duration" : 3192
        }
      }, {
        "uid" : "7b45b0466f3d44f9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/7b45b0466f3d44f9",
        "status" : "passed",
        "time" : {
          "start" : 1707216565687,
          "stop" : 1707216568709,
          "duration" : 3022
        }
      }, {
        "uid" : "6e23144b5be1c8b7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/6e23144b5be1c8b7",
        "status" : "passed",
        "time" : {
          "start" : 1707214890404,
          "stop" : 1707214893562,
          "duration" : 3158
        }
      }, {
        "uid" : "25b4e6f71d98728c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/25b4e6f71d98728c",
        "status" : "passed",
        "time" : {
          "start" : 1707211350190,
          "stop" : 1707211354509,
          "duration" : 4319
        }
      }, {
        "uid" : "24175c58909dd0ec",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/24175c58909dd0ec",
        "status" : "passed",
        "time" : {
          "start" : 1707078413201,
          "stop" : 1707078416905,
          "duration" : 3704
        }
      }, {
        "uid" : "ffcd863d0e03656",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/ffcd863d0e03656",
        "status" : "passed",
        "time" : {
          "start" : 1706456445618,
          "stop" : 1706456450325,
          "duration" : 4707
        }
      }, {
        "uid" : "95236d03c5c16347",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/95236d03c5c16347",
        "status" : "passed",
        "time" : {
          "start" : 1706393129633,
          "stop" : 1706393134022,
          "duration" : 4389
        }
      }, {
        "uid" : "76f54a513122d4c7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/76f54a513122d4c7",
        "status" : "passed",
        "time" : {
          "start" : 1706391760308,
          "stop" : 1706391763602,
          "duration" : 3294
        }
      }, {
        "uid" : "7ce487b6ef54f9e0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/7ce487b6ef54f9e0",
        "status" : "passed",
        "time" : {
          "start" : 1706133432575,
          "stop" : 1706133436520,
          "duration" : 3945
        }
      }, {
        "uid" : "d598a594a51b686e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/d598a594a51b686e",
        "status" : "passed",
        "time" : {
          "start" : 1706129824475,
          "stop" : 1706129827886,
          "duration" : 3411
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "6b3d809d92820f6.json",
  "parameterValues" : [ ]
}