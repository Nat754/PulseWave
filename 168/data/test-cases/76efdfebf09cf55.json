{
  "uid" : "76efdfebf09cf55",
  "name" : "POST Создать SSE - передает случайную строку",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_api_sse_random_string",
  "historyId" : "118e4161cb3ff52f6089636f11ab075e",
  "time" : {
    "start" : 1707240942340,
    "stop" : 1707240942720,
    "duration" : 380
  },
  "description" : "\n        Слушать /events/\n        channel: test\n        event_type: test_message\n        ",
  "descriptionHtml" : "<pre><code>    Слушать /events/\n    channel: test\n    event_type: test_message\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected status 204, actual status 404\nassert 404 == 204\n +  where 404 = <Response [404]>.status_code\n +  and   204 = <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70>.STATUS_204\n +    where <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70> = <tests.test_api.test_api.TestAPI object at 0x7f3e40679370>.code",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f3e40679370>\n\n    @allure.title(\"POST Создать SSE - передает случайную строку\")\n    def test_post_api_sse_random_string(self):\n        \"\"\"\n        Слушать /events/\n        channel: test\n        event_type: test_message\n        \"\"\"\n        url = f'{self.constant.BASE_URL}api/sse_random_string/'\n        response = requests.post(url)\n        print(response.text)\n        with allure.step(f\"Expected status {self.code.STATUS_204}\"):\n>           assert response.status_code == self.code.STATUS_204, \\\n                f\"Expected status {self.code.STATUS_204}, actual status {response.status_code}\"\nE           AssertionError: Expected status 204, actual status 404\nE           assert 404 == 204\nE            +  where 404 = <Response [404]>.status_code\nE            +  and   204 = <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70>.STATUS_204\nE            +    where <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70> = <tests.test_api.test_api.TestAPI object at 0x7f3e40679370>.code\n\ntests/test_api/test_api.py:504: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707240825276,
      "stop" : 1707240825294,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707240825294,
      "stop" : 1707240825294,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        Слушать /events/\n        channel: test\n        event_type: test_message\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected status 204, actual status 404\nassert 404 == 204\n +  where 404 = <Response [404]>.status_code\n +  and   204 = <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70>.STATUS_204\n +    where <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70> = <tests.test_api.test_api.TestAPI object at 0x7f3e40679370>.code",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f3e40679370>\n\n    @allure.title(\"POST Создать SSE - передает случайную строку\")\n    def test_post_api_sse_random_string(self):\n        \"\"\"\n        Слушать /events/\n        channel: test\n        event_type: test_message\n        \"\"\"\n        url = f'{self.constant.BASE_URL}api/sse_random_string/'\n        response = requests.post(url)\n        print(response.text)\n        with allure.step(f\"Expected status {self.code.STATUS_204}\"):\n>           assert response.status_code == self.code.STATUS_204, \\\n                f\"Expected status {self.code.STATUS_204}, actual status {response.status_code}\"\nE           AssertionError: Expected status 204, actual status 404\nE           assert 404 == 204\nE            +  where 404 = <Response [404]>.status_code\nE            +  and   204 = <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70>.STATUS_204\nE            +    where <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70> = <tests.test_api.test_api.TestAPI object at 0x7f3e40679370>.code\n\ntests/test_api/test_api.py:504: AssertionError",
    "steps" : [ {
      "name" : "Expected status 204",
      "time" : {
        "start" : 1707240942719,
        "stop" : 1707240942719,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expected status 204, actual status 404\nassert 404 == 204\n +  where 404 = <Response [404]>.status_code\n +  and   204 = <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70>.STATUS_204\n +    where <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70> = <tests.test_api.test_api.TestAPI object at 0x7f3e40679370>.code\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_api/test_api.py\", line 504, in test_post_api_sse_random_string\n    assert response.status_code == self.code.STATUS_204, \\\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1116-70"
  }, {
    "name" : "thread",
    "value" : "2272-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 15
      },
      "items" : [ {
        "uid" : "2ca975e5c5961d3a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/2ca975e5c5961d3a",
        "status" : "passed",
        "time" : {
          "start" : 1707239435057,
          "stop" : 1707239435623,
          "duration" : 566
        }
      }, {
        "uid" : "557a000f342c0f5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/557a000f342c0f5",
        "status" : "passed",
        "time" : {
          "start" : 1707235631772,
          "stop" : 1707235632160,
          "duration" : 388
        }
      }, {
        "uid" : "2a1ebb74d6f938e6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/2a1ebb74d6f938e6",
        "status" : "passed",
        "time" : {
          "start" : 1707219946687,
          "stop" : 1707219947112,
          "duration" : 425
        }
      }, {
        "uid" : "3d546992ff73650b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/3d546992ff73650b",
        "status" : "passed",
        "time" : {
          "start" : 1707218372638,
          "stop" : 1707218373017,
          "duration" : 379
        }
      }, {
        "uid" : "8d29cfc5940a0afd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/8d29cfc5940a0afd",
        "status" : "passed",
        "time" : {
          "start" : 1707217410147,
          "stop" : 1707217410534,
          "duration" : 387
        }
      }, {
        "uid" : "be43b74e089644af",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/be43b74e089644af",
        "status" : "passed",
        "time" : {
          "start" : 1707216506412,
          "stop" : 1707216506792,
          "duration" : 380
        }
      }, {
        "uid" : "b816e05c907e6e2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/b816e05c907e6e2",
        "status" : "passed",
        "time" : {
          "start" : 1707214829179,
          "stop" : 1707214829560,
          "duration" : 381
        }
      }, {
        "uid" : "e90f370aa74e0208",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/e90f370aa74e0208",
        "status" : "passed",
        "time" : {
          "start" : 1707211282524,
          "stop" : 1707211283094,
          "duration" : 570
        }
      }, {
        "uid" : "42907304f75ece5f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/42907304f75ece5f",
        "status" : "passed",
        "time" : {
          "start" : 1707078354319,
          "stop" : 1707078354708,
          "duration" : 389
        }
      }, {
        "uid" : "a38a8e72a3e2422d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/a38a8e72a3e2422d",
        "status" : "passed",
        "time" : {
          "start" : 1706456386996,
          "stop" : 1706456387578,
          "duration" : 582
        }
      }, {
        "uid" : "c86b5ae97f9438c6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/c86b5ae97f9438c6",
        "status" : "passed",
        "time" : {
          "start" : 1706393075840,
          "stop" : 1706393076398,
          "duration" : 558
        }
      }, {
        "uid" : "a8900ca42ffabec",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/a8900ca42ffabec",
        "status" : "passed",
        "time" : {
          "start" : 1706391714708,
          "stop" : 1706391715146,
          "duration" : 438
        }
      }, {
        "uid" : "d7fb5d4f8c633521",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/d7fb5d4f8c633521",
        "status" : "passed",
        "time" : {
          "start" : 1706133385344,
          "stop" : 1706133385778,
          "duration" : 434
        }
      }, {
        "uid" : "9b76d1daa25a2096",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/9b76d1daa25a2096",
        "status" : "passed",
        "time" : {
          "start" : 1706129780417,
          "stop" : 1706129780817,
          "duration" : 400
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "76efdfebf09cf55.json",
  "parameterValues" : [ ]
}