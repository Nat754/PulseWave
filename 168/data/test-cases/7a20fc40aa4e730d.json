{
  "uid" : "7a20fc40aa4e730d",
  "name" : "POST Создать пользователя с корректными данными",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_create_user",
  "historyId" : "7567ac6e35ae5b0e6a9e09369f0d3da4",
  "time" : {
    "start" : 1707241789146,
    "stop" : 1707241794747,
    "duration" : 5601
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected status 201, actual status 400\nassert 400 == 201\n +  where 400 = <Response [400]>.status_code\n +  and   201 = <tests.test_api.api_constant.StatusCode object at 0x7f19a08cb1d0>.STATUS_201\n +    where <tests.test_api.api_constant.StatusCode object at 0x7f19a08cb1d0> = <tests.test_api.test_api.TestAPI object at 0x7f19a068cb90>.code",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f19a068cb90>\n\n    @allure.title(\"POST Создать пользователя с корректными данными\")\n    def test_post_create_user(self):\n        url = f'{self.constant.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER)\n        time.sleep(5)\n        print(response.json())\n        with allure.step(f\"Expected status {self.code.STATUS_201}\"):\n>           assert response.status_code == self.code.STATUS_201, \\\n                f\"Expected status {self.code.STATUS_201}, actual status {response.status_code}\"\nE           AssertionError: Expected status 201, actual status 400\nE           assert 400 == 201\nE            +  where 400 = <Response [400]>.status_code\nE            +  and   201 = <tests.test_api.api_constant.StatusCode object at 0x7f19a08cb1d0>.STATUS_201\nE            +    where <tests.test_api.api_constant.StatusCode object at 0x7f19a08cb1d0> = <tests.test_api.test_api.TestAPI object at 0x7f19a068cb90>.code\n\ntests/test_api/test_api.py:26: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected status 201, actual status 400\nassert 400 == 201\n +  where 400 = <Response [400]>.status_code\n +  and   201 = <tests.test_api.api_constant.StatusCode object at 0x7f19a08cb1d0>.STATUS_201\n +    where <tests.test_api.api_constant.StatusCode object at 0x7f19a08cb1d0> = <tests.test_api.test_api.TestAPI object at 0x7f19a068cb90>.code",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f19a068cb90>\n\n    @allure.title(\"POST Создать пользователя с корректными данными\")\n    def test_post_create_user(self):\n        url = f'{self.constant.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER)\n        time.sleep(5)\n        print(response.json())\n        with allure.step(f\"Expected status {self.code.STATUS_201}\"):\n>           assert response.status_code == self.code.STATUS_201, \\\n                f\"Expected status {self.code.STATUS_201}, actual status {response.status_code}\"\nE           AssertionError: Expected status 201, actual status 400\nE           assert 400 == 201\nE            +  where 400 = <Response [400]>.status_code\nE            +  and   201 = <tests.test_api.api_constant.StatusCode object at 0x7f19a08cb1d0>.STATUS_201\nE            +    where <tests.test_api.api_constant.StatusCode object at 0x7f19a08cb1d0> = <tests.test_api.test_api.TestAPI object at 0x7f19a068cb90>.code\n\ntests/test_api/test_api.py:26: AssertionError",
    "steps" : [ {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1707241794746,
        "stop" : 1707241794746,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expected status 201, actual status 400\nassert 400 == 201\n +  where 400 = <Response [400]>.status_code\n +  and   201 = <tests.test_api.api_constant.StatusCode object at 0x7f19a08cb1d0>.STATUS_201\n +    where <tests.test_api.api_constant.StatusCode object at 0x7f19a08cb1d0> = <tests.test_api.test_api.TestAPI object at 0x7f19a068cb90>.code\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_api/test_api.py\", line 26, in test_post_create_user\n    assert response.status_code == self.code.STATUS_201, \\\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az523-878"
  }, {
    "name" : "thread",
    "value" : "2206-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "126e65b4aae2b036",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/126e65b4aae2b036",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status 201, actual status 400\nassert 400 == 201\n +  where 400 = <Response [400]>.status_code\n +  and   201 = <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70>.STATUS_201\n +    where <tests.test_api.api_constant.StatusCode object at 0x7f3e408bba70> = <tests.test_api.test_api.TestAPI object at 0x7f3e41026750>.code",
        "time" : {
          "start" : 1707240825294,
          "stop" : 1707240830844,
          "duration" : 5550
        }
      }, {
        "uid" : "955cba66e476af60",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/955cba66e476af60",
        "status" : "passed",
        "time" : {
          "start" : 1707239270010,
          "stop" : 1707239281553,
          "duration" : 11543
        }
      }, {
        "uid" : "557cfb277a91ff64",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/557cfb277a91ff64",
        "status" : "passed",
        "time" : {
          "start" : 1707235508669,
          "stop" : 1707235515042,
          "duration" : 6373
        }
      }, {
        "uid" : "5cf9dbad9b502a10",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/5cf9dbad9b502a10",
        "status" : "passed",
        "time" : {
          "start" : 1707219818930,
          "stop" : 1707219825968,
          "duration" : 7038
        }
      }, {
        "uid" : "c709212efc6faa3a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/c709212efc6faa3a",
        "status" : "passed",
        "time" : {
          "start" : 1707218126812,
          "stop" : 1707218133268,
          "duration" : 6456
        }
      }, {
        "uid" : "3145e2a34890162b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/3145e2a34890162b",
        "status" : "passed",
        "time" : {
          "start" : 1707217160858,
          "stop" : 1707217167680,
          "duration" : 6822
        }
      }, {
        "uid" : "6871c280b98b72cb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/6871c280b98b72cb",
        "status" : "passed",
        "time" : {
          "start" : 1707216388721,
          "stop" : 1707216395075,
          "duration" : 6354
        }
      }, {
        "uid" : "1784133371083a13",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/1784133371083a13",
        "status" : "passed",
        "time" : {
          "start" : 1707214708483,
          "stop" : 1707214714879,
          "duration" : 6396
        }
      }, {
        "uid" : "6df0eab3e2f52b40",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/6df0eab3e2f52b40",
        "status" : "passed",
        "time" : {
          "start" : 1707211123304,
          "stop" : 1707211129927,
          "duration" : 6623
        }
      }, {
        "uid" : "36ca1de747539168",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/36ca1de747539168",
        "status" : "passed",
        "time" : {
          "start" : 1707078234417,
          "stop" : 1707078240965,
          "duration" : 6548
        }
      }, {
        "uid" : "260f0af0fe4b788e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/260f0af0fe4b788e",
        "status" : "passed",
        "time" : {
          "start" : 1706456231237,
          "stop" : 1706456237892,
          "duration" : 6655
        }
      }, {
        "uid" : "bd2767d4beef8a22",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/bd2767d4beef8a22",
        "status" : "passed",
        "time" : {
          "start" : 1706392941455,
          "stop" : 1706392947931,
          "duration" : 6476
        }
      }, {
        "uid" : "6582a31d9f4b946b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/6582a31d9f4b946b",
        "status" : "passed",
        "time" : {
          "start" : 1706391600709,
          "stop" : 1706391607510,
          "duration" : 6801
        }
      }, {
        "uid" : "22d9bd34491044f6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/22d9bd34491044f6",
        "status" : "passed",
        "time" : {
          "start" : 1706133275330,
          "stop" : 1706133282327,
          "duration" : 6997
        }
      }, {
        "uid" : "4ee8ff8a16ed2cf7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/4ee8ff8a16ed2cf7",
        "status" : "passed",
        "time" : {
          "start" : 1706129674480,
          "stop" : 1706129680932,
          "duration" : 6452
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7a20fc40aa4e730d.json",
  "parameterValues" : [ ]
}