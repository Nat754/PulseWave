{
  "uid" : "37c67417ce8978b0",
  "name" : "POST Обновить JWT access_token авторизованного пользователя",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_refresh_jwt",
  "historyId" : "40d377d941838241e0d1a83deccb72e8",
  "time" : {
    "start" : 1707245135000,
    "stop" : 1707245135708,
    "duration" : 708
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'refresh'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d976e0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06a64b0>\n\n    @allure.title(\"POST Обновить JWT access_token авторизованного пользователя\")\n    def test_post_refresh_jwt(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/jwt/refresh/'\n>       refresh = use_api_base.create_refresh(email1, password0)\n\ntests/test_api/test_api.py:546: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_refresh(e_mail, passwrd):\n        with allure.step('Получить refresh токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           refresh = f\"{response.json()['refresh']}\"\nE           KeyError: 'refresh'\n\napi_testing/api_base.py:94: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707244958610,
      "stop" : 1707244958628,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707245135000,
      "stop" : 1707245135000,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707244958629,
      "stop" : 1707244958629,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'refresh'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d976e0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06a64b0>\n\n    @allure.title(\"POST Обновить JWT access_token авторизованного пользователя\")\n    def test_post_refresh_jwt(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/jwt/refresh/'\n>       refresh = use_api_base.create_refresh(email1, password0)\n\ntests/test_api/test_api.py:546: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_refresh(e_mail, passwrd):\n        with allure.step('Получить refresh токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           refresh = f\"{response.json()['refresh']}\"\nE           KeyError: 'refresh'\n\napi_testing/api_base.py:94: KeyError",
    "steps" : [ {
      "name" : "Получить refresh токен пользователя на емайл",
      "time" : {
        "start" : 1707245135000,
        "stop" : 1707245135708,
        "duration" : 708
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'refresh'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 94, in create_refresh\n    refresh = f\"{response.json()['refresh']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az802-283"
  }, {
    "name" : "thread",
    "value" : "2182-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "bcee3c7eb2a59eac",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/bcee3c7eb2a59eac",
        "status" : "passed",
        "time" : {
          "start" : 1707243947639,
          "stop" : 1707243948915,
          "duration" : 1276
        }
      }, {
        "uid" : "7e52e55a043d4ca3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/7e52e55a043d4ca3",
        "status" : "passed",
        "time" : {
          "start" : 1707240961218,
          "stop" : 1707240962163,
          "duration" : 945
        }
      }, {
        "uid" : "78e235de253652c9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/78e235de253652c9",
        "status" : "passed",
        "time" : {
          "start" : 1707239461237,
          "stop" : 1707239462588,
          "duration" : 1351
        }
      }, {
        "uid" : "bd6d27614133dfc1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/bd6d27614133dfc1",
        "status" : "passed",
        "time" : {
          "start" : 1707235650878,
          "stop" : 1707235651831,
          "duration" : 953
        }
      }, {
        "uid" : "9ac203254216af23",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/9ac203254216af23",
        "status" : "passed",
        "time" : {
          "start" : 1707219967162,
          "stop" : 1707219968183,
          "duration" : 1021
        }
      }, {
        "uid" : "cef0a5c68c316a02",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/cef0a5c68c316a02",
        "status" : "passed",
        "time" : {
          "start" : 1707218391330,
          "stop" : 1707218392270,
          "duration" : 940
        }
      }, {
        "uid" : "664b15b54399b4ba",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/664b15b54399b4ba",
        "status" : "passed",
        "time" : {
          "start" : 1707217429251,
          "stop" : 1707217430215,
          "duration" : 964
        }
      }, {
        "uid" : "1f71521bbb9de7b2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/1f71521bbb9de7b2",
        "status" : "passed",
        "time" : {
          "start" : 1707216525050,
          "stop" : 1707216525990,
          "duration" : 940
        }
      }, {
        "uid" : "88f3ac133d2926ac",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/88f3ac133d2926ac",
        "status" : "passed",
        "time" : {
          "start" : 1707214847863,
          "stop" : 1707214848812,
          "duration" : 949
        }
      }, {
        "uid" : "f55e606be8dca08",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/f55e606be8dca08",
        "status" : "passed",
        "time" : {
          "start" : 1707211308777,
          "stop" : 1707211310096,
          "duration" : 1319
        }
      }, {
        "uid" : "2e3d96e8d6a921c6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/2e3d96e8d6a921c6",
        "status" : "passed",
        "time" : {
          "start" : 1707078373364,
          "stop" : 1707078374325,
          "duration" : 961
        }
      }, {
        "uid" : "4a0acaf319cf0e85",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/4a0acaf319cf0e85",
        "status" : "passed",
        "time" : {
          "start" : 1706456413597,
          "stop" : 1706456414939,
          "duration" : 1342
        }
      }, {
        "uid" : "6285138742503413",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/6285138742503413",
        "status" : "passed",
        "time" : {
          "start" : 1706393098091,
          "stop" : 1706393099380,
          "duration" : 1289
        }
      }, {
        "uid" : "8ba5097cf12636c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/8ba5097cf12636c",
        "status" : "passed",
        "time" : {
          "start" : 1706391732331,
          "stop" : 1706391733373,
          "duration" : 1042
        }
      }, {
        "uid" : "ade396109b66e115",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/ade396109b66e115",
        "status" : "passed",
        "time" : {
          "start" : 1706133404802,
          "stop" : 1706133405857,
          "duration" : 1055
        }
      }, {
        "uid" : "fcc0ac0f5474eb84",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/fcc0ac0f5474eb84",
        "status" : "passed",
        "time" : {
          "start" : 1706129797840,
          "stop" : 1706129798825,
          "duration" : 985
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "37c67417ce8978b0.json",
  "parameterValues" : [ ]
}