{
  "uid" : "420a8b90dd4ef697",
  "name" : "POST Активация пользователя с корректными данными",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_users_activation",
  "historyId" : "41cff5be4c2a881c5826f33ddc93442d",
  "time" : {
    "start" : 1707252165583,
    "stop" : 1707252296860,
    "duration" : 131277
  },
  "status" : "broken",
  "statusMessage" : "TimeoutError: [Errno 110] Connection timed out",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fa9b7d84800>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fa9b77178f0>\n\n    @allure.title(\"POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/activation/'\n>       user_token = use_api_base.get_activate_email_tokens(email1, password1)\n\ntests/test_api/test_api.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:48: in get_activate_email_tokens\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1306: in __init__\n    IMAP4.__init__(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:202: in __init__\n    self.open(host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1319: in open\n    IMAP4.open(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:312: in open\n    self.sock = self._create_socket(timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1309: in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:302: in _create_socket\n    return socket.create_connection(address)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:852: in create_connection\n    raise exceptions[0]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddress = ('imap.mail.ru', 993), timeout = <object object at 0x7fa9b9778aa0>\nsource_address = None\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None, *, all_errors=False):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default. When a connection\n        cannot be created, raises the last error if *all_errors* is False,\n        and an ExceptionGroup of all errors if *all_errors* is True.\n        \"\"\"\n    \n        host, port = address\n        exceptions = []\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [Errno 110] Connection timed out\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:837: TimeoutError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707252154029,
      "stop" : 1707252154048,
      "duration" : 19
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707252154049,
      "stop" : 1707252154049,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707252165583,
      "stop" : 1707252165583,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TimeoutError: [Errno 110] Connection timed out",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fa9b7d84800>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fa9b77178f0>\n\n    @allure.title(\"POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/activation/'\n>       user_token = use_api_base.get_activate_email_tokens(email1, password1)\n\ntests/test_api/test_api.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:48: in get_activate_email_tokens\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1306: in __init__\n    IMAP4.__init__(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:202: in __init__\n    self.open(host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1319: in open\n    IMAP4.open(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:312: in open\n    self.sock = self._create_socket(timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1309: in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:302: in _create_socket\n    return socket.create_connection(address)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:852: in create_connection\n    raise exceptions[0]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddress = ('imap.mail.ru', 993), timeout = <object object at 0x7fa9b9778aa0>\nsource_address = None\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None, *, all_errors=False):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default. When a connection\n        cannot be created, raises the last error if *all_errors* is False,\n        and an ExceptionGroup of all errors if *all_errors* is True.\n        \"\"\"\n    \n        host, port = address\n        exceptions = []\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [Errno 110] Connection timed out\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:837: TimeoutError",
    "steps" : [ {
      "name" : "Получить токен активации пользователя на емайл",
      "time" : {
        "start" : 1707252165584,
        "stop" : 1707252296842,
        "duration" : 131258
      },
      "status" : "broken",
      "statusMessage" : "TimeoutError: [Errno 110] Connection timed out\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 48, in get_activate_email_tokens\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1306, in __init__\n    IMAP4.__init__(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 202, in __init__\n    self.open(host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1319, in open\n    IMAP4.open(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 312, in open\n    self.sock = self._create_socket(timeout)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1309, in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 302, in _create_socket\n    return socket.create_connection(address)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py\", line 852, in create_connection\n    raise exceptions[0]\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py\", line 837, in create_connection\n    sock.connect(sa)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az569-69"
  }, {
    "name" : "thread",
    "value" : "2229-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 19
      },
      "items" : [ {
        "uid" : "58e696c7f7b7fdf3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/58e696c7f7b7fdf3",
        "status" : "broken",
        "statusDetails" : "TimeoutError: [Errno 110] Connection timed out",
        "time" : {
          "start" : 1707244970252,
          "stop" : 1707245100512,
          "duration" : 130260
        }
      }, {
        "uid" : "4a49a1db7222f09f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/4a49a1db7222f09f",
        "status" : "passed",
        "time" : {
          "start" : 1707243778017,
          "stop" : 1707243781931,
          "duration" : 3914
        }
      }, {
        "uid" : "8276b0e31d709767",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/8276b0e31d709767",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1707241794806,
          "stop" : 1707241797364,
          "duration" : 2558
        }
      }, {
        "uid" : "647ba69952ea8d83",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/647ba69952ea8d83",
        "status" : "passed",
        "time" : {
          "start" : 1707240830903,
          "stop" : 1707240834337,
          "duration" : 3434
        }
      }, {
        "uid" : "8ac14ab823d8cb0a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/8ac14ab823d8cb0a",
        "status" : "passed",
        "time" : {
          "start" : 1707239281555,
          "stop" : 1707239285441,
          "duration" : 3886
        }
      }, {
        "uid" : "bffda7107b6e7d33",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/bffda7107b6e7d33",
        "status" : "passed",
        "time" : {
          "start" : 1707235515045,
          "stop" : 1707235517699,
          "duration" : 2654
        }
      }, {
        "uid" : "a8dd21f89aa0a063",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/a8dd21f89aa0a063",
        "status" : "passed",
        "time" : {
          "start" : 1707219825970,
          "stop" : 1707219829036,
          "duration" : 3066
        }
      }, {
        "uid" : "d77576bdf4bc8629",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/d77576bdf4bc8629",
        "status" : "passed",
        "time" : {
          "start" : 1707218133270,
          "stop" : 1707218136205,
          "duration" : 2935
        }
      }, {
        "uid" : "ea993a146bf4ef55",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/ea993a146bf4ef55",
        "status" : "passed",
        "time" : {
          "start" : 1707217167682,
          "stop" : 1707217171073,
          "duration" : 3391
        }
      }, {
        "uid" : "57f71326c23b3d31",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/57f71326c23b3d31",
        "status" : "passed",
        "time" : {
          "start" : 1707216395077,
          "stop" : 1707216397813,
          "duration" : 2736
        }
      }, {
        "uid" : "2bcd52fdff754f79",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/2bcd52fdff754f79",
        "status" : "passed",
        "time" : {
          "start" : 1707214714882,
          "stop" : 1707214717419,
          "duration" : 2537
        }
      }, {
        "uid" : "afa3d84d101d90ef",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/afa3d84d101d90ef",
        "status" : "passed",
        "time" : {
          "start" : 1707211129930,
          "stop" : 1707211133640,
          "duration" : 3710
        }
      }, {
        "uid" : "b0816fd2250068bc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/b0816fd2250068bc",
        "status" : "passed",
        "time" : {
          "start" : 1707078240968,
          "stop" : 1707078243751,
          "duration" : 2783
        }
      }, {
        "uid" : "563e1a69e47b54c2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/563e1a69e47b54c2",
        "status" : "passed",
        "time" : {
          "start" : 1706456237894,
          "stop" : 1706456242337,
          "duration" : 4443
        }
      }, {
        "uid" : "52a7a19c4f06975a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/52a7a19c4f06975a",
        "status" : "passed",
        "time" : {
          "start" : 1706392947933,
          "stop" : 1706392951726,
          "duration" : 3793
        }
      }, {
        "uid" : "ac0ae23af12a71b3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/ac0ae23af12a71b3",
        "status" : "passed",
        "time" : {
          "start" : 1706391607512,
          "stop" : 1706391610524,
          "duration" : 3012
        }
      }, {
        "uid" : "1711e71e172370c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/1711e71e172370c",
        "status" : "passed",
        "time" : {
          "start" : 1706133282329,
          "stop" : 1706133285747,
          "duration" : 3418
        }
      }, {
        "uid" : "4d0e79b8defd1654",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/4d0e79b8defd1654",
        "status" : "passed",
        "time" : {
          "start" : 1706129680934,
          "stop" : 1706129683788,
          "duration" : 2854
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "420a8b90dd4ef697.json",
  "parameterValues" : [ ]
}