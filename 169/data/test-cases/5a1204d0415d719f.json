{
  "uid" : "5a1204d0415d719f",
  "name" : "GET Получить данные авторизованного пользователя по id",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_auth_user_id",
  "historyId" : "a6494b266d51cb0695ca878ab92f17b9",
  "time" : {
    "start" : 1707245137281,
    "stop" : 1707245138006,
    "duration" : 725
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d6d790>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06b94c0>\n\n    @allure.title(\"GET Получить данные авторизованного пользователя по id\")\n    def test_get_auth_user_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:575: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707245137281,
      "stop" : 1707245137281,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707244958610,
      "stop" : 1707244958628,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707244958629,
      "stop" : 1707244958629,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d6d790>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06b94c0>\n\n    @allure.title(\"GET Получить данные авторизованного пользователя по id\")\n    def test_get_auth_user_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:575: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707245137281,
        "stop" : 1707245138005,
        "duration" : 724
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az802-283"
  }, {
    "name" : "thread",
    "value" : "2182-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "562b2ad8e47c1f87",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/562b2ad8e47c1f87",
        "status" : "passed",
        "time" : {
          "start" : 1707243951478,
          "stop" : 1707243954058,
          "duration" : 2580
        }
      }, {
        "uid" : "c201f3cbdd986031",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/c201f3cbdd986031",
        "status" : "passed",
        "time" : {
          "start" : 1707240964058,
          "stop" : 1707240965942,
          "duration" : 1884
        }
      }, {
        "uid" : "437ea3a013cbc9f9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/437ea3a013cbc9f9",
        "status" : "passed",
        "time" : {
          "start" : 1707239465437,
          "stop" : 1707239471162,
          "duration" : 5725
        }
      }, {
        "uid" : "a48bb21e532a0e43",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/a48bb21e532a0e43",
        "status" : "passed",
        "time" : {
          "start" : 1707235655668,
          "stop" : 1707235659182,
          "duration" : 3514
        }
      }, {
        "uid" : "9449069855a4bdf4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/9449069855a4bdf4",
        "status" : "passed",
        "time" : {
          "start" : 1707219971853,
          "stop" : 1707219976934,
          "duration" : 5081
        }
      }, {
        "uid" : "377eba8d891b3dab",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/377eba8d891b3dab",
        "status" : "passed",
        "time" : {
          "start" : 1707218396100,
          "stop" : 1707218400945,
          "duration" : 4845
        }
      }, {
        "uid" : "8cdc74b8b71cd58",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/8cdc74b8b71cd58",
        "status" : "passed",
        "time" : {
          "start" : 1707217433927,
          "stop" : 1707217436107,
          "duration" : 2180
        }
      }, {
        "uid" : "ffd9415aad63c129",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/ffd9415aad63c129",
        "status" : "passed",
        "time" : {
          "start" : 1707216529610,
          "stop" : 1707216531699,
          "duration" : 2089
        }
      }, {
        "uid" : "8c445a102c41d6a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/8c445a102c41d6a",
        "status" : "passed",
        "time" : {
          "start" : 1707214852574,
          "stop" : 1707214856436,
          "duration" : 3862
        }
      }, {
        "uid" : "f28e33ce81a07265",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/f28e33ce81a07265",
        "status" : "passed",
        "time" : {
          "start" : 1707211312999,
          "stop" : 1707211317404,
          "duration" : 4405
        }
      }, {
        "uid" : "de0d6d36f583113",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/de0d6d36f583113",
        "status" : "passed",
        "time" : {
          "start" : 1707078377869,
          "stop" : 1707078380037,
          "duration" : 2168
        }
      }, {
        "uid" : "4fa29e1b3b6fce7b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/4fa29e1b3b6fce7b",
        "status" : "passed",
        "time" : {
          "start" : 1706456417613,
          "stop" : 1706456420291,
          "duration" : 2678
        }
      }, {
        "uid" : "a3d0dac2caa04983",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/a3d0dac2caa04983",
        "status" : "passed",
        "time" : {
          "start" : 1706393101972,
          "stop" : 1706393104587,
          "duration" : 2615
        }
      }, {
        "uid" : "f8fd172525af2b14",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/f8fd172525af2b14",
        "status" : "passed",
        "time" : {
          "start" : 1706391735487,
          "stop" : 1706391737609,
          "duration" : 2122
        }
      }, {
        "uid" : "87c87a665fbf21b2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/87c87a665fbf21b2",
        "status" : "passed",
        "time" : {
          "start" : 1706133407998,
          "stop" : 1706133410128,
          "duration" : 2130
        }
      }, {
        "uid" : "9ff1f88521e0007d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/9ff1f88521e0007d",
        "status" : "passed",
        "time" : {
          "start" : 1706129800963,
          "stop" : 1706129802923,
          "duration" : 1960
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5a1204d0415d719f.json",
  "parameterValues" : [ ]
}