{
  "uid" : "5e296ed2d1580b96",
  "name" : "GET Список всех колонок доски",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_api_boards_id_column",
  "historyId" : "0b324773507a93de799493cecf909336",
  "time" : {
    "start" : 1707245113758,
    "stop" : 1707245114469,
    "duration" : 711
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d9b140>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06b4260>\n\n    @allure.title(\"GET Список всех колонок доски\")\n    def test_get_api_boards_id_column(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:275: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707244958610,
      "stop" : 1707244958628,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707245113758,
      "stop" : 1707245113758,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707244958629,
      "stop" : 1707244958629,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d9b140>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06b4260>\n\n    @allure.title(\"GET Список всех колонок доски\")\n    def test_get_api_boards_id_column(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:275: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707245113758,
        "stop" : 1707245114468,
        "duration" : 710
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az802-283"
  }, {
    "name" : "thread",
    "value" : "2182-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "d775fbceae364056",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/d775fbceae364056",
        "status" : "passed",
        "time" : {
          "start" : 1707243838569,
          "stop" : 1707243842494,
          "duration" : 3925
        }
      }, {
        "uid" : "8e28eaf8ad431571",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/8e28eaf8ad431571",
        "status" : "passed",
        "time" : {
          "start" : 1707240877763,
          "stop" : 1707240880674,
          "duration" : 2911
        }
      }, {
        "uid" : "56b6ccfa823fe505",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/56b6ccfa823fe505",
        "status" : "passed",
        "time" : {
          "start" : 1707239344779,
          "stop" : 1707239348784,
          "duration" : 4005
        }
      }, {
        "uid" : "70286f1d9930277f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/70286f1d9930277f",
        "status" : "passed",
        "time" : {
          "start" : 1707235561687,
          "stop" : 1707235564731,
          "duration" : 3044
        }
      }, {
        "uid" : "637b2bee46d0eb59",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/637b2bee46d0eb59",
        "status" : "passed",
        "time" : {
          "start" : 1707219874155,
          "stop" : 1707219877313,
          "duration" : 3158
        }
      }, {
        "uid" : "5db443a0e9db358e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/5db443a0e9db358e",
        "status" : "passed",
        "time" : {
          "start" : 1707218305986,
          "stop" : 1707218308878,
          "duration" : 2892
        }
      }, {
        "uid" : "23389200e1572ac5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/23389200e1572ac5",
        "status" : "passed",
        "time" : {
          "start" : 1707217342043,
          "stop" : 1707217345105,
          "duration" : 3062
        }
      }, {
        "uid" : "bfd6e6cc66b62f80",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/bfd6e6cc66b62f80",
        "status" : "passed",
        "time" : {
          "start" : 1707216440441,
          "stop" : 1707216443375,
          "duration" : 2934
        }
      }, {
        "uid" : "e08d880892eda12d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/e08d880892eda12d",
        "status" : "passed",
        "time" : {
          "start" : 1707214762239,
          "stop" : 1707214765138,
          "duration" : 2899
        }
      }, {
        "uid" : "46d40a3a6b40d1f8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/46d40a3a6b40d1f8",
        "status" : "passed",
        "time" : {
          "start" : 1707211190763,
          "stop" : 1707211194774,
          "duration" : 4011
        }
      }, {
        "uid" : "4c86f2d9b323c0c2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/4c86f2d9b323c0c2",
        "status" : "passed",
        "time" : {
          "start" : 1707078288821,
          "stop" : 1707078291955,
          "duration" : 3134
        }
      }, {
        "uid" : "24c7883ccadb633e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/24c7883ccadb633e",
        "status" : "passed",
        "time" : {
          "start" : 1706456307820,
          "stop" : 1706456311907,
          "duration" : 4087
        }
      }, {
        "uid" : "963c25ad2d5a38ac",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/963c25ad2d5a38ac",
        "status" : "passed",
        "time" : {
          "start" : 1706393006293,
          "stop" : 1706393010216,
          "duration" : 3923
        }
      }, {
        "uid" : "94ff4f6848e12ddb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/94ff4f6848e12ddb",
        "status" : "passed",
        "time" : {
          "start" : 1706391658070,
          "stop" : 1706391661237,
          "duration" : 3167
        }
      }, {
        "uid" : "d86625ade75b2d68",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/d86625ade75b2d68",
        "status" : "passed",
        "time" : {
          "start" : 1706133333601,
          "stop" : 1706133336791,
          "duration" : 3190
        }
      }, {
        "uid" : "e110e4cd1e2a1556",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/e110e4cd1e2a1556",
        "status" : "passed",
        "time" : {
          "start" : 1706129730176,
          "stop" : 1706129733347,
          "duration" : 3171
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5e296ed2d1580b96.json",
  "parameterValues" : [ ]
}