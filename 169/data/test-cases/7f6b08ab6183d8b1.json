{
  "uid" : "7f6b08ab6183d8b1",
  "name" : "POST Создать задачу",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_column_task_create",
  "historyId" : "ec4ff5e1ff87c70f9b450ea35734b3ec",
  "time" : {
    "start" : 1707252312512,
    "stop" : 1707252313064,
    "duration" : 552
  },
  "description" : "\n        responsible: Список ответственных пользователей. Передается массивом из id,например {\"responsible\": [1,2,3]}\n        deadline: Срок выполнения задачи\n        description: Описание\n        priority: Приоритет, число от 0 до 3, где 0 - высочайший приоритет\n        color_mark: Цвет метки\n        name_mark: Название метки\n        ",
  "descriptionHtml" : "<pre><code>    responsible: Список ответственных пользователей. Передается массивом из id,например {&quot;responsible&quot;: [1,2,3]}\n    deadline: Срок выполнения задачи\n    description: Описание\n    priority: Приоритет, число от 0 до 3, где 0 - высочайший приоритет\n    color_mark: Цвет метки\n    name_mark: Название метки\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fa9b7d81eb0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fa9b771f560>\n\n    @allure.title(\"POST Создать задачу\")\n    def test_post_column_task_create(self, use_api_base):\n        \"\"\"\n        responsible: Список ответственных пользователей. Передается массивом из id,например {\"responsible\": [1,2,3]}\n        deadline: Срок выполнения задачи\n        description: Описание\n        priority: Приоритет, число от 0 до 3, где 0 - высочайший приоритет\n        color_mark: Цвет метки\n        name_mark: Название метки\n        \"\"\"\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:340: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707252154029,
      "stop" : 1707252154048,
      "duration" : 19
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707252154049,
      "stop" : 1707252154049,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707252312511,
      "stop" : 1707252312512,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        responsible: Список ответственных пользователей. Передается массивом из id,например {\"responsible\": [1,2,3]}\n        deadline: Срок выполнения задачи\n        description: Описание\n        priority: Приоритет, число от 0 до 3, где 0 - высочайший приоритет\n        color_mark: Цвет метки\n        name_mark: Название метки\n        ",
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fa9b7d81eb0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fa9b771f560>\n\n    @allure.title(\"POST Создать задачу\")\n    def test_post_column_task_create(self, use_api_base):\n        \"\"\"\n        responsible: Список ответственных пользователей. Передается массивом из id,например {\"responsible\": [1,2,3]}\n        deadline: Срок выполнения задачи\n        description: Описание\n        priority: Приоритет, число от 0 до 3, где 0 - высочайший приоритет\n        color_mark: Цвет метки\n        name_mark: Название метки\n        \"\"\"\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:340: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707252312512,
        "stop" : 1707252313064,
        "duration" : 552
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az569-69"
  }, {
    "name" : "thread",
    "value" : "2229-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 18
      },
      "items" : [ {
        "uid" : "93959905e0906683",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/93959905e0906683",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1707245116746,
          "stop" : 1707245117454,
          "duration" : 708
        }
      }, {
        "uid" : "af9cce0cd6accfa3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/af9cce0cd6accfa3",
        "status" : "passed",
        "time" : {
          "start" : 1707243860992,
          "stop" : 1707243866782,
          "duration" : 5790
        }
      }, {
        "uid" : "64d9fc87b757462b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/64d9fc87b757462b",
        "status" : "passed",
        "time" : {
          "start" : 1707240894262,
          "stop" : 1707240898555,
          "duration" : 4293
        }
      }, {
        "uid" : "15f5935a50a3ee0d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/15f5935a50a3ee0d",
        "status" : "passed",
        "time" : {
          "start" : 1707239367766,
          "stop" : 1707239373695,
          "duration" : 5929
        }
      }, {
        "uid" : "a7608962c8ad5fa6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/a7608962c8ad5fa6",
        "status" : "passed",
        "time" : {
          "start" : 1707235578762,
          "stop" : 1707235583129,
          "duration" : 4367
        }
      }, {
        "uid" : "8dae425e98644ffb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/8dae425e98644ffb",
        "status" : "passed",
        "time" : {
          "start" : 1707219892111,
          "stop" : 1707219896737,
          "duration" : 4626
        }
      }, {
        "uid" : "4ff338b7028b193a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/4ff338b7028b193a",
        "status" : "passed",
        "time" : {
          "start" : 1707218322572,
          "stop" : 1707218326923,
          "duration" : 4351
        }
      }, {
        "uid" : "2bb42e380227697",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/2bb42e380227697",
        "status" : "passed",
        "time" : {
          "start" : 1707217359133,
          "stop" : 1707217363489,
          "duration" : 4356
        }
      }, {
        "uid" : "d93a227b7d500e69",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/d93a227b7d500e69",
        "status" : "passed",
        "time" : {
          "start" : 1707216456897,
          "stop" : 1707216461141,
          "duration" : 4244
        }
      }, {
        "uid" : "c1e1df37b31b5281",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/c1e1df37b31b5281",
        "status" : "passed",
        "time" : {
          "start" : 1707214779137,
          "stop" : 1707214783415,
          "duration" : 4278
        }
      }, {
        "uid" : "82ee9c0adb6b2962",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/82ee9c0adb6b2962",
        "status" : "passed",
        "time" : {
          "start" : 1707211213799,
          "stop" : 1707211219739,
          "duration" : 5940
        }
      }, {
        "uid" : "b0b57f17850a12b3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/b0b57f17850a12b3",
        "status" : "passed",
        "time" : {
          "start" : 1707078305943,
          "stop" : 1707078310287,
          "duration" : 4344
        }
      }, {
        "uid" : "717a0590eb7c8281",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/717a0590eb7c8281",
        "status" : "passed",
        "time" : {
          "start" : 1706456331068,
          "stop" : 1706456337059,
          "duration" : 5991
        }
      }, {
        "uid" : "9e37e6475156566",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/9e37e6475156566",
        "status" : "passed",
        "time" : {
          "start" : 1706393026990,
          "stop" : 1706393032199,
          "duration" : 5209
        }
      }, {
        "uid" : "a34e9e4d6c84f29e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/a34e9e4d6c84f29e",
        "status" : "passed",
        "time" : {
          "start" : 1706391674795,
          "stop" : 1706391679052,
          "duration" : 4257
        }
      }, {
        "uid" : "c41c36a486cec24b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/c41c36a486cec24b",
        "status" : "passed",
        "time" : {
          "start" : 1706133350468,
          "stop" : 1706133354711,
          "duration" : 4243
        }
      }, {
        "uid" : "e4f5b42e48cec11a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/e4f5b42e48cec11a",
        "status" : "passed",
        "time" : {
          "start" : 1706129746283,
          "stop" : 1706129750395,
          "duration" : 4112
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7f6b08ab6183d8b1.json",
  "parameterValues" : [ ]
}