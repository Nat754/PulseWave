{
  "uid" : "864f90879ce7d709",
  "name" : "GET Получить данные авторизованного пользователя",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_auth_users",
  "historyId" : "f32a8ec10adb170468ef9b67f7eec8f2",
  "time" : {
    "start" : 1707245135739,
    "stop" : 1707245136448,
    "duration" : 709
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d6fc20>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06b2750>\n\n    @allure.title(\"GET Получить данные авторизованного пользователя\")\n    def test_get_auth_users(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:555: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707244958610,
      "stop" : 1707244958628,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707245135739,
      "stop" : 1707245135739,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707244958629,
      "stop" : 1707244958629,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d6fc20>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06b2750>\n\n    @allure.title(\"GET Получить данные авторизованного пользователя\")\n    def test_get_auth_users(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:555: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707245135739,
        "stop" : 1707245136448,
        "duration" : 709
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az802-283"
  }, {
    "name" : "thread",
    "value" : "2182-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "c1295d75d76a4e8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/c1295d75d76a4e8",
        "status" : "passed",
        "time" : {
          "start" : 1707243948917,
          "stop" : 1707243950186,
          "duration" : 1269
        }
      }, {
        "uid" : "8bb707798a135782",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/8bb707798a135782",
        "status" : "passed",
        "time" : {
          "start" : 1707240962165,
          "stop" : 1707240963113,
          "duration" : 948
        }
      }, {
        "uid" : "3fde02791ad7ba0f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/3fde02791ad7ba0f",
        "status" : "passed",
        "time" : {
          "start" : 1707239462591,
          "stop" : 1707239464017,
          "duration" : 1426
        }
      }, {
        "uid" : "fcefcbea356d70d8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/fcefcbea356d70d8",
        "status" : "passed",
        "time" : {
          "start" : 1707235651833,
          "stop" : 1707235652914,
          "duration" : 1081
        }
      }, {
        "uid" : "6f65d8b5509aabca",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/6f65d8b5509aabca",
        "status" : "passed",
        "time" : {
          "start" : 1707219968185,
          "stop" : 1707219969336,
          "duration" : 1151
        }
      }, {
        "uid" : "e6341984f187fc58",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/e6341984f187fc58",
        "status" : "passed",
        "time" : {
          "start" : 1707218392272,
          "stop" : 1707218393327,
          "duration" : 1055
        }
      }, {
        "uid" : "f50ec4c580b75e7e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/f50ec4c580b75e7e",
        "status" : "passed",
        "time" : {
          "start" : 1707217430217,
          "stop" : 1707217431323,
          "duration" : 1106
        }
      }, {
        "uid" : "46563c755b3ef195",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/46563c755b3ef195",
        "status" : "passed",
        "time" : {
          "start" : 1707216525992,
          "stop" : 1707216527053,
          "duration" : 1061
        }
      }, {
        "uid" : "e720ba046771169",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/e720ba046771169",
        "status" : "passed",
        "time" : {
          "start" : 1707214848815,
          "stop" : 1707214849879,
          "duration" : 1064
        }
      }, {
        "uid" : "a311967adc6d2080",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/a311967adc6d2080",
        "status" : "passed",
        "time" : {
          "start" : 1707211310098,
          "stop" : 1707211311548,
          "duration" : 1450
        }
      }, {
        "uid" : "890c01a062f13b60",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/890c01a062f13b60",
        "status" : "passed",
        "time" : {
          "start" : 1707078374327,
          "stop" : 1707078375415,
          "duration" : 1088
        }
      }, {
        "uid" : "b6a49eabaca95535",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/b6a49eabaca95535",
        "status" : "passed",
        "time" : {
          "start" : 1706456414941,
          "stop" : 1706456416279,
          "duration" : 1338
        }
      }, {
        "uid" : "2a163f4ea7aabfd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/2a163f4ea7aabfd",
        "status" : "passed",
        "time" : {
          "start" : 1706393099382,
          "stop" : 1706393100677,
          "duration" : 1295
        }
      }, {
        "uid" : "65b12d952dcac926",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/65b12d952dcac926",
        "status" : "passed",
        "time" : {
          "start" : 1706391733374,
          "stop" : 1706391734433,
          "duration" : 1059
        }
      }, {
        "uid" : "d72db86d63946db7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/d72db86d63946db7",
        "status" : "passed",
        "time" : {
          "start" : 1706133405859,
          "stop" : 1706133406922,
          "duration" : 1063
        }
      }, {
        "uid" : "907eff95f99bb33e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/907eff95f99bb33e",
        "status" : "passed",
        "time" : {
          "start" : 1706129798827,
          "stop" : 1706129799980,
          "duration" : 1153
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "864f90879ce7d709.json",
  "parameterValues" : [ ]
}