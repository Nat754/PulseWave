{
  "uid" : "8a98b56d7408c5cd",
  "name" : "GET Представление одного стикера",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_api_task_id_sticker_id",
  "historyId" : "316afcee8c3256c5f8354b9363f84cc3",
  "time" : {
    "start" : 1707245133506,
    "stop" : 1707245134223,
    "duration" : 717
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d96e40>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06b69f0>\n\n    @allure.title(\"GET Представление одного стикера\")\n    def test_get_api_task_id_sticker_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:520: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707244958610,
      "stop" : 1707244958628,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707245133506,
      "stop" : 1707245133506,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707244958629,
      "stop" : 1707244958629,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d96e40>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06b69f0>\n\n    @allure.title(\"GET Представление одного стикера\")\n    def test_get_api_task_id_sticker_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:520: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707245133506,
        "stop" : 1707245134223,
        "duration" : 717
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az802-283"
  }, {
    "name" : "thread",
    "value" : "2182-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 15,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "5594a164ec120c99",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/5594a164ec120c99",
        "status" : "passed",
        "time" : {
          "start" : 1707243938639,
          "stop" : 1707243946320,
          "duration" : 7681
        }
      }, {
        "uid" : "b56c30a2261b85fd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/b56c30a2261b85fd",
        "status" : "passed",
        "time" : {
          "start" : 1707240954589,
          "stop" : 1707240960265,
          "duration" : 5676
        }
      }, {
        "uid" : "e28dc666e63b8bf4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/e28dc666e63b8bf4",
        "status" : "passed",
        "time" : {
          "start" : 1707239452059,
          "stop" : 1707239459912,
          "duration" : 7853
        }
      }, {
        "uid" : "b5cf60065689e4c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/b5cf60065689e4c",
        "status" : "passed",
        "time" : {
          "start" : 1707235644112,
          "stop" : 1707235649910,
          "duration" : 5798
        }
      }, {
        "uid" : "a469ae1234e5f54d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/a469ae1234e5f54d",
        "status" : "passed",
        "time" : {
          "start" : 1707219959938,
          "stop" : 1707219966112,
          "duration" : 6174
        }
      }, {
        "uid" : "8021ebb60c49e1e9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/8021ebb60c49e1e9",
        "status" : "passed",
        "time" : {
          "start" : 1707218384803,
          "stop" : 1707218390384,
          "duration" : 5581
        }
      }, {
        "uid" : "763f4d3756a8faff",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/763f4d3756a8faff",
        "status" : "passed",
        "time" : {
          "start" : 1707217422567,
          "stop" : 1707217428283,
          "duration" : 5716
        }
      }, {
        "uid" : "c9a9875b047696c0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/c9a9875b047696c0",
        "status" : "passed",
        "time" : {
          "start" : 1707216518544,
          "stop" : 1707216524100,
          "duration" : 5556
        }
      }, {
        "uid" : "c2a1eaf719adf9c7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/c2a1eaf719adf9c7",
        "status" : "passed",
        "time" : {
          "start" : 1707214841303,
          "stop" : 1707214846896,
          "duration" : 5593
        }
      }, {
        "uid" : "73a8dc4b81d4efd0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/73a8dc4b81d4efd0",
        "status" : "passed",
        "time" : {
          "start" : 1707211299571,
          "stop" : 1707211307440,
          "duration" : 7869
        }
      }, {
        "uid" : "d79643d0fe1bdc4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/d79643d0fe1bdc4",
        "status" : "passed",
        "time" : {
          "start" : 1707078366700,
          "stop" : 1707078372399,
          "duration" : 5699
        }
      }, {
        "uid" : "c1fc7999f3842ed0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/c1fc7999f3842ed0",
        "status" : "passed",
        "time" : {
          "start" : 1706456404305,
          "stop" : 1706456412261,
          "duration" : 7956
        }
      }, {
        "uid" : "c4098111f83e5d9c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/c4098111f83e5d9c",
        "status" : "passed",
        "time" : {
          "start" : 1706393089670,
          "stop" : 1706393096779,
          "duration" : 7109
        }
      }, {
        "uid" : "dc0a79ad4b67a5ad",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/dc0a79ad4b67a5ad",
        "status" : "broken",
        "statusDetails" : "IndexError: Cannot choose from an empty sequence",
        "time" : {
          "start" : 1706391727257,
          "stop" : 1706391731219,
          "duration" : 3962
        }
      }, {
        "uid" : "e39f08d2ece80db0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/e39f08d2ece80db0",
        "status" : "passed",
        "time" : {
          "start" : 1706133397968,
          "stop" : 1706133403741,
          "duration" : 5773
        }
      }, {
        "uid" : "e5da57798f97780b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/e5da57798f97780b",
        "status" : "passed",
        "time" : {
          "start" : 1706129791014,
          "stop" : 1706129796856,
          "duration" : 5842
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8a98b56d7408c5cd.json",
  "parameterValues" : [ ]
}