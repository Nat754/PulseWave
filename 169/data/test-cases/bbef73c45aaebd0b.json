{
  "uid" : "bbef73c45aaebd0b",
  "name" : "3.2, 3.2.1 Восстановить пароль на корректный емайл",
  "fullName" : "tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage#test_recovery_password_to_fill_correct_email",
  "historyId" : "3fbb91d2b204c3d1abb80d32ac377e08",
  "time" : {
    "start" : 1707245511878,
    "stop" : 1707245653437,
    "duration" : 141559
  },
  "status" : "broken",
  "statusMessage" : "TimeoutError: [Errno 110] Connection timed out",
  "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7fafd0699a30>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7fafd06d0f80>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a9333a11ed7b56e241ee72d7bdcebef\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        time.sleep(10)  # Получить ссылку на емайл\n>       link = get_link_recovery_password_by_email()\n\ntests/test_password_recovery/test_password_recovery.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:12: in get_link_recovery_password_by_email\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1306: in __init__\n    IMAP4.__init__(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:202: in __init__\n    self.open(host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1319: in open\n    IMAP4.open(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:312: in open\n    self.sock = self._create_socket(timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1309: in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:302: in _create_socket\n    return socket.create_connection(address)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:852: in create_connection\n    raise exceptions[0]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddress = ('imap.mail.ru', 993), timeout = <object object at 0x7fafd2778aa0>\nsource_address = None\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None, *, all_errors=False):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default. When a connection\n        cannot be created, raises the last error if *all_errors* is False,\n        and an ExceptionGroup of all errors if *all_errors* is True.\n        \"\"\"\n    \n        host, port = address\n        exceptions = []\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [Errno 110] Connection timed out\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:837: TimeoutError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707244958610,
      "stop" : 1707244958628,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "recovery_page_open",
    "time" : {
      "start" : 1707245509884,
      "stop" : 1707245511878,
      "duration" : 1994
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1707245511823,
        "stop" : 1707245511851,
        "duration" : 28
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1707245509708,
      "stop" : 1707245509884,
      "duration" : 176
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707244958629,
      "stop" : 1707244958629,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TimeoutError: [Errno 110] Connection timed out",
    "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7fafd0699a30>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7fafd06d0f80>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a9333a11ed7b56e241ee72d7bdcebef\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        time.sleep(10)  # Получить ссылку на емайл\n>       link = get_link_recovery_password_by_email()\n\ntests/test_password_recovery/test_password_recovery.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:12: in get_link_recovery_password_by_email\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1306: in __init__\n    IMAP4.__init__(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:202: in __init__\n    self.open(host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1319: in open\n    IMAP4.open(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:312: in open\n    self.sock = self._create_socket(timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:1309: in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py:302: in _create_socket\n    return socket.create_connection(address)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:852: in create_connection\n    raise exceptions[0]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddress = ('imap.mail.ru', 993), timeout = <object object at 0x7fafd2778aa0>\nsource_address = None\n\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n                          source_address=None, *, all_errors=False):\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        A host of '' or port 0 tells the OS to use the default. When a connection\n        cannot be created, raises the last error if *all_errors* is False,\n        and an ExceptionGroup of all errors if *all_errors* is True.\n        \"\"\"\n    \n        host, port = address\n        exceptions = []\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket(af, socktype, proto)\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               TimeoutError: [Errno 110] Connection timed out\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py:837: TimeoutError",
    "steps" : [ {
      "name" : "Заполнить поле емайл",
      "time" : {
        "start" : 1707245511878,
        "stop" : 1707245511950,
        "duration" : 72
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Продолжить'",
      "time" : {
        "start" : 1707245511950,
        "stop" : 1707245511994,
        "duration" : 44
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить ссылку для смены пароля на email",
      "time" : {
        "start" : 1707245521994,
        "stop" : 1707245653436,
        "duration" : 131442
      },
      "status" : "broken",
      "statusMessage" : "TimeoutError: [Errno 110] Connection timed out\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/pages/password_recovery_page.py\", line 12, in get_link_recovery_password_by_email\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1306, in __init__\n    IMAP4.__init__(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 202, in __init__\n    self.open(host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1319, in open\n    IMAP4.open(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 312, in open\n    self.sock = self._create_socket(timeout)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 1309, in _create_socket\n    sock = IMAP4._create_socket(self, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/imaplib.py\", line 302, in _create_socket\n    return socket.create_connection(address)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py\", line 852, in create_connection\n    raise exceptions[0]\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/socket.py\", line 837, in create_connection\n    sock.connect(sa)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "6a04f29c14a6c976",
      "name" : "Screenshot",
      "source" : "6a04f29c14a6c976.png",
      "type" : "image/png",
      "size" : 59494
    }, {
      "uid" : "d71964684acc09b0",
      "name" : "HTML source",
      "source" : "d71964684acc09b0.html",
      "type" : "text/html",
      "size" : 95532
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1707245653589,
      "stop" : 1707245653647,
      "duration" : 58
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Восстановление пароля'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_password_recovery"
  }, {
    "name" : "suite",
    "value" : "test_password_recovery"
  }, {
    "name" : "subSuite",
    "value" : "TestPasswordRecoveryPage"
  }, {
    "name" : "host",
    "value" : "fv-az802-283"
  }, {
    "name" : "thread",
    "value" : "2182-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_password_recovery.test_password_recovery"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "40d345a133d5b417",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/40d345a133d5b417",
        "status" : "passed",
        "time" : {
          "start" : 1707244471859,
          "stop" : 1707244487616,
          "duration" : 15757
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "bbef73c45aaebd0b.json",
  "parameterValues" : [ "'chrome'" ]
}