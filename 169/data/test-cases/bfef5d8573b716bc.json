{
  "uid" : "bfef5d8573b716bc",
  "name" : "PUT Обновить колонку (название и порядковый номер)",
  "fullName" : "tests.test_api.test_api.TestAPI#test_put_api_board_column_info",
  "historyId" : "788543fa140427c8e073103db091cd26",
  "time" : {
    "start" : 1707245115247,
    "stop" : 1707245115958,
    "duration" : 711
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d99490>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06b8d40>\n\n    @allure.title(\"PUT Обновить колонку (название и порядковый номер)\")\n    def test_put_api_board_column_info(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:297: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707244958610,
      "stop" : 1707244958628,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707245115247,
      "stop" : 1707245115247,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707244958629,
      "stop" : 1707244958629,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fafd0d99490>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fafd06b8d40>\n\n    @allure.title(\"PUT Обновить колонку (название и порядковый номер)\")\n    def test_put_api_board_column_info(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:297: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707245115247,
        "stop" : 1707245115958,
        "duration" : 711
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az802-283"
  }, {
    "name" : "thread",
    "value" : "2182-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "92006bd2b7894fae",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/92006bd2b7894fae",
        "status" : "passed",
        "time" : {
          "start" : 1707243848283,
          "stop" : 1707243855194,
          "duration" : 6911
        }
      }, {
        "uid" : "f834f9adf828319d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/f834f9adf828319d",
        "status" : "passed",
        "time" : {
          "start" : 1707240884908,
          "stop" : 1707240889945,
          "duration" : 5037
        }
      }, {
        "uid" : "292556fcf4784e77",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/292556fcf4784e77",
        "status" : "passed",
        "time" : {
          "start" : 1707239354719,
          "stop" : 1707239361834,
          "duration" : 7115
        }
      }, {
        "uid" : "32b10f91b5b52073",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/32b10f91b5b52073",
        "status" : "passed",
        "time" : {
          "start" : 1707235569053,
          "stop" : 1707235574304,
          "duration" : 5251
        }
      }, {
        "uid" : "ddeaaaf96f159bfc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/ddeaaaf96f159bfc",
        "status" : "passed",
        "time" : {
          "start" : 1707219881978,
          "stop" : 1707219887468,
          "duration" : 5490
        }
      }, {
        "uid" : "970800dae131472c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/970800dae131472c",
        "status" : "passed",
        "time" : {
          "start" : 1707218313301,
          "stop" : 1707218318331,
          "duration" : 5030
        }
      }, {
        "uid" : "b9f44dd9536c4447",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/b9f44dd9536c4447",
        "status" : "passed",
        "time" : {
          "start" : 1707217349485,
          "stop" : 1707217354656,
          "duration" : 5171
        }
      }, {
        "uid" : "c453c0a21864085f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/c453c0a21864085f",
        "status" : "passed",
        "time" : {
          "start" : 1707216447625,
          "stop" : 1707216452680,
          "duration" : 5055
        }
      }, {
        "uid" : "5ec4e460532386d7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/5ec4e460532386d7",
        "status" : "passed",
        "time" : {
          "start" : 1707214769608,
          "stop" : 1707214774873,
          "duration" : 5265
        }
      }, {
        "uid" : "2245f147d5a6dfb6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/2245f147d5a6dfb6",
        "status" : "passed",
        "time" : {
          "start" : 1707211200716,
          "stop" : 1707211207865,
          "duration" : 7149
        }
      }, {
        "uid" : "2cb6a4ed07da4837",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/2cb6a4ed07da4837",
        "status" : "passed",
        "time" : {
          "start" : 1707078296272,
          "stop" : 1707078301450,
          "duration" : 5178
        }
      }, {
        "uid" : "a2b49053490298bf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/a2b49053490298bf",
        "status" : "passed",
        "time" : {
          "start" : 1706456317930,
          "stop" : 1706456325091,
          "duration" : 7161
        }
      }, {
        "uid" : "328a224af6a20219",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/328a224af6a20219",
        "status" : "passed",
        "time" : {
          "start" : 1706393015435,
          "stop" : 1706393021776,
          "duration" : 6341
        }
      }, {
        "uid" : "b1698f151fe92d11",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/b1698f151fe92d11",
        "status" : "passed",
        "time" : {
          "start" : 1706391665457,
          "stop" : 1706391670579,
          "duration" : 5122
        }
      }, {
        "uid" : "f3980a7b1160e460",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/f3980a7b1160e460",
        "status" : "passed",
        "time" : {
          "start" : 1706133341064,
          "stop" : 1706133346213,
          "duration" : 5149
        }
      }, {
        "uid" : "e8036cb97fef59c3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/e8036cb97fef59c3",
        "status" : "passed",
        "time" : {
          "start" : 1706129737384,
          "stop" : 1706129742157,
          "duration" : 4773
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bfef5d8573b716bc.json",
  "parameterValues" : [ ]
}