{
  "uid" : "df939c14c24d4e62",
  "name" : "GET Список стикеров задачи",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_api_task_id_sticker",
  "historyId" : "6d6ecebe240d50664140f603964b63e9",
  "time" : {
    "start" : 1707252325941,
    "stop" : 1707252326493,
    "duration" : 552
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fa9b7d83c20>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fa9b7d8c500>\n\n    @allure.title(\"GET Список стикеров задачи\")\n    def test_get_api_task_id_sticker(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:495: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1707252154029,
      "stop" : 1707252154048,
      "duration" : 19
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1707252154049,
      "stop" : 1707252154049,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1707252325940,
      "stop" : 1707252325941,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fa9b7d83c20>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fa9b7d8c500>\n\n    @allure.title(\"GET Список стикеров задачи\")\n    def test_get_api_task_id_sticker(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:495: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1707252325941,
        "stop" : 1707252326493,
        "duration" : 552
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az569-69"
  }, {
    "name" : "thread",
    "value" : "2229-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 15,
        "unknown" : 0,
        "total" : 18
      },
      "items" : [ {
        "uid" : "3ce737f1fb0730ad",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/3ce737f1fb0730ad",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1707245132010,
          "stop" : 1707245132719,
          "duration" : 709
        }
      }, {
        "uid" : "6a2a485c33653552",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/6a2a485c33653552",
        "status" : "passed",
        "time" : {
          "start" : 1707243923861,
          "stop" : 1707243931533,
          "duration" : 7672
        }
      }, {
        "uid" : "447ebdbeaaa9c91d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/447ebdbeaaa9c91d",
        "status" : "passed",
        "time" : {
          "start" : 1707240943707,
          "stop" : 1707240949338,
          "duration" : 5631
        }
      }, {
        "uid" : "a760cddc4e2b916c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/a760cddc4e2b916c",
        "status" : "passed",
        "time" : {
          "start" : 1707239436944,
          "stop" : 1707239444797,
          "duration" : 7853
        }
      }, {
        "uid" : "7ce19509af745e20",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/7ce19509af745e20",
        "status" : "passed",
        "time" : {
          "start" : 1707235633113,
          "stop" : 1707235638818,
          "duration" : 5705
        }
      }, {
        "uid" : "669c980e5c3f6ae8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/669c980e5c3f6ae8",
        "status" : "passed",
        "time" : {
          "start" : 1707219948135,
          "stop" : 1707219954265,
          "duration" : 6130
        }
      }, {
        "uid" : "39b3eaf4d5fd08f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/39b3eaf4d5fd08f",
        "status" : "passed",
        "time" : {
          "start" : 1707218373955,
          "stop" : 1707218379593,
          "duration" : 5638
        }
      }, {
        "uid" : "d094dcf01d2cc26b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/d094dcf01d2cc26b",
        "status" : "passed",
        "time" : {
          "start" : 1707217411504,
          "stop" : 1707217417239,
          "duration" : 5735
        }
      }, {
        "uid" : "6f26f51f5dc474c9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/6f26f51f5dc474c9",
        "status" : "passed",
        "time" : {
          "start" : 1707216507740,
          "stop" : 1707216513355,
          "duration" : 5615
        }
      }, {
        "uid" : "6cc6bc40f8093b68",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/6cc6bc40f8093b68",
        "status" : "passed",
        "time" : {
          "start" : 1707214830499,
          "stop" : 1707214836115,
          "duration" : 5616
        }
      }, {
        "uid" : "340cb0ceafed7d4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/340cb0ceafed7d4",
        "status" : "passed",
        "time" : {
          "start" : 1707211284415,
          "stop" : 1707211292276,
          "duration" : 7861
        }
      }, {
        "uid" : "955df94e67192b06",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/955df94e67192b06",
        "status" : "passed",
        "time" : {
          "start" : 1707078355667,
          "stop" : 1707078361374,
          "duration" : 5707
        }
      }, {
        "uid" : "6a846ca9d41b7a3b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/6a846ca9d41b7a3b",
        "status" : "passed",
        "time" : {
          "start" : 1706456388916,
          "stop" : 1706456396835,
          "duration" : 7919
        }
      }, {
        "uid" : "5df9f9252ef687a3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/5df9f9252ef687a3",
        "status" : "passed",
        "time" : {
          "start" : 1706393077701,
          "stop" : 1706393084790,
          "duration" : 7089
        }
      }, {
        "uid" : "13c65eb2391d83c5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/13c65eb2391d83c5",
        "status" : "passed",
        "time" : {
          "start" : 1706391716191,
          "stop" : 1706391721933,
          "duration" : 5742
        }
      }, {
        "uid" : "237fa7e13dc1ae2c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/237fa7e13dc1ae2c",
        "status" : "passed",
        "time" : {
          "start" : 1706133386832,
          "stop" : 1706133392632,
          "duration" : 5800
        }
      }, {
        "uid" : "8fc0f884d2d4f5f6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/8fc0f884d2d4f5f6",
        "status" : "broken",
        "statusDetails" : "IndexError: Cannot choose from an empty sequence",
        "time" : {
          "start" : 1706129781811,
          "stop" : 1706129785571,
          "duration" : 3760
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "df939c14c24d4e62.json",
  "parameterValues" : [ ]
}