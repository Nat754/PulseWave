{
  "uid" : "ddefd22c7f9361db",
  "name" : "1.20 Окно регистрации сообщение 'Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.'",
  "fullName" : "tests.test_signup_page.test_signup_page.TestSignupPage#test_signup_message_password_rules",
  "historyId" : "2122ee6003683434e2171c9ef9974cac",
  "time" : {
    "start" : 1708805882475,
    "stop" : 1708805882475,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5592de305303 <unknown>\n#1 0x5592ddfea2b7 <unknown>\n#2 0x5592de01eb40 <unknown>\n#3 0x5592de01a6e5 <unknown>\n#4 0x5592de064abc <unknown>\n#5 0x5592de058123 <unknown>\n#6 0x5592de028095 <unknown>\n#7 0x5592de02909e <unknown>\n#8 0x5592de2c96ab <unknown>\n#9 0x5592de2cd4ba <unknown>\n#10 0x5592de2b5f85 <unknown>\n#11 0x5592de2ce12f <unknown>\n#12 0x5592de299e6f <unknown>\n#13 0x5592de2f25f8 <unknown>\n#14 0x5592de2f27c2 <unknown>\n#15 0x5592de3044a4 <unknown>\n#16 0x7fdaaf694ac3 <unknown>",
  "statusTrace" : "browser = 'chrome'\n\n    @pytest.fixture(scope='function')\n    def driver(browser):\n        print(f'\\nstart {browser} browser...')\n        if browser == \"chrome\":\n            chrome_options = ChromeOptions()\n            # chrome_options.add_argument('--headless')\n            chrome_options.add_argument('--start-maximized')\n>           driver = webdriver.Chrome(options=chrome_options)\n\nconftest.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:61: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:208: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:292: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f13ac359a30>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x5592de2f27c2 \\\\u003Cunknown>\\\\n#15 0x5592de3044a4 \\\\u003Cunknown>\\\\n#16 0x7fdaaf694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x5592de305303 <unknown>\nE       #1 0x5592ddfea2b7 <unknown>\nE       #2 0x5592de01eb40 <unknown>\nE       #3 0x5592de01a6e5 <unknown>\nE       #4 0x5592de064abc <unknown>\nE       #5 0x5592de058123 <unknown>\nE       #6 0x5592de028095 <unknown>\nE       #7 0x5592de02909e <unknown>\nE       #8 0x5592de2c96ab <unknown>\nE       #9 0x5592de2cd4ba <unknown>\nE       #10 0x5592de2b5f85 <unknown>\nE       #11 0x5592de2ce12f <unknown>\nE       #12 0x5592de299e6f <unknown>\nE       #13 0x5592de2f25f8 <unknown>\nE       #14 0x5592de2f27c2 <unknown>\nE       #15 0x5592de3044a4 <unknown>\nE       #16 0x7fdaaf694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1708805607601,
      "stop" : 1708805607618,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1708805607619,
      "stop" : 1708805607619,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1708805882475,
      "stop" : 1708805882647,
      "duration" : 172
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5592de305303 <unknown>\n#1 0x5592ddfea2b7 <unknown>\n#2 0x5592de01eb40 <unknown>\n#3 0x5592de01a6e5 <unknown>\n#4 0x5592de064abc <unknown>\n#5 0x5592de058123 <unknown>\n#6 0x5592de028095 <unknown>\n#7 0x5592de02909e <unknown>\n#8 0x5592de2c96ab <unknown>\n#9 0x5592de2cd4ba <unknown>\n#10 0x5592de2b5f85 <unknown>\n#11 0x5592de2ce12f <unknown>\n#12 0x5592de299e6f <unknown>\n#13 0x5592de2f25f8 <unknown>\n#14 0x5592de2f27c2 <unknown>\n#15 0x5592de3044a4 <unknown>\n#16 0x7fdaaf694ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1149, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 916, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/conftest.py\", line 18, in driver\n    driver = webdriver.Chrome(options=chrome_options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 61, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 208, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 292, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Регистрация'"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_signup_page"
  }, {
    "name" : "suite",
    "value" : "test_signup_page"
  }, {
    "name" : "subSuite",
    "value" : "TestSignupPage"
  }, {
    "name" : "host",
    "value" : "fv-az885-50"
  }, {
    "name" : "thread",
    "value" : "2222-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_signup_page.test_signup_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 18,
        "unknown" : 0,
        "total" : 19
      },
      "items" : [ {
        "uid" : "4fc0f90f08641142",
        "reportUrl" : "https://Nat754.github.io/PulseWave/173//#testresult/4fc0f90f08641142",
        "status" : "passed",
        "time" : {
          "start" : 1708548302598,
          "stop" : 1708548302657,
          "duration" : 59
        }
      }, {
        "uid" : "6071b5cd62f864df",
        "reportUrl" : "https://Nat754.github.io/PulseWave/172//#testresult/6071b5cd62f864df",
        "status" : "passed",
        "time" : {
          "start" : 1707851713690,
          "stop" : 1707851713744,
          "duration" : 54
        }
      }, {
        "uid" : "e03988d8de02c1c3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/171//#testresult/e03988d8de02c1c3",
        "status" : "passed",
        "time" : {
          "start" : 1707495101316,
          "stop" : 1707495101369,
          "duration" : 53
        }
      }, {
        "uid" : "f2d006c3a2b4688b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/171//#testresult/f2d006c3a2b4688b",
        "status" : "passed",
        "time" : {
          "start" : 1707480178081,
          "stop" : 1707480178135,
          "duration" : 54
        }
      }, {
        "uid" : "78b3d8248e3731ac",
        "reportUrl" : "https://Nat754.github.io/PulseWave/170//#testresult/78b3d8248e3731ac",
        "status" : "passed",
        "time" : {
          "start" : 1707255523449,
          "stop" : 1707255523503,
          "duration" : 54
        }
      }, {
        "uid" : "df6d053035686c97",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/df6d053035686c97",
        "status" : "passed",
        "time" : {
          "start" : 1707252794526,
          "stop" : 1707252794583,
          "duration" : 57
        }
      }, {
        "uid" : "5bcb2fc3b87a60f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/5bcb2fc3b87a60f",
        "status" : "passed",
        "time" : {
          "start" : 1707245693031,
          "stop" : 1707245693087,
          "duration" : 56
        }
      }, {
        "uid" : "e4303e6a743f635b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/e4303e6a743f635b",
        "status" : "passed",
        "time" : {
          "start" : 1707244532127,
          "stop" : 1707244532184,
          "duration" : 57
        }
      }, {
        "uid" : "7492a2550ce55386",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/7492a2550ce55386",
        "status" : "passed",
        "time" : {
          "start" : 1707241546692,
          "stop" : 1707241546745,
          "duration" : 53
        }
      }, {
        "uid" : "61603bc5ba1beb40",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/61603bc5ba1beb40",
        "status" : "passed",
        "time" : {
          "start" : 1707240086976,
          "stop" : 1707240087031,
          "duration" : 55
        }
      }, {
        "uid" : "fb1a714140de724a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/fb1a714140de724a",
        "status" : "passed",
        "time" : {
          "start" : 1707236274793,
          "stop" : 1707236274848,
          "duration" : 55
        }
      }, {
        "uid" : "d3ba41d8835833c9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/d3ba41d8835833c9",
        "status" : "passed",
        "time" : {
          "start" : 1707220473553,
          "stop" : 1707220473605,
          "duration" : 52
        }
      }, {
        "uid" : "c8c20b7b8b8ecc71",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/c8c20b7b8b8ecc71",
        "status" : "passed",
        "time" : {
          "start" : 1707218742379,
          "stop" : 1707218742432,
          "duration" : 53
        }
      }, {
        "uid" : "c96d751be4ac5565",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/c96d751be4ac5565",
        "status" : "passed",
        "time" : {
          "start" : 1707217911594,
          "stop" : 1707217911649,
          "duration" : 55
        }
      }, {
        "uid" : "1719c8005fbcda77",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/1719c8005fbcda77",
        "status" : "passed",
        "time" : {
          "start" : 1707216877722,
          "stop" : 1707216877774,
          "duration" : 52
        }
      }, {
        "uid" : "cabe0f64159acac5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/cabe0f64159acac5",
        "status" : "passed",
        "time" : {
          "start" : 1707215330294,
          "stop" : 1707215330351,
          "duration" : 57
        }
      }, {
        "uid" : "9a3f6a4a98776811",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/9a3f6a4a98776811",
        "status" : "passed",
        "time" : {
          "start" : 1707211924658,
          "stop" : 1707211924720,
          "duration" : 62
        }
      }, {
        "uid" : "a4120853a699d87b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/a4120853a699d87b",
        "status" : "passed",
        "time" : {
          "start" : 1707078734639,
          "stop" : 1707078734692,
          "duration" : 53
        }
      } ]
    },
    "tags" : [ "smoke" ]
  },
  "source" : "ddefd22c7f9361db.json",
  "parameterValues" : [ "'chrome'" ]
}