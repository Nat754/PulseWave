{
  "uid" : "e552bf6beeeefa3a",
  "name" : "POST Регистрация пользователя без подтверждения подписки",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_create_user_no_subscriber",
  "historyId" : "65cde6c273276871256fcbcd8d2a7b23",
  "time" : {
    "start" : 1728700889097,
    "stop" : 1728700899661,
    "duration" : 10564
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7facab74a660>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7facab785ca0>\n\n    @allure.title(\"POST Регистрация пользователя без подтверждения подписки\")\n    def test_post_create_user_no_subscriber(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER_NO_SUBSCRIBER)\n        time.sleep(10)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:590: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1728700889097,
      "stop" : 1728700889097,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1728700805718,
      "stop" : 1728700805719,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1728700805701,
      "stop" : 1728700805718,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7facab74a660>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7facab785ca0>\n\n    @allure.title(\"POST Регистрация пользователя без подтверждения подписки\")\n    def test_post_create_user_no_subscriber(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER_NO_SUBSCRIBER)\n        time.sleep(10)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:590: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1728700899660,
        "stop" : 1728700899660,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az2036-103"
  }, {
    "name" : "thread",
    "value" : "2333-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 30,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 161,
        "unknown" : 0,
        "total" : 194
      },
      "items" : [ {
        "uid" : "45a19725cf0e69ef",
        "reportUrl" : "https://Nat754.github.io/PulseWave/174//#testresult/45a19725cf0e69ef",
        "status" : "passed",
        "time" : {
          "start" : 1728623017019,
          "stop" : 1728623028461,
          "duration" : 11442
        }
      }, {
        "uid" : "d0a33ed47be6d094",
        "reportUrl" : "https://Nat754.github.io/PulseWave/174//#testresult/d0a33ed47be6d094",
        "status" : "passed",
        "time" : {
          "start" : 1728614927836,
          "stop" : 1728614939511,
          "duration" : 11675
        }
      }, {
        "uid" : "28d096fc3b3e2131",
        "reportUrl" : "https://Nat754.github.io/PulseWave/173//#testresult/28d096fc3b3e2131",
        "status" : "passed",
        "time" : {
          "start" : 1728528576568,
          "stop" : 1728528588255,
          "duration" : 11687
        }
      }, {
        "uid" : "32f9a4e0ebd0040a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/172//#testresult/32f9a4e0ebd0040a",
        "status" : "passed",
        "time" : {
          "start" : 1728442096014,
          "stop" : 1728442107451,
          "duration" : 11437
        }
      }, {
        "uid" : "80e621adc6114d8e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/171//#testresult/80e621adc6114d8e",
        "status" : "passed",
        "time" : {
          "start" : 1728355905390,
          "stop" : 1728355916814,
          "duration" : 11424
        }
      }, {
        "uid" : "c98d019c9244915",
        "reportUrl" : "https://Nat754.github.io/PulseWave/170//#testresult/c98d019c9244915",
        "status" : "passed",
        "time" : {
          "start" : 1728269611133,
          "stop" : 1728269623006,
          "duration" : 11873
        }
      }, {
        "uid" : "6011704fc6e3668b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/6011704fc6e3668b",
        "status" : "passed",
        "time" : {
          "start" : 1728183222484,
          "stop" : 1728183233924,
          "duration" : 11440
        }
      }, {
        "uid" : "575985c6d0649242",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/575985c6d0649242",
        "status" : "passed",
        "time" : {
          "start" : 1728096368577,
          "stop" : 1728096380051,
          "duration" : 11474
        }
      }, {
        "uid" : "294731a041938d0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/294731a041938d0",
        "status" : "passed",
        "time" : {
          "start" : 1728010132973,
          "stop" : 1728010148770,
          "duration" : 15797
        }
      }, {
        "uid" : "3f02c9cd0bc07938",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/3f02c9cd0bc07938",
        "status" : "passed",
        "time" : {
          "start" : 1727923769967,
          "stop" : 1727923781699,
          "duration" : 11732
        }
      }, {
        "uid" : "df1cdbbefcd74f99",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/df1cdbbefcd74f99",
        "status" : "passed",
        "time" : {
          "start" : 1727837387067,
          "stop" : 1727837398989,
          "duration" : 11922
        }
      }, {
        "uid" : "b58da17b271d1420",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/b58da17b271d1420",
        "status" : "passed",
        "time" : {
          "start" : 1727751553315,
          "stop" : 1727751565270,
          "duration" : 11955
        }
      }, {
        "uid" : "4f1681682b91b237",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/4f1681682b91b237",
        "status" : "passed",
        "time" : {
          "start" : 1727664967641,
          "stop" : 1727664979768,
          "duration" : 12127
        }
      }, {
        "uid" : "bdaf792f054ad503",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/bdaf792f054ad503",
        "status" : "passed",
        "time" : {
          "start" : 1727590619356,
          "stop" : 1727590631541,
          "duration" : 12185
        }
      }, {
        "uid" : "a09486e37a9b7701",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/a09486e37a9b7701",
        "status" : "passed",
        "time" : {
          "start" : 1727578500815,
          "stop" : 1727578528300,
          "duration" : 27485
        }
      }, {
        "uid" : "a57ca1ef0be671cc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/a57ca1ef0be671cc",
        "status" : "passed",
        "time" : {
          "start" : 1727491616435,
          "stop" : 1727491628284,
          "duration" : 11849
        }
      }, {
        "uid" : "f9c2532e8346dab",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/f9c2532e8346dab",
        "status" : "passed",
        "time" : {
          "start" : 1727405473586,
          "stop" : 1727405485458,
          "duration" : 11872
        }
      }, {
        "uid" : "3973849b6a99ee82",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/3973849b6a99ee82",
        "status" : "passed",
        "time" : {
          "start" : 1727318862239,
          "stop" : 1727318877912,
          "duration" : 15673
        }
      }, {
        "uid" : "f1a37c697c0f9aca",
        "reportUrl" : "https://Nat754.github.io/PulseWave/158//#testresult/f1a37c697c0f9aca",
        "status" : "passed",
        "time" : {
          "start" : 1727232591868,
          "stop" : 1727232603510,
          "duration" : 11642
        }
      }, {
        "uid" : "caac536e6af6a427",
        "reportUrl" : "https://Nat754.github.io/PulseWave/157//#testresult/caac536e6af6a427",
        "status" : "passed",
        "time" : {
          "start" : 1727146188085,
          "stop" : 1727146200300,
          "duration" : 12215
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e552bf6beeeefa3a.json",
  "parameterValues" : [ ]
}