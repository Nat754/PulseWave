{
  "uid" : "ec5a5ffd56614fb9",
  "name" : "Проверка что авторизованный пользователь может выйти из аккаунта",
  "fullName" : "tests.test_workspace_page.test_workspace_page.TestWorkspacePage#test_auth_user_logout",
  "historyId" : "ef004c13c91f13fae735f1a09c2da0ef",
  "time" : {
    "start" : 1728788609402,
    "stop" : 1728788609731,
    "duration" : 329
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=129.0.6668.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b66ce2802a <unknown>\n#1 0x55b66cb0e5e0 <unknown>\n#2 0x55b66cb14443 <unknown>\n#3 0x55b66cb163c9 <unknown>\n#4 0x55b66cba2cfc <unknown>\n#5 0x55b66cb82b22 <unknown>\n#6 0x55b66cba1d7d <unknown>\n#7 0x55b66cb828c3 <unknown>\n#8 0x55b66cb506b3 <unknown>\n#9 0x55b66cb5168e <unknown>\n#10 0x55b66cdf2a2b <unknown>\n#11 0x55b66cdf69b1 <unknown>\n#12 0x55b66cddf225 <unknown>\n#13 0x55b66cdf7532 <unknown>\n#14 0x55b66cdc438f <unknown>\n#15 0x55b66ce16f28 <unknown>\n#16 0x55b66ce170f3 <unknown>\n#17 0x55b66ce26e7c <unknown>\n#18 0x7fa0d0c94ac3 <unknown>",
  "statusTrace" : "self = <tests.test_workspace_page.test_workspace_page.TestWorkspacePage object at 0x7f99350faab0>\nauth_user = <pages.login_page.LoginPage object at 0x7f993510aea0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"efe560b748f86282c24bdcd4d3e36189\")>\n\n    @allure.title(\"Проверка что авторизованный пользователь может выйти из аккаунта\")\n    @pytest.mark.regress\n    def test_auth_user_logout(self, auth_user, driver):\n        page = SignUpPage(driver)\n>       page.click_button_avatar()\n\ntests/test_workspace_page/test_workspace_page.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/signup_page.py:93: in click_button_avatar\n    self.element_is_clickable(self.locator.BUTTON_AVATAR).click()\npages/base_page.py:60: in element_is_clickable\n    self.element_is_visible(locator)\npages/base_page.py:19: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\npages/base_page.py:67: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9935109580>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x55b66ce170f3 \\\\u003Cunknown>\\\\n#17 0x55b66ce26e7c \\\\u003Cunknown>\\\\n#18 0x7fa0d0c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=129.0.6668.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55b66ce2802a <unknown>\nE       #1 0x55b66cb0e5e0 <unknown>\nE       #2 0x55b66cb14443 <unknown>\nE       #3 0x55b66cb163c9 <unknown>\nE       #4 0x55b66cba2cfc <unknown>\nE       #5 0x55b66cb82b22 <unknown>\nE       #6 0x55b66cba1d7d <unknown>\nE       #7 0x55b66cb828c3 <unknown>\nE       #8 0x55b66cb506b3 <unknown>\nE       #9 0x55b66cb5168e <unknown>\nE       #10 0x55b66cdf2a2b <unknown>\nE       #11 0x55b66cdf69b1 <unknown>\nE       #12 0x55b66cddf225 <unknown>\nE       #13 0x55b66cdf7532 <unknown>\nE       #14 0x55b66cdc438f <unknown>\nE       #15 0x55b66ce16f28 <unknown>\nE       #16 0x55b66ce170f3 <unknown>\nE       #17 0x55b66ce26e7c <unknown>\nE       #18 0x7fa0d0c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1728787680782,
      "stop" : 1728787680800,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1728788604658,
      "stop" : 1728788604939,
      "duration" : 281
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_user",
    "time" : {
      "start" : 1728788604940,
      "stop" : 1728788609401,
      "duration" : 4461
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1728788607554,
        "stop" : 1728788607583,
        "duration" : 29
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Войти'",
      "time" : {
        "start" : 1728788607772,
        "stop" : 1728788607858,
        "duration" : 86
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ждать обновление страницы",
      "time" : {
        "start" : 1728788607858,
        "stop" : 1728788609380,
        "duration" : 1522
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверка отсутствия лоадера",
      "time" : {
        "start" : 1728788609380,
        "stop" : 1728788609401,
        "duration" : 21
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1728787680800,
      "stop" : 1728787680800,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=129.0.6668.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b66ce2802a <unknown>\n#1 0x55b66cb0e5e0 <unknown>\n#2 0x55b66cb14443 <unknown>\n#3 0x55b66cb163c9 <unknown>\n#4 0x55b66cba2cfc <unknown>\n#5 0x55b66cb82b22 <unknown>\n#6 0x55b66cba1d7d <unknown>\n#7 0x55b66cb828c3 <unknown>\n#8 0x55b66cb506b3 <unknown>\n#9 0x55b66cb5168e <unknown>\n#10 0x55b66cdf2a2b <unknown>\n#11 0x55b66cdf69b1 <unknown>\n#12 0x55b66cddf225 <unknown>\n#13 0x55b66cdf7532 <unknown>\n#14 0x55b66cdc438f <unknown>\n#15 0x55b66ce16f28 <unknown>\n#16 0x55b66ce170f3 <unknown>\n#17 0x55b66ce26e7c <unknown>\n#18 0x7fa0d0c94ac3 <unknown>",
    "statusTrace" : "self = <tests.test_workspace_page.test_workspace_page.TestWorkspacePage object at 0x7f99350faab0>\nauth_user = <pages.login_page.LoginPage object at 0x7f993510aea0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"efe560b748f86282c24bdcd4d3e36189\")>\n\n    @allure.title(\"Проверка что авторизованный пользователь может выйти из аккаунта\")\n    @pytest.mark.regress\n    def test_auth_user_logout(self, auth_user, driver):\n        page = SignUpPage(driver)\n>       page.click_button_avatar()\n\ntests/test_workspace_page/test_workspace_page.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/signup_page.py:93: in click_button_avatar\n    self.element_is_clickable(self.locator.BUTTON_AVATAR).click()\npages/base_page.py:60: in element_is_clickable\n    self.element_is_visible(locator)\npages/base_page.py:19: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\npages/base_page.py:67: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9935109580>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x55b66ce170f3 \\\\u003Cunknown>\\\\n#17 0x55b66ce26e7c \\\\u003Cunknown>\\\\n#18 0x7fa0d0c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=129.0.6668.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55b66ce2802a <unknown>\nE       #1 0x55b66cb0e5e0 <unknown>\nE       #2 0x55b66cb14443 <unknown>\nE       #3 0x55b66cb163c9 <unknown>\nE       #4 0x55b66cba2cfc <unknown>\nE       #5 0x55b66cb82b22 <unknown>\nE       #6 0x55b66cba1d7d <unknown>\nE       #7 0x55b66cb828c3 <unknown>\nE       #8 0x55b66cb506b3 <unknown>\nE       #9 0x55b66cb5168e <unknown>\nE       #10 0x55b66cdf2a2b <unknown>\nE       #11 0x55b66cdf69b1 <unknown>\nE       #12 0x55b66cddf225 <unknown>\nE       #13 0x55b66cdf7532 <unknown>\nE       #14 0x55b66cdc438f <unknown>\nE       #15 0x55b66ce16f28 <unknown>\nE       #16 0x55b66ce170f3 <unknown>\nE       #17 0x55b66ce26e7c <unknown>\nE       #18 0x7fa0d0c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Нажать на иконку аватара",
      "time" : {
        "start" : 1728788609402,
        "stop" : 1728788609730,
        "duration" : 328
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=129.0.6668.89); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b66ce2802a <unknown>\n#1 0x55b66cb0e5e0 <unknown>\n#2 0x55b66cb14443 <unknown>\n#3 0x55b66cb163c9 <unknown>\n#4 0x55b66cba2cfc <unknown>\n#5 0x55b66cb82b22 <unknown>\n#6 0x55b66cba1d7d <unknown>\n#7 0x55b66cb828c3 <unknown>\n#8 0x55b66cb506b3 <unknown>\n#9 0x55b66cb5168e <unknown>\n#10 0x55b66cdf2a2b <unknown>\n#11 0x55b66cdf69b1 <unknown>\n#12 0x55b66cddf225 <unknown>\n#13 0x55b66cdf7532 <unknown>\n#14 0x55b66cdc438f <unknown>\n#15 0x55b66ce16f28 <unknown>\n#16 0x55b66ce170f3 <unknown>\n#17 0x55b66ce26e7c <unknown>\n#18 0x7fa0d0c94ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/pages/signup_page.py\", line 93, in click_button_avatar\n    self.element_is_clickable(self.locator.BUTTON_AVATAR).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/pages/base_page.py\", line 60, in element_is_clickable\n    self.element_is_visible(locator)\n  File \"/home/runner/work/PulseWave/PulseWave/pages/base_page.py\", line 19, in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\n  File \"/home/runner/work/PulseWave/PulseWave/pages/base_page.py\", line 67, in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 407, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "bb9c063f0067439e",
      "name" : "Screenshot",
      "source" : "bb9c063f0067439e.png",
      "type" : "image/png",
      "size" : 211246
    }, {
      "uid" : "c410e3d8576d919c",
      "name" : "HTML source",
      "source" : "c410e3d8576d919c.html",
      "type" : "text/html",
      "size" : 133491
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1728788609968,
      "stop" : 1728788610033,
      "duration" : 65
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Рабочие пространства'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_workspace_page"
  }, {
    "name" : "suite",
    "value" : "test_workspace_page"
  }, {
    "name" : "subSuite",
    "value" : "TestWorkspacePage"
  }, {
    "name" : "host",
    "value" : "fv-az702-150"
  }, {
    "name" : "thread",
    "value" : "2483-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_workspace_page.test_workspace_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 43,
        "skipped" : 0,
        "passed" : 152,
        "unknown" : 0,
        "total" : 195
      },
      "items" : [ {
        "uid" : "545b5fff512c4a0c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/175//#testresult/545b5fff512c4a0c",
        "status" : "passed",
        "time" : {
          "start" : 1728701496596,
          "stop" : 1728701497076,
          "duration" : 480
        }
      }, {
        "uid" : "4e50e59cdf9c1a30",
        "reportUrl" : "https://Nat754.github.io/PulseWave/174//#testresult/4e50e59cdf9c1a30",
        "status" : "passed",
        "time" : {
          "start" : 1728623660749,
          "stop" : 1728623661247,
          "duration" : 498
        }
      }, {
        "uid" : "e2284c8e489777f8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/174//#testresult/e2284c8e489777f8",
        "status" : "passed",
        "time" : {
          "start" : 1728615728752,
          "stop" : 1728615729245,
          "duration" : 493
        }
      }, {
        "uid" : "95da91ce1bd91907",
        "reportUrl" : "https://Nat754.github.io/PulseWave/173//#testresult/95da91ce1bd91907",
        "status" : "passed",
        "time" : {
          "start" : 1728529399363,
          "stop" : 1728529399827,
          "duration" : 464
        }
      }, {
        "uid" : "4ffb2725b16bc440",
        "reportUrl" : "https://Nat754.github.io/PulseWave/172//#testresult/4ffb2725b16bc440",
        "status" : "passed",
        "time" : {
          "start" : 1728442706099,
          "stop" : 1728442706564,
          "duration" : 465
        }
      }, {
        "uid" : "bd24b82c7fdfb91c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/171//#testresult/bd24b82c7fdfb91c",
        "status" : "passed",
        "time" : {
          "start" : 1728356521483,
          "stop" : 1728356521965,
          "duration" : 482
        }
      }, {
        "uid" : "2bc82f2728b3c31f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/170//#testresult/2bc82f2728b3c31f",
        "status" : "passed",
        "time" : {
          "start" : 1728270419566,
          "stop" : 1728270420051,
          "duration" : 485
        }
      }, {
        "uid" : "12d4860159ff3d6a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/12d4860159ff3d6a",
        "status" : "passed",
        "time" : {
          "start" : 1728183851974,
          "stop" : 1728183852462,
          "duration" : 488
        }
      }, {
        "uid" : "7fa07193a221665d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/7fa07193a221665d",
        "status" : "passed",
        "time" : {
          "start" : 1728096993081,
          "stop" : 1728096993546,
          "duration" : 465
        }
      }, {
        "uid" : "9a835c1c06220db5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/9a835c1c06220db5",
        "status" : "passed",
        "time" : {
          "start" : 1728010801812,
          "stop" : 1728010802301,
          "duration" : 489
        }
      }, {
        "uid" : "27cd5e1d091aadc4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/27cd5e1d091aadc4",
        "status" : "passed",
        "time" : {
          "start" : 1727924563831,
          "stop" : 1727924564295,
          "duration" : 464
        }
      }, {
        "uid" : "b19eebb9b4b52a43",
        "reportUrl" : "https://Nat754.github.io/PulseWave/165//#testresult/b19eebb9b4b52a43",
        "status" : "passed",
        "time" : {
          "start" : 1727838196732,
          "stop" : 1727838197201,
          "duration" : 469
        }
      }, {
        "uid" : "18d9f9384eeb496d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/164//#testresult/18d9f9384eeb496d",
        "status" : "passed",
        "time" : {
          "start" : 1727752193698,
          "stop" : 1727752194200,
          "duration" : 502
        }
      }, {
        "uid" : "8374e66cc9d23d9c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/163//#testresult/8374e66cc9d23d9c",
        "status" : "passed",
        "time" : {
          "start" : 1727665603710,
          "stop" : 1727665604167,
          "duration" : 457
        }
      }, {
        "uid" : "94ed814601acd6a3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/94ed814601acd6a3",
        "status" : "passed",
        "time" : {
          "start" : 1727591294379,
          "stop" : 1727591294892,
          "duration" : 513
        }
      }, {
        "uid" : "e568e31390b9848",
        "reportUrl" : "https://Nat754.github.io/PulseWave/162//#testresult/e568e31390b9848",
        "status" : "passed",
        "time" : {
          "start" : 1727579142461,
          "stop" : 1727579142918,
          "duration" : 457
        }
      }, {
        "uid" : "fa57615c6a22f6b2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/161//#testresult/fa57615c6a22f6b2",
        "status" : "passed",
        "time" : {
          "start" : 1727492234199,
          "stop" : 1727492234654,
          "duration" : 455
        }
      }, {
        "uid" : "4729b2f5a7c72178",
        "reportUrl" : "https://Nat754.github.io/PulseWave/160//#testresult/4729b2f5a7c72178",
        "status" : "passed",
        "time" : {
          "start" : 1727406336357,
          "stop" : 1727406336814,
          "duration" : 457
        }
      }, {
        "uid" : "efc96aa4c24f7f1f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/159//#testresult/efc96aa4c24f7f1f",
        "status" : "passed",
        "time" : {
          "start" : 1727319480890,
          "stop" : 1727319481340,
          "duration" : 450
        }
      }, {
        "uid" : "f2c520ff6482605f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/158//#testresult/f2c520ff6482605f",
        "status" : "passed",
        "time" : {
          "start" : 1727233215561,
          "stop" : 1727233216019,
          "duration" : 458
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "ec5a5ffd56614fb9.json",
  "parameterValues" : [ "'chrome'" ]
}