{
  "uid" : "cafdff7de8a726b3",
  "name" : "Проверка недействительности кеша доски",
  "fullName" : "tests.test_api.test_api.TestAPI#test_api_invalidation_board",
  "historyId" : "67d1cbc0123b76dfbcd2881be0607554",
  "time" : {
    "start" : 1709483621671,
    "stop" : 1709483625053,
    "duration" : 3382
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Не изменилось имя у доски\nassert 'Interior and spatial designer' != 'Interior and spatial designer'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7feeb34a5fa0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7feeb36d6e40>\n\n    @allure.title(\"Проверка недействительности кеша доски\")\n    def test_api_invalidation_board(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.constant.BASE_URL}api/workspace/'\n        with allure.step(\"GET Получить список всех Рабочих пространств авторизованного пользователя\"):\n            response = requests.get(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"})\n            workspaces_id = [item['id'] for item in response.json()]\n            workspace_id = random.choice(workspaces_id)\n        with allure.step(\"Создать доску\"):\n            url = f'{self.constant.BASE_URL}api/workspace/{workspace_id}/boards/'\n            response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                     json={\"name\": faker.job(), \"work_space\": f\"{workspace_id}\"})\n            board_id = response.json()['id']\n        with allure.step(f\"GET Получить имя доски {board_id} Рабочего пространства {workspace_id}\"):\n            url = f'{self.constant.BASE_URL}api/workspace/{workspace_id}/boards/{board_id}/'\n            response = requests.get(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"})\n            board_name = response.json()['name']\n        with allure.step(\"Изменить имя доски\"):\n            response = requests.put(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                    json=self.constant.BOARD_CREATE)\n        board_name_new = response.json()['name']\n        print('\\n', board_name, '!=', board_name_new)\n        with (allure.step(f\"Проверить, что у доски изменилось имя\")):\n>           assert board_name != board_name_new, 'Не изменилось имя у доски'\nE           AssertionError: Не изменилось имя у доски\nE           assert 'Interior and spatial designer' != 'Interior and spatial designer'\n\ntests/test_api/test_api.py:98: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1709483597901,
      "stop" : 1709483597919,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1709483597919,
      "stop" : 1709483597919,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1709483621671,
      "stop" : 1709483621671,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Не изменилось имя у доски\nassert 'Interior and spatial designer' != 'Interior and spatial designer'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7feeb34a5fa0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7feeb36d6e40>\n\n    @allure.title(\"Проверка недействительности кеша доски\")\n    def test_api_invalidation_board(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.constant.BASE_URL}api/workspace/'\n        with allure.step(\"GET Получить список всех Рабочих пространств авторизованного пользователя\"):\n            response = requests.get(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"})\n            workspaces_id = [item['id'] for item in response.json()]\n            workspace_id = random.choice(workspaces_id)\n        with allure.step(\"Создать доску\"):\n            url = f'{self.constant.BASE_URL}api/workspace/{workspace_id}/boards/'\n            response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                     json={\"name\": faker.job(), \"work_space\": f\"{workspace_id}\"})\n            board_id = response.json()['id']\n        with allure.step(f\"GET Получить имя доски {board_id} Рабочего пространства {workspace_id}\"):\n            url = f'{self.constant.BASE_URL}api/workspace/{workspace_id}/boards/{board_id}/'\n            response = requests.get(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"})\n            board_name = response.json()['name']\n        with allure.step(\"Изменить имя доски\"):\n            response = requests.put(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                    json=self.constant.BOARD_CREATE)\n        board_name_new = response.json()['name']\n        print('\\n', board_name, '!=', board_name_new)\n        with (allure.step(f\"Проверить, что у доски изменилось имя\")):\n>           assert board_name != board_name_new, 'Не изменилось имя у доски'\nE           AssertionError: Не изменилось имя у доски\nE           assert 'Interior and spatial designer' != 'Interior and spatial designer'\n\ntests/test_api/test_api.py:98: AssertionError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1709483621671,
        "stop" : 1709483622992,
        "duration" : 1321
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "GET Получить список всех Рабочих пространств авторизованного пользователя",
      "time" : {
        "start" : 1709483622993,
        "stop" : 1709483623410,
        "duration" : 417
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Создать доску",
      "time" : {
        "start" : 1709483623410,
        "stop" : 1709483624166,
        "duration" : 756
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "GET Получить имя доски 37 Рабочего пространства 44",
      "time" : {
        "start" : 1709483624166,
        "stop" : 1709483624593,
        "duration" : 427
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Изменить имя доски",
      "time" : {
        "start" : 1709483624593,
        "stop" : 1709483625052,
        "duration" : 459
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить, что у доски изменилось имя",
      "time" : {
        "start" : 1709483625052,
        "stop" : 1709483625052,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Не изменилось имя у доски\nassert 'Interior and spatial designer' != 'Interior and spatial designer'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_api/test_api.py\", line 98, in test_api_invalidation_board\n    assert board_name != board_name_new, 'Не изменилось имя у доски'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az887-104"
  }, {
    "name" : "thread",
    "value" : "2306-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 29,
        "unknown" : 0,
        "total" : 32
      },
      "items" : [ {
        "uid" : "c486729160884d8f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/180//#testresult/c486729160884d8f",
        "status" : "passed",
        "time" : {
          "start" : 1709408526887,
          "stop" : 1709408530378,
          "duration" : 3491
        }
      }, {
        "uid" : "c5f3885be2da34ea",
        "reportUrl" : "https://Nat754.github.io/PulseWave/179//#testresult/c5f3885be2da34ea",
        "status" : "passed",
        "time" : {
          "start" : 1709405679131,
          "stop" : 1709405682868,
          "duration" : 3737
        }
      }, {
        "uid" : "d012c57004918ed2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/178//#testresult/d012c57004918ed2",
        "status" : "passed",
        "time" : {
          "start" : 1708971991548,
          "stop" : 1708971994299,
          "duration" : 2751
        }
      }, {
        "uid" : "f882cb241e4b58b7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/177//#testresult/f882cb241e4b58b7",
        "status" : "passed",
        "time" : {
          "start" : 1708885658526,
          "stop" : 1708885660919,
          "duration" : 2393
        }
      }, {
        "uid" : "b2a94eb7bb2690e3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/176//#testresult/b2a94eb7bb2690e3",
        "status" : "passed",
        "time" : {
          "start" : 1708882606438,
          "stop" : 1708882610192,
          "duration" : 3754
        }
      }, {
        "uid" : "93efd5521d380f07",
        "reportUrl" : "https://Nat754.github.io/PulseWave/175//#testresult/93efd5521d380f07",
        "status" : "passed",
        "time" : {
          "start" : 1708806219705,
          "stop" : 1708806223001,
          "duration" : 3296
        }
      }, {
        "uid" : "a474d57156ca74a5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/174//#testresult/a474d57156ca74a5",
        "status" : "passed",
        "time" : {
          "start" : 1708805629857,
          "stop" : 1708805632483,
          "duration" : 2626
        }
      }, {
        "uid" : "7c319b732b1b136b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/173//#testresult/7c319b732b1b136b",
        "status" : "passed",
        "time" : {
          "start" : 1708547695773,
          "stop" : 1708547698625,
          "duration" : 2852
        }
      }, {
        "uid" : "c6116f1ec5e66824",
        "reportUrl" : "https://Nat754.github.io/PulseWave/172//#testresult/c6116f1ec5e66824",
        "status" : "passed",
        "time" : {
          "start" : 1707850863312,
          "stop" : 1707850866933,
          "duration" : 3621
        }
      }, {
        "uid" : "656615f335f9af95",
        "reportUrl" : "https://Nat754.github.io/PulseWave/171//#testresult/656615f335f9af95",
        "status" : "passed",
        "time" : {
          "start" : 1707494453683,
          "stop" : 1707494456964,
          "duration" : 3281
        }
      }, {
        "uid" : "cd5050127407745c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/171//#testresult/cd5050127407745c",
        "status" : "passed",
        "time" : {
          "start" : 1707479514577,
          "stop" : 1707479518269,
          "duration" : 3692
        }
      }, {
        "uid" : "15ca9a94712722d7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/170//#testresult/15ca9a94712722d7",
        "status" : "passed",
        "time" : {
          "start" : 1707254883564,
          "stop" : 1707254887474,
          "duration" : 3910
        }
      }, {
        "uid" : "c2009fb10a4e7baa",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/c2009fb10a4e7baa",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1707252299850,
          "stop" : 1707252300886,
          "duration" : 1036
        }
      }, {
        "uid" : "831503fb9927cde5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/831503fb9927cde5",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1707245103268,
          "stop" : 1707245103983,
          "duration" : 715
        }
      }, {
        "uid" : "ec2d4d80b91a968f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/ec2d4d80b91a968f",
        "status" : "passed",
        "time" : {
          "start" : 1707243789180,
          "stop" : 1707243792203,
          "duration" : 3023
        }
      }, {
        "uid" : "b748a6660f1f8622",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/b748a6660f1f8622",
        "status" : "passed",
        "time" : {
          "start" : 1707241803450,
          "stop" : 1707241806032,
          "duration" : 2582
        }
      }, {
        "uid" : "6623f1fc9ef3bcd5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/6623f1fc9ef3bcd5",
        "status" : "passed",
        "time" : {
          "start" : 1707240840740,
          "stop" : 1707240843511,
          "duration" : 2771
        }
      }, {
        "uid" : "152a979eb596ef9c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/152a979eb596ef9c",
        "status" : "passed",
        "time" : {
          "start" : 1707239293375,
          "stop" : 1707239296651,
          "duration" : 3276
        }
      }, {
        "uid" : "42934777173019d8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/42934777173019d8",
        "status" : "passed",
        "time" : {
          "start" : 1707235525710,
          "stop" : 1707235528311,
          "duration" : 2601
        }
      }, {
        "uid" : "8e03278f4ef187e9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/8e03278f4ef187e9",
        "status" : "passed",
        "time" : {
          "start" : 1707219836328,
          "stop" : 1707219838864,
          "duration" : 2536
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "cafdff7de8a726b3.json",
  "parameterValues" : [ ]
}