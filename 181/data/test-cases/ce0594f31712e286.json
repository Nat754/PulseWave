{
  "uid" : "ce0594f31712e286",
  "name" : "1.3, 1.3.1, 1.15 Регистрация с корректными email и паролем и с согласием на подписку",
  "fullName" : "tests.test_signup_page.test_signup_page.TestSignupPage#test_signup_with_correct_data_and_agree",
  "historyId" : "3f1a9a03cb3169fb36bf4b166c8deeee",
  "time" : {
    "start" : 1709484355479,
    "stop" : 1709484370446,
    "duration" : 14967
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome-headless-shell=122.0.6261.69)\nStacktrace:\n#0 0x5588c1898793 <unknown>\n#1 0x5588c158c017 <unknown>\n#2 0x5588c15739bf <unknown>\n#3 0x5588c1571d43 <unknown>\n#4 0x5588c157228a <unknown>\n#5 0x5588c158e97e <unknown>\n#6 0x5588c1618985 <unknown>\n#7 0x5588c15f93d2 <unknown>\n#8 0x5588c1617dd9 <unknown>\n#9 0x5588c15f9173 <unknown>\n#10 0x5588c15ca2d3 <unknown>\n#11 0x5588c15cac9e <unknown>\n#12 0x5588c185c8cb <unknown>\n#13 0x5588c1860745 <unknown>\n#14 0x5588c18492e1 <unknown>\n#15 0x5588c18612d2 <unknown>\n#16 0x5588c182d17f <unknown>\n#17 0x5588c1886dc8 <unknown>\n#18 0x5588c1886fc3 <unknown>\n#19 0x5588c1897944 <unknown>\n#20 0x7f098f694ac3 <unknown>",
  "statusTrace" : "self = <tests.test_signup_page.test_signup_page.TestSignupPage object at 0x7feeb2e23140>\nsignup_page_open = <pages.signup_page.SignUpPage object at 0x7feeb2e53a70>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9181b7680d1e90ecdf03071e9e16c0a1\")>\n\n    @allure.title(\"1.3, 1.3.1, 1.15 Регистрация с корректными email и паролем и с согласием на подписку\")\n    @pytest.mark.smoke\n    def test_signup_with_correct_data_and_agree(self, signup_page_open, driver):\n        with allure.step('Заполнить поле email корректными данными'):\n            signup_page_open.put_data_to_email_field(email1)\n        with allure.step('Заполнить поле пароль сильным паролем'):\n            signup_page_open.put_data_to_password_field(password0)\n        with allure.step('Заполнить поле подтверждение пароля сильным паролем'):\n            signup_page_open.put_data_to_confirm_password_field(password0)\n        signup_page_open.check_pulsewave_policy_message().click()\n        signup_page_open.click_button_registration()\n        element = signup_page_open.get_send_invite_message()\n        with allure.step(f'Получено сообщение необходимости подтвердить регистрацию: \"{self.signup.INVITE_MSG}\"'):\n            assert element.text == self.signup.INVITE_MSG, 'Нет сообщения успеха'\n        time.sleep(10)\n        link = signup_page_open.get_confirm_signup_to_email(email1, password1)\n>       driver.get(link)\n\ntests/test_signup_page/test_signup_page.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7feeb2e52c90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome-h...\\\\n#18 0x5588c1886fc3 \\\\u003Cunknown>\\\\n#19 0x5588c1897944 \\\\u003Cunknown>\\\\n#20 0x7f098f694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome-headless-shell=122.0.6261.69)\nE       Stacktrace:\nE       #0 0x5588c1898793 <unknown>\nE       #1 0x5588c158c017 <unknown>\nE       #2 0x5588c15739bf <unknown>\nE       #3 0x5588c1571d43 <unknown>\nE       #4 0x5588c157228a <unknown>\nE       #5 0x5588c158e97e <unknown>\nE       #6 0x5588c1618985 <unknown>\nE       #7 0x5588c15f93d2 <unknown>\nE       #8 0x5588c1617dd9 <unknown>\nE       #9 0x5588c15f9173 <unknown>\nE       #10 0x5588c15ca2d3 <unknown>\nE       #11 0x5588c15cac9e <unknown>\nE       #12 0x5588c185c8cb <unknown>\nE       #13 0x5588c1860745 <unknown>\nE       #14 0x5588c18492e1 <unknown>\nE       #15 0x5588c18612d2 <unknown>\nE       #16 0x5588c182d17f <unknown>\nE       #17 0x5588c1886dc8 <unknown>\nE       #18 0x5588c1886fc3 <unknown>\nE       #19 0x5588c1897944 <unknown>\nE       #20 0x7f098f694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1709483597901,
      "stop" : 1709483597919,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1709483597919,
      "stop" : 1709483597919,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1709484352902,
      "stop" : 1709484353085,
      "duration" : 183
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "signup_page_open",
    "time" : {
      "start" : 1709484353086,
      "stop" : 1709484355479,
      "duration" : 2393
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1709484355418,
        "stop" : 1709484355448,
        "duration" : 30
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome-headless-shell=122.0.6261.69)\nStacktrace:\n#0 0x5588c1898793 <unknown>\n#1 0x5588c158c017 <unknown>\n#2 0x5588c15739bf <unknown>\n#3 0x5588c1571d43 <unknown>\n#4 0x5588c157228a <unknown>\n#5 0x5588c158e97e <unknown>\n#6 0x5588c1618985 <unknown>\n#7 0x5588c15f93d2 <unknown>\n#8 0x5588c1617dd9 <unknown>\n#9 0x5588c15f9173 <unknown>\n#10 0x5588c15ca2d3 <unknown>\n#11 0x5588c15cac9e <unknown>\n#12 0x5588c185c8cb <unknown>\n#13 0x5588c1860745 <unknown>\n#14 0x5588c18492e1 <unknown>\n#15 0x5588c18612d2 <unknown>\n#16 0x5588c182d17f <unknown>\n#17 0x5588c1886dc8 <unknown>\n#18 0x5588c1886fc3 <unknown>\n#19 0x5588c1897944 <unknown>\n#20 0x7f098f694ac3 <unknown>",
    "statusTrace" : "self = <tests.test_signup_page.test_signup_page.TestSignupPage object at 0x7feeb2e23140>\nsignup_page_open = <pages.signup_page.SignUpPage object at 0x7feeb2e53a70>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9181b7680d1e90ecdf03071e9e16c0a1\")>\n\n    @allure.title(\"1.3, 1.3.1, 1.15 Регистрация с корректными email и паролем и с согласием на подписку\")\n    @pytest.mark.smoke\n    def test_signup_with_correct_data_and_agree(self, signup_page_open, driver):\n        with allure.step('Заполнить поле email корректными данными'):\n            signup_page_open.put_data_to_email_field(email1)\n        with allure.step('Заполнить поле пароль сильным паролем'):\n            signup_page_open.put_data_to_password_field(password0)\n        with allure.step('Заполнить поле подтверждение пароля сильным паролем'):\n            signup_page_open.put_data_to_confirm_password_field(password0)\n        signup_page_open.check_pulsewave_policy_message().click()\n        signup_page_open.click_button_registration()\n        element = signup_page_open.get_send_invite_message()\n        with allure.step(f'Получено сообщение необходимости подтвердить регистрацию: \"{self.signup.INVITE_MSG}\"'):\n            assert element.text == self.signup.INVITE_MSG, 'Нет сообщения успеха'\n        time.sleep(10)\n        link = signup_page_open.get_confirm_signup_to_email(email1, password1)\n>       driver.get(link)\n\ntests/test_signup_page/test_signup_page.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7feeb2e52c90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome-h...\\\\n#18 0x5588c1886fc3 \\\\u003Cunknown>\\\\n#19 0x5588c1897944 \\\\u003Cunknown>\\\\n#20 0x7f098f694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome-headless-shell=122.0.6261.69)\nE       Stacktrace:\nE       #0 0x5588c1898793 <unknown>\nE       #1 0x5588c158c017 <unknown>\nE       #2 0x5588c15739bf <unknown>\nE       #3 0x5588c1571d43 <unknown>\nE       #4 0x5588c157228a <unknown>\nE       #5 0x5588c158e97e <unknown>\nE       #6 0x5588c1618985 <unknown>\nE       #7 0x5588c15f93d2 <unknown>\nE       #8 0x5588c1617dd9 <unknown>\nE       #9 0x5588c15f9173 <unknown>\nE       #10 0x5588c15ca2d3 <unknown>\nE       #11 0x5588c15cac9e <unknown>\nE       #12 0x5588c185c8cb <unknown>\nE       #13 0x5588c1860745 <unknown>\nE       #14 0x5588c18492e1 <unknown>\nE       #15 0x5588c18612d2 <unknown>\nE       #16 0x5588c182d17f <unknown>\nE       #17 0x5588c1886dc8 <unknown>\nE       #18 0x5588c1886fc3 <unknown>\nE       #19 0x5588c1897944 <unknown>\nE       #20 0x7f098f694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidArgumentException",
    "steps" : [ {
      "name" : "Заполнить поле email корректными данными",
      "time" : {
        "start" : 1709484355479,
        "stop" : 1709484355557,
        "duration" : 78
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Заполнить поле пароль сильным паролем",
      "time" : {
        "start" : 1709484355557,
        "stop" : 1709484355613,
        "duration" : 56
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Заполнить поле подтверждение пароля сильным паролем",
      "time" : {
        "start" : 1709484355614,
        "stop" : 1709484355676,
        "duration" : 62
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Видимость сообщения: 'Я согласен получать новости и обновления PulseWave'",
      "time" : {
        "start" : 1709484355677,
        "stop" : 1709484355712,
        "duration" : 35
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Регистрация'",
      "time" : {
        "start" : 1709484355762,
        "stop" : 1709484355827,
        "duration" : 65
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получено сообщения о подтверждении регистрации",
      "time" : {
        "start" : 1709484355827,
        "stop" : 1709484357888,
        "duration" : 2061
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получено сообщение необходимости подтвердить регистрацию: \"Регистрация\nМы отправили вам письмо на test_pulsewave0@mail.ru.\nДля подтверждения регистрации и активации учётной записи пройдите по ссылке в письме.\nПисьмо не пришло?\nПроверьте папку Спам и нажмите кнопку «Отправить повторно».\"",
      "time" : {
        "start" : 1709484357888,
        "stop" : 1709484357898,
        "duration" : 10
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить ссылку подтверждения регистрации пользователя на емайл",
      "time" : {
        "start" : 1709484367898,
        "stop" : 1709484370440,
        "duration" : 2542
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "c7b659a265a8935c",
      "name" : "Screenshot",
      "source" : "c7b659a265a8935c.png",
      "type" : "image/png",
      "size" : 67585
    }, {
      "uid" : "54237b1644006f13",
      "name" : "HTML source",
      "source" : "54237b1644006f13.html",
      "type" : "text/html",
      "size" : 96726
    } ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1709484370536,
      "stop" : 1709484370594,
      "duration" : 58
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Регистрация'"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_signup_page"
  }, {
    "name" : "suite",
    "value" : "test_signup_page"
  }, {
    "name" : "subSuite",
    "value" : "TestSignupPage"
  }, {
    "name" : "host",
    "value" : "fv-az887-104"
  }, {
    "name" : "thread",
    "value" : "2306-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_signup_page.test_signup_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 10,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 26
      },
      "items" : [ {
        "uid" : "55b19d94ca64466e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/180//#testresult/55b19d94ca64466e",
        "status" : "passed",
        "time" : {
          "start" : 1709409320683,
          "stop" : 1709409337822,
          "duration" : 17139
        }
      }, {
        "uid" : "70191e5f7bf2837f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/179//#testresult/70191e5f7bf2837f",
        "status" : "passed",
        "time" : {
          "start" : 1709406354541,
          "stop" : 1709406370094,
          "duration" : 15553
        }
      }, {
        "uid" : "505a23681f2bf6a8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/178//#testresult/505a23681f2bf6a8",
        "status" : "passed",
        "time" : {
          "start" : 1708972565568,
          "stop" : 1708972581580,
          "duration" : 16012
        }
      }, {
        "uid" : "d32d01b8d1413300",
        "reportUrl" : "https://Nat754.github.io/PulseWave/177//#testresult/d32d01b8d1413300",
        "status" : "passed",
        "time" : {
          "start" : 1708886298563,
          "stop" : 1708886314886,
          "duration" : 16323
        }
      }, {
        "uid" : "4565a00a914a712f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/176//#testresult/4565a00a914a712f",
        "status" : "passed",
        "time" : {
          "start" : 1708883370132,
          "stop" : 1708883387097,
          "duration" : 16965
        }
      }, {
        "uid" : "afcb3588e06bacc8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/175//#testresult/afcb3588e06bacc8",
        "status" : "passed",
        "time" : {
          "start" : 1708806982755,
          "stop" : 1708806999883,
          "duration" : 17128
        }
      }, {
        "uid" : "d9caf443c01470ce",
        "reportUrl" : "https://Nat754.github.io/PulseWave/174//#testresult/d9caf443c01470ce",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55dcf5d08303 <unknown>\n#1 0x55dcf59ed2b7 <unknown>\n#2 0x55dcf5a21b40 <unknown>\n#3 0x55dcf5a1d6e5 <unknown>\n#4 0x55dcf5a67abc <unknown>\n#5 0x55dcf5a5b123 <unknown>\n#6 0x55dcf5a2b095 <unknown>\n#7 0x55dcf5a2c09e <unknown>\n#8 0x55dcf5ccc6ab <unknown>\n#9 0x55dcf5cd04ba <unknown>\n#10 0x55dcf5cb8f85 <unknown>\n#11 0x55dcf5cd112f <unknown>\n#12 0x55dcf5c9ce6f <unknown>\n#13 0x55dcf5cf55f8 <unknown>\n#14 0x55dcf5cf57c2 <unknown>\n#15 0x55dcf5d074a4 <unknown>\n#16 0x7fbef8e94ac3 <unknown>",
        "time" : {
          "start" : 1708805880965,
          "stop" : 1708805880965,
          "duration" : 0
        }
      }, {
        "uid" : "397ed802bbf416b9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/173//#testresult/397ed802bbf416b9",
        "status" : "passed",
        "time" : {
          "start" : 1708548269644,
          "stop" : 1708548285511,
          "duration" : 15867
        }
      }, {
        "uid" : "5a957e2832f5141c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/172//#testresult/5a957e2832f5141c",
        "status" : "passed",
        "time" : {
          "start" : 1707851669049,
          "stop" : 1707851686229,
          "duration" : 17180
        }
      }, {
        "uid" : "99fd3295d6c47ccc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/171//#testresult/99fd3295d6c47ccc",
        "status" : "passed",
        "time" : {
          "start" : 1707495066788,
          "stop" : 1707495083540,
          "duration" : 16752
        }
      }, {
        "uid" : "c4f2797ada07f3cf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/171//#testresult/c4f2797ada07f3cf",
        "status" : "passed",
        "time" : {
          "start" : 1707480143811,
          "stop" : 1707480160277,
          "duration" : 16466
        }
      }, {
        "uid" : "fcdb8af0cd62ee73",
        "reportUrl" : "https://Nat754.github.io/PulseWave/170//#testresult/fcdb8af0cd62ee73",
        "status" : "passed",
        "time" : {
          "start" : 1707255489188,
          "stop" : 1707255505740,
          "duration" : 16552
        }
      }, {
        "uid" : "5a9ee53bbb2c3115",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/5a9ee53bbb2c3115",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55a908421d93 <unknown>\n#1 0x55a908105337 <unknown>\n#2 0x55a908150d60 <unknown>\n#3 0x55a908150e51 <unknown>\n#4 0x55a908194bc4 <unknown>\n#5 0x55a90817346d <unknown>\n#6 0x55a90819212d <unknown>\n#7 0x55a9081731e3 <unknown>\n#8 0x55a908143135 <unknown>\n#9 0x55a90814413e <unknown>\n#10 0x55a9083e5e4b <unknown>\n#11 0x55a9083e9dfa <unknown>\n#12 0x55a9083d26d5 <unknown>\n#13 0x55a9083eaa6f <unknown>\n#14 0x55a9083b669f <unknown>\n#15 0x55a90840f098 <unknown>\n#16 0x55a90840f262 <unknown>\n#17 0x55a908420f34 <unknown>\n#18 0x7fbb09094ac3 <unknown>",
        "time" : {
          "start" : 1707252760713,
          "stop" : 1707252781387,
          "duration" : 20674
        }
      }, {
        "uid" : "e2aabcffb7b266c8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/e2aabcffb7b266c8",
        "status" : "passed",
        "time" : {
          "start" : 1707245659195,
          "stop" : 1707245675706,
          "duration" : 16511
        }
      }, {
        "uid" : "87a3c0ac5fddc5c6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/87a3c0ac5fddc5c6",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559db3602d93 <unknown>\n#1 0x559db32e6337 <unknown>\n#2 0x559db3331d60 <unknown>\n#3 0x559db3331e51 <unknown>\n#4 0x559db3375bc4 <unknown>\n#5 0x559db335446d <unknown>\n#6 0x559db337312d <unknown>\n#7 0x559db33541e3 <unknown>\n#8 0x559db3324135 <unknown>\n#9 0x559db332513e <unknown>\n#10 0x559db35c6e4b <unknown>\n#11 0x559db35cadfa <unknown>\n#12 0x559db35b36d5 <unknown>\n#13 0x559db35cba6f <unknown>\n#14 0x559db359769f <unknown>\n#15 0x559db35f0098 <unknown>\n#16 0x559db35f0262 <unknown>\n#17 0x559db3601f34 <unknown>\n#18 0x7f8ca0894ac3 <unknown>",
        "time" : {
          "start" : 1707244493349,
          "stop" : 1707244514055,
          "duration" : 20706
        }
      }, {
        "uid" : "a7abd78acf9809bb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/168//#testresult/a7abd78acf9809bb",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5581393b6d93 <unknown>\n#1 0x55813909a337 <unknown>\n#2 0x5581390e5d60 <unknown>\n#3 0x5581390e5e51 <unknown>\n#4 0x558139129bc4 <unknown>\n#5 0x55813910846d <unknown>\n#6 0x55813912712d <unknown>\n#7 0x5581391081e3 <unknown>\n#8 0x5581390d8135 <unknown>\n#9 0x5581390d913e <unknown>\n#10 0x55813937ae4b <unknown>\n#11 0x55813937edfa <unknown>\n#12 0x5581393676d5 <unknown>\n#13 0x55813937fa6f <unknown>\n#14 0x55813934b69f <unknown>\n#15 0x5581393a4098 <unknown>\n#16 0x5581393a4262 <unknown>\n#17 0x5581393b5f34 <unknown>\n#18 0x7f1d0f694ac3 <unknown>",
        "time" : {
          "start" : 1707241513099,
          "stop" : 1707241533734,
          "duration" : 20635
        }
      }, {
        "uid" : "bb8fc3273370aa57",
        "reportUrl" : "https://Nat754.github.io/PulseWave/167//#testresult/bb8fc3273370aa57",
        "status" : "broken",
        "statusDetails" : "TimeoutError: [Errno 110] Connection timed out",
        "time" : {
          "start" : 1707239931108,
          "stop" : 1707240068964,
          "duration" : 137856
        }
      }, {
        "uid" : "adf9e7ca645ba1f4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/adf9e7ca645ba1f4",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5637e4ac6d93 <unknown>\n#1 0x5637e47aa337 <unknown>\n#2 0x5637e47f5d60 <unknown>\n#3 0x5637e47f5e51 <unknown>\n#4 0x5637e4839bc4 <unknown>\n#5 0x5637e481846d <unknown>\n#6 0x5637e483712d <unknown>\n#7 0x5637e48181e3 <unknown>\n#8 0x5637e47e8135 <unknown>\n#9 0x5637e47e913e <unknown>\n#10 0x5637e4a8ae4b <unknown>\n#11 0x5637e4a8edfa <unknown>\n#12 0x5637e4a776d5 <unknown>\n#13 0x5637e4a8fa6f <unknown>\n#14 0x5637e4a5b69f <unknown>\n#15 0x5637e4ab4098 <unknown>\n#16 0x5637e4ab4262 <unknown>\n#17 0x5637e4ac5f34 <unknown>\n#18 0x7fd0ee894ac3 <unknown>",
        "time" : {
          "start" : 1707236241001,
          "stop" : 1707236261636,
          "duration" : 20635
        }
      }, {
        "uid" : "dc3c904566ec9f41",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/dc3c904566ec9f41",
        "status" : "broken",
        "statusDetails" : "TimeoutError: [Errno 110] Connection timed out",
        "time" : {
          "start" : 1707220320973,
          "stop" : 1707220459034,
          "duration" : 138061
        }
      }, {
        "uid" : "f855303c8ebb1e68",
        "reportUrl" : "https://Nat754.github.io/PulseWave/166//#testresult/f855303c8ebb1e68",
        "status" : "passed",
        "time" : {
          "start" : 1707218717637,
          "stop" : 1707218729542,
          "duration" : 11905
        }
      } ]
    },
    "tags" : [ "smoke" ]
  },
  "source" : "ce0594f31712e286.json",
  "parameterValues" : [ "'chrome'" ]
}