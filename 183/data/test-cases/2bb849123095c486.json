{
  "uid" : "2bb849123095c486",
  "name" : "POST Регистрация пользователя без подтверждения подписки",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_create_user_no_subscriber",
  "historyId" : "65cde6c273276871256fcbcd8d2a7b23",
  "time" : {
    "start" : 1709529440268,
    "stop" : 1709529450847,
    "duration" : 10579
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 502",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7ff88dfbf290>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7ff88d8e4230>\n\n    @allure.title(\"POST Регистрация пользователя без подтверждения подписки\")\n    def test_post_create_user_no_subscriber(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER_NO_SUBSCRIBER)\n        time.sleep(10)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:673: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [502]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 502\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1709529380531,
      "stop" : 1709529380531,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1709529380513,
      "stop" : 1709529380531,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1709529440268,
      "stop" : 1709529440268,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 502",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7ff88dfbf290>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7ff88d8e4230>\n\n    @allure.title(\"POST Регистрация пользователя без подтверждения подписки\")\n    def test_post_create_user_no_subscriber(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER_NO_SUBSCRIBER)\n        time.sleep(10)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:673: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [502]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 502\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1709529450846,
        "stop" : 1709529450846,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 502\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1148-702"
  }, {
    "name" : "thread",
    "value" : "2266-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 6,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 31,
        "unknown" : 0,
        "total" : 37
      },
      "items" : [ {
        "uid" : "47e0697e2c4c4299",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/47e0697e2c4c4299",
        "status" : "passed",
        "time" : {
          "start" : 1709496244915,
          "stop" : 1709496256450,
          "duration" : 11535
        }
      }, {
        "uid" : "71403029afc106c2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/71403029afc106c2",
        "status" : "passed",
        "time" : {
          "start" : 1709491583522,
          "stop" : 1709491595011,
          "duration" : 11489
        }
      }, {
        "uid" : "2e4b1addf505336d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/2e4b1addf505336d",
        "status" : "passed",
        "time" : {
          "start" : 1709489966066,
          "stop" : 1709489977819,
          "duration" : 11753
        }
      }, {
        "uid" : "20fd2e717c34ca29",
        "reportUrl" : "https://Nat754.github.io/PulseWave/182//#testresult/20fd2e717c34ca29",
        "status" : "passed",
        "time" : {
          "start" : 1709488217756,
          "stop" : 1709488229241,
          "duration" : 11485
        }
      }, {
        "uid" : "f04f3d6b4e853559",
        "reportUrl" : "https://Nat754.github.io/PulseWave/181//#testresult/f04f3d6b4e853559",
        "status" : "passed",
        "time" : {
          "start" : 1709486116302,
          "stop" : 1709486127859,
          "duration" : 11557
        }
      }, {
        "uid" : "9e22fb3813b2f825",
        "reportUrl" : "https://Nat754.github.io/PulseWave/181//#testresult/9e22fb3813b2f825",
        "status" : "passed",
        "time" : {
          "start" : 1709483888315,
          "stop" : 1709483899606,
          "duration" : 11291
        }
      }, {
        "uid" : "a17893ab5a588430",
        "reportUrl" : "https://Nat754.github.io/PulseWave/180//#testresult/a17893ab5a588430",
        "status" : "passed",
        "time" : {
          "start" : 1709408807478,
          "stop" : 1709408818863,
          "duration" : 11385
        }
      }, {
        "uid" : "d50fa8b07d5a95e0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/179//#testresult/d50fa8b07d5a95e0",
        "status" : "passed",
        "time" : {
          "start" : 1709405902735,
          "stop" : 1709405914120,
          "duration" : 11385
        }
      }, {
        "uid" : "cf06b7621fcd53ce",
        "reportUrl" : "https://Nat754.github.io/PulseWave/178//#testresult/cf06b7621fcd53ce",
        "status" : "passed",
        "time" : {
          "start" : 1708972177401,
          "stop" : 1708972188782,
          "duration" : 11381
        }
      }, {
        "uid" : "9eb22571fa581cc2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/177//#testresult/9eb22571fa581cc2",
        "status" : "passed",
        "time" : {
          "start" : 1708885853116,
          "stop" : 1708885864462,
          "duration" : 11346
        }
      }, {
        "uid" : "740c531bd829aee3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/176//#testresult/740c531bd829aee3",
        "status" : "passed",
        "time" : {
          "start" : 1708882845223,
          "stop" : 1708882856759,
          "duration" : 11536
        }
      }, {
        "uid" : "8abe66dc6f687815",
        "reportUrl" : "https://Nat754.github.io/PulseWave/175//#testresult/8abe66dc6f687815",
        "status" : "passed",
        "time" : {
          "start" : 1708806457046,
          "stop" : 1708806468485,
          "duration" : 11439
        }
      }, {
        "uid" : "8c2f918701ad28cc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/174//#testresult/8c2f918701ad28cc",
        "status" : "passed",
        "time" : {
          "start" : 1708805817442,
          "stop" : 1708805828935,
          "duration" : 11493
        }
      }, {
        "uid" : "d50fef00634dfa15",
        "reportUrl" : "https://Nat754.github.io/PulseWave/173//#testresult/d50fef00634dfa15",
        "status" : "passed",
        "time" : {
          "start" : 1708547881557,
          "stop" : 1708547892835,
          "duration" : 11278
        }
      }, {
        "uid" : "dae08f5cef79618b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/172//#testresult/dae08f5cef79618b",
        "status" : "passed",
        "time" : {
          "start" : 1707851109606,
          "stop" : 1707851120866,
          "duration" : 11260
        }
      }, {
        "uid" : "9844464636684730",
        "reportUrl" : "https://Nat754.github.io/PulseWave/171//#testresult/9844464636684730",
        "status" : "passed",
        "time" : {
          "start" : 1707494667209,
          "stop" : 1707494678693,
          "duration" : 11484
        }
      }, {
        "uid" : "3176ba23250270aa",
        "reportUrl" : "https://Nat754.github.io/PulseWave/171//#testresult/3176ba23250270aa",
        "status" : "passed",
        "time" : {
          "start" : 1707479728713,
          "stop" : 1707479740405,
          "duration" : 11692
        }
      }, {
        "uid" : "46f5b6833fcdeb9b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/170//#testresult/46f5b6833fcdeb9b",
        "status" : "passed",
        "time" : {
          "start" : 1707255096844,
          "stop" : 1707255108380,
          "duration" : 11536
        }
      }, {
        "uid" : "ab4a2b9e8fcd9ec2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/ab4a2b9e8fcd9ec2",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status 201, actual status 400\nassert 400 == 201\n +  where 400 = <Response [400]>.status_code\n +  and   201 = <tests.test_api.api_constant.StatusCode object at 0x7fa9b7e44980>.STATUS_201\n +    where <tests.test_api.api_constant.StatusCode object at 0x7fa9b7e44980> = <tests.test_api.test_api.TestAPI object at 0x7fa9b7f61bb0>.code",
        "time" : {
          "start" : 1707252335916,
          "stop" : 1707252346302,
          "duration" : 10386
        }
      }, {
        "uid" : "8a8d50c1d284267d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/169//#testresult/8a8d50c1d284267d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Expected status 201, actual status 400\nassert 400 == 201\n +  where 400 = <Response [400]>.status_code\n +  and   201 = <tests.test_api.api_constant.StatusCode object at 0x7fafd0da7f50>.STATUS_201\n +    where <tests.test_api.api_constant.StatusCode object at 0x7fafd0da7f50> = <tests.test_api.test_api.TestAPI object at 0x7fafd0ccf860>.code",
        "time" : {
          "start" : 1707245144619,
          "stop" : 1707245155166,
          "duration" : 10547
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2bb849123095c486.json",
  "parameterValues" : [ ]
}