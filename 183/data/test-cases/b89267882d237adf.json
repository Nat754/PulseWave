{
  "uid" : "b89267882d237adf",
  "name" : "POST Создать пару токенов access и refresh",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_jwt_create",
  "historyId" : "3a2538cb31301304b345f32dcb0f93b0",
  "time" : {
    "start" : 1709529400537,
    "stop" : 1709529401531,
    "duration" : 994
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 502",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7ff88dfb7fe0>\n\n    @allure.title(\"POST Создать пару токенов access и refresh\")\n    def test_post_auth_jwt_create(self):\n        url = f'{self.constant.BASE_URL}auth/jwt/create/'\n        response = requests.post(url, json={\"email\": email1, \"password\": password0})\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [502]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 502\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1709529380531,
      "stop" : 1709529380531,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1709529380513,
      "stop" : 1709529380531,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 502",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7ff88dfb7fe0>\n\n    @allure.title(\"POST Создать пару токенов access и refresh\")\n    def test_post_auth_jwt_create(self):\n        url = f'{self.constant.BASE_URL}auth/jwt/create/'\n        response = requests.post(url, json={\"email\": email1, \"password\": password0})\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [502]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 502\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 200",
      "time" : {
        "start" : 1709529401531,
        "stop" : 1709529401531,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 502\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1148-702"
  }, {
    "name" : "thread",
    "value" : "2266-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "35c82a9e2fb3e1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/35c82a9e2fb3e1",
        "status" : "passed",
        "time" : {
          "start" : 1709495927846,
          "stop" : 1709495928908,
          "duration" : 1062
        }
      }, {
        "uid" : "d7930d6f169a6955",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/d7930d6f169a6955",
        "status" : "passed",
        "time" : {
          "start" : 1709491252515,
          "stop" : 1709491253546,
          "duration" : 1031
        }
      }, {
        "uid" : "86bc9c70374dbe19",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/86bc9c70374dbe19",
        "status" : "passed",
        "time" : {
          "start" : 1709489651077,
          "stop" : 1709489652085,
          "duration" : 1008
        }
      }, {
        "uid" : "53e20f36a081f571",
        "reportUrl" : "https://Nat754.github.io/PulseWave/182//#testresult/53e20f36a081f571",
        "status" : "passed",
        "time" : {
          "start" : 1709487939643,
          "stop" : 1709487940592,
          "duration" : 949
        }
      }, {
        "uid" : "5f070540c013473",
        "reportUrl" : "https://Nat754.github.io/PulseWave/181//#testresult/5f070540c013473",
        "status" : "passed",
        "time" : {
          "start" : 1709485787832,
          "stop" : 1709485789437,
          "duration" : 1605
        }
      }, {
        "uid" : "df787fba314e4961",
        "reportUrl" : "https://Nat754.github.io/PulseWave/181//#testresult/df787fba314e4961",
        "status" : "passed",
        "time" : {
          "start" : 1709483628633,
          "stop" : 1709483629504,
          "duration" : 871
        }
      }, {
        "uid" : "b29e85143177e029",
        "reportUrl" : "https://Nat754.github.io/PulseWave/180//#testresult/b29e85143177e029",
        "status" : "passed",
        "time" : {
          "start" : 1709408534040,
          "stop" : 1709408534786,
          "duration" : 746
        }
      }, {
        "uid" : "73af4b85e6736f79",
        "reportUrl" : "https://Nat754.github.io/PulseWave/179//#testresult/73af4b85e6736f79",
        "status" : "passed",
        "time" : {
          "start" : 1709405685689,
          "stop" : 1709405686445,
          "duration" : 756
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b89267882d237adf.json",
  "parameterValues" : [ ]
}