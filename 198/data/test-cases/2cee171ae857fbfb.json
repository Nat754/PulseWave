{
  "uid" : "2cee171ae857fbfb",
  "name" : "POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке     auth/password/reset/confirm/{uid}/{token}",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_users_reset_password_confirm",
  "historyId" : "955584523e44b3e59bd87d6626c56c0c",
  "time" : {
    "start" : 1713593054797,
    "stop" : 1713593061528,
    "duration" : 6731
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 500",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6bb28a49b0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f6bb2289e20>\n\n    @allure.title(\"POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке \\\n    auth/password/reset/confirm/{uid}/{token}\")\n    def test_post_auth_users_reset_password_confirm(self, use_api_base):\n        jwt = use_api_base.create_jwt(email2, password0)\n        page = ApiBase()\n        url = f'{self.constant.BASE_URL}auth/users/reset_password_confirm/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                                 json=page.get_confirm_email_tokens(email2, password2) | {\n                                 \"new_password\": password3, \"re_new_password\": password3})\n>       Assertions.assert_status_code(response, self.code.STATUS_204)\n\ntests/test_api/test_api.py:634: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 204\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 204. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1713592659434,
      "stop" : 1713592659451,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1713592659451,
      "stop" : 1713592659452,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1713593054797,
      "stop" : 1713593054797,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 500",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6bb28a49b0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f6bb2289e20>\n\n    @allure.title(\"POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке \\\n    auth/password/reset/confirm/{uid}/{token}\")\n    def test_post_auth_users_reset_password_confirm(self, use_api_base):\n        jwt = use_api_base.create_jwt(email2, password0)\n        page = ApiBase()\n        url = f'{self.constant.BASE_URL}auth/users/reset_password_confirm/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                                 json=page.get_confirm_email_tokens(email2, password2) | {\n                                 \"new_password\": password3, \"re_new_password\": password3})\n>       Assertions.assert_status_code(response, self.code.STATUS_204)\n\ntests/test_api/test_api.py:634: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 204\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 204. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1713593054797,
        "stop" : 1713593057091,
        "duration" : 2294
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить токен подтверждения пользователя на емайл",
      "time" : {
        "start" : 1713593057092,
        "stop" : 1713593060042,
        "duration" : 2950
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 204",
      "time" : {
        "start" : 1713593061528,
        "stop" : 1713593061528,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 500\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1206-36"
  }, {
    "name" : "thread",
    "value" : "2375-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 6,
        "skipped" : 0,
        "passed" : 46,
        "unknown" : 0,
        "total" : 54
      },
      "items" : [ {
        "uid" : "227f9c00c290ab54",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/227f9c00c290ab54",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 204. Actual: 500",
        "time" : {
          "start" : 1713435951198,
          "stop" : 1713435959208,
          "duration" : 8010
        }
      }, {
        "uid" : "bb2252c79d32ff5d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/197//#testresult/bb2252c79d32ff5d",
        "status" : "passed",
        "time" : {
          "start" : 1713198873159,
          "stop" : 1713198878874,
          "duration" : 5715
        }
      }, {
        "uid" : "a9e383ae60831e3c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/a9e383ae60831e3c",
        "status" : "passed",
        "time" : {
          "start" : 1713101472056,
          "stop" : 1713101477692,
          "duration" : 5636
        }
      }, {
        "uid" : "cfe0885471c44273",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/cfe0885471c44273",
        "status" : "passed",
        "time" : {
          "start" : 1711136817257,
          "stop" : 1711136821799,
          "duration" : 4542
        }
      }, {
        "uid" : "4a550b065a0f8a95",
        "reportUrl" : "https://Nat754.github.io/PulseWave/195//#testresult/4a550b065a0f8a95",
        "status" : "passed",
        "time" : {
          "start" : 1710361158799,
          "stop" : 1710361164064,
          "duration" : 5265
        }
      }, {
        "uid" : "e7093c8afa3e8017",
        "reportUrl" : "https://Nat754.github.io/PulseWave/194//#testresult/e7093c8afa3e8017",
        "status" : "passed",
        "time" : {
          "start" : 1710226563735,
          "stop" : 1710226569079,
          "duration" : 5344
        }
      }, {
        "uid" : "e61005a5f4d7c285",
        "reportUrl" : "https://Nat754.github.io/PulseWave/193//#testresult/e61005a5f4d7c285",
        "status" : "passed",
        "time" : {
          "start" : 1710181528724,
          "stop" : 1710181532608,
          "duration" : 3884
        }
      }, {
        "uid" : "20c6ca355578ff02",
        "reportUrl" : "https://Nat754.github.io/PulseWave/192//#testresult/20c6ca355578ff02",
        "status" : "passed",
        "time" : {
          "start" : 1710081076449,
          "stop" : 1710081080283,
          "duration" : 3834
        }
      }, {
        "uid" : "d7c7dbae5f55572f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/191//#testresult/d7c7dbae5f55572f",
        "status" : "passed",
        "time" : {
          "start" : 1709990497196,
          "stop" : 1709990502009,
          "duration" : 4813
        }
      }, {
        "uid" : "cf109a4fceff504c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/190//#testresult/cf109a4fceff504c",
        "status" : "passed",
        "time" : {
          "start" : 1709988720723,
          "stop" : 1709988726481,
          "duration" : 5758
        }
      }, {
        "uid" : "1efef0b1c01b0865",
        "reportUrl" : "https://Nat754.github.io/PulseWave/189//#testresult/1efef0b1c01b0865",
        "status" : "passed",
        "time" : {
          "start" : 1709931674793,
          "stop" : 1709931679726,
          "duration" : 4933
        }
      }, {
        "uid" : "437fd3254c746047",
        "reportUrl" : "https://Nat754.github.io/PulseWave/188//#testresult/437fd3254c746047",
        "status" : "passed",
        "time" : {
          "start" : 1709929632490,
          "stop" : 1709929637110,
          "duration" : 4620
        }
      }, {
        "uid" : "7049619989dc5380",
        "reportUrl" : "https://Nat754.github.io/PulseWave/187//#testresult/7049619989dc5380",
        "status" : "passed",
        "time" : {
          "start" : 1709814120356,
          "stop" : 1709814124725,
          "duration" : 4369
        }
      }, {
        "uid" : "5fc0da04e6ec44bc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/186//#testresult/5fc0da04e6ec44bc",
        "status" : "passed",
        "time" : {
          "start" : 1709750499507,
          "stop" : 1709750503447,
          "duration" : 3940
        }
      }, {
        "uid" : "21d4dcaeb091a9a2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/185//#testresult/21d4dcaeb091a9a2",
        "status" : "passed",
        "time" : {
          "start" : 1709748938773,
          "stop" : 1709748944101,
          "duration" : 5328
        }
      }, {
        "uid" : "ec3fd2f19beeb7b4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/184//#testresult/ec3fd2f19beeb7b4",
        "status" : "passed",
        "time" : {
          "start" : 1709534961666,
          "stop" : 1709534964944,
          "duration" : 3278
        }
      }, {
        "uid" : "4550ec301f37da1e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/4550ec301f37da1e",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1709529437744,
          "stop" : 1709529438324,
          "duration" : 580
        }
      }, {
        "uid" : "47a9c6e592d640a0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/47a9c6e592d640a0",
        "status" : "passed",
        "time" : {
          "start" : 1709496236688,
          "stop" : 1709496241361,
          "duration" : 4673
        }
      }, {
        "uid" : "532a9f71512aadfb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/532a9f71512aadfb",
        "status" : "passed",
        "time" : {
          "start" : 1709491573928,
          "stop" : 1709491579504,
          "duration" : 5576
        }
      }, {
        "uid" : "47c1781c03edc8b3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/47c1781c03edc8b3",
        "status" : "passed",
        "time" : {
          "start" : 1709489956755,
          "stop" : 1709489962328,
          "duration" : 5573
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2cee171ae857fbfb.json",
  "parameterValues" : [ ]
}