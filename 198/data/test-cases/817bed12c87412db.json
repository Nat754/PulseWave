{
  "uid" : "817bed12c87412db",
  "name" : "POST Активация пользователя с корректными данными",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_users_activation",
  "historyId" : "41cff5be4c2a881c5826f33ddc93442d",
  "time" : {
    "start" : 1713592672077,
    "stop" : 1713592676540,
    "duration" : 4463
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 500",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6bb2899ac0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f6bb226baa0>\n\n    @allure.title(\"POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/activation/'\n        user_token = use_api_base.get_activate_email_tokens(email1, password1)\n        response = requests.post(url, json=user_token)\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1713592659434,
      "stop" : 1713592659451,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1713592659451,
      "stop" : 1713592659452,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1713592672077,
      "stop" : 1713592672077,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 500",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6bb2899ac0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f6bb226baa0>\n\n    @allure.title(\"POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/activation/'\n        user_token = use_api_base.get_activate_email_tokens(email1, password1)\n        response = requests.post(url, json=user_token)\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить токен активации пользователя на емайл",
      "time" : {
        "start" : 1713592672077,
        "stop" : 1713592674986,
        "duration" : 2909
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 200",
      "time" : {
        "start" : 1713592676539,
        "stop" : 1713592676540,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 500\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1206-36"
  }, {
    "name" : "thread",
    "value" : "2375-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 49,
        "unknown" : 0,
        "total" : 55
      },
      "items" : [ {
        "uid" : "1591529897eb8c2c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/1591529897eb8c2c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 200. Actual: 500",
        "time" : {
          "start" : 1713435477163,
          "stop" : 1713435482170,
          "duration" : 5007
        }
      }, {
        "uid" : "7e64df3975107086",
        "reportUrl" : "https://Nat754.github.io/PulseWave/197//#testresult/7e64df3975107086",
        "status" : "passed",
        "time" : {
          "start" : 1713198393318,
          "stop" : 1713198396601,
          "duration" : 3283
        }
      }, {
        "uid" : "1c5d5962d21bb436",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/1c5d5962d21bb436",
        "status" : "passed",
        "time" : {
          "start" : 1713100969049,
          "stop" : 1713100972294,
          "duration" : 3245
        }
      }, {
        "uid" : "f60220b954d4f4a0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/f60220b954d4f4a0",
        "status" : "passed",
        "time" : {
          "start" : 1711136494486,
          "stop" : 1711136497527,
          "duration" : 3041
        }
      }, {
        "uid" : "e399c248ba182b36",
        "reportUrl" : "https://Nat754.github.io/PulseWave/195//#testresult/e399c248ba182b36",
        "status" : "passed",
        "time" : {
          "start" : 1710360758291,
          "stop" : 1710360761755,
          "duration" : 3464
        }
      }, {
        "uid" : "2c879f25ca7c9539",
        "reportUrl" : "https://Nat754.github.io/PulseWave/194//#testresult/2c879f25ca7c9539",
        "status" : "passed",
        "time" : {
          "start" : 1710226210941,
          "stop" : 1710226215191,
          "duration" : 4250
        }
      }, {
        "uid" : "5d56aff6582e3937",
        "reportUrl" : "https://Nat754.github.io/PulseWave/193//#testresult/5d56aff6582e3937",
        "status" : "passed",
        "time" : {
          "start" : 1710181247279,
          "stop" : 1710181250274,
          "duration" : 2995
        }
      }, {
        "uid" : "3e335c6fa62bcad8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/192//#testresult/3e335c6fa62bcad8",
        "status" : "passed",
        "time" : {
          "start" : 1710080797871,
          "stop" : 1710080800806,
          "duration" : 2935
        }
      }, {
        "uid" : "6764c6ea813dabe8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/191//#testresult/6764c6ea813dabe8",
        "status" : "passed",
        "time" : {
          "start" : 1709990172097,
          "stop" : 1709990175909,
          "duration" : 3812
        }
      }, {
        "uid" : "17dfd8c4405445e8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/190//#testresult/17dfd8c4405445e8",
        "status" : "passed",
        "time" : {
          "start" : 1709988398462,
          "stop" : 1709988402313,
          "duration" : 3851
        }
      }, {
        "uid" : "cfae9713ce61ac7d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/189//#testresult/cfae9713ce61ac7d",
        "status" : "passed",
        "time" : {
          "start" : 1709931345052,
          "stop" : 1709931349108,
          "duration" : 4056
        }
      }, {
        "uid" : "576faea511a81c32",
        "reportUrl" : "https://Nat754.github.io/PulseWave/188//#testresult/576faea511a81c32",
        "status" : "passed",
        "time" : {
          "start" : 1709929303307,
          "stop" : 1709929307130,
          "duration" : 3823
        }
      }, {
        "uid" : "70aeaadb0014d6f4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/187//#testresult/70aeaadb0014d6f4",
        "status" : "passed",
        "time" : {
          "start" : 1709813839622,
          "stop" : 1709813842585,
          "duration" : 2963
        }
      }, {
        "uid" : "573c17b936191dc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/186//#testresult/573c17b936191dc",
        "status" : "passed",
        "time" : {
          "start" : 1709750216802,
          "stop" : 1709750219871,
          "duration" : 3069
        }
      }, {
        "uid" : "c38769b78076c5d7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/185//#testresult/c38769b78076c5d7",
        "status" : "passed",
        "time" : {
          "start" : 1709748586213,
          "stop" : 1709748590306,
          "duration" : 4093
        }
      }, {
        "uid" : "a6ad17b0ad2c7b65",
        "reportUrl" : "https://Nat754.github.io/PulseWave/184//#testresult/a6ad17b0ad2c7b65",
        "status" : "passed",
        "time" : {
          "start" : 1709534727567,
          "stop" : 1709534731315,
          "duration" : 3748
        }
      }, {
        "uid" : "ec01b218c7d496bb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/ec01b218c7d496bb",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1709529391722,
          "stop" : 1709529394272,
          "duration" : 2550
        }
      }, {
        "uid" : "d559fe63b5a4bc8b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/d559fe63b5a4bc8b",
        "status" : "passed",
        "time" : {
          "start" : 1709495907776,
          "stop" : 1709495911310,
          "duration" : 3534
        }
      }, {
        "uid" : "4aa21fd41c64556",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/4aa21fd41c64556",
        "status" : "passed",
        "time" : {
          "start" : 1709491229975,
          "stop" : 1709491234079,
          "duration" : 4104
        }
      }, {
        "uid" : "46c693499199dcc1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/46c693499199dcc1",
        "status" : "passed",
        "time" : {
          "start" : 1709489631500,
          "stop" : 1709489635467,
          "duration" : 3967
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "817bed12c87412db.json",
  "parameterValues" : [ ]
}