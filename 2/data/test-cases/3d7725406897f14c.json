{
  "uid" : "3d7725406897f14c",
  "name" : "POST Создать пользователя с корректными данными",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_user",
  "historyId" : "d9a2437627bbe237bdf3b37bffffa3b2",
  "time" : {
    "start" : 1713752349808,
    "stop" : 1713752360793,
    "duration" : 10985
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fe1b7bd9250>\n\n    @allure.title(\"POST Создать пользователя с корректными данными\")\n    def test_post_auth_user(self):\n        url = f'{self.constant.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER)\n        time.sleep(10)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : true,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1713752349791,
      "stop" : 1713752349808,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1713752349808,
      "stop" : 1713752349808,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fe1b7bd9250>\n\n    @allure.title(\"POST Создать пользователя с корректными данными\")\n    def test_post_auth_user(self):\n        url = f'{self.constant.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER)\n        time.sleep(10)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1713752360792,
        "stop" : 1713752360792,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az777-441"
  }, {
    "name" : "thread",
    "value" : "2376-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 25,
        "unknown" : 0,
        "total" : 28
      },
      "items" : [ {
        "uid" : "af7694dd982b905b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/1//#testresult/af7694dd982b905b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
        "time" : {
          "start" : 1713665975968,
          "stop" : 1713665987927,
          "duration" : 11959
        }
      }, {
        "uid" : "3ba075cdf3c93f3f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/198//#testresult/3ba075cdf3c93f3f",
        "status" : "passed",
        "time" : {
          "start" : 1713592659452,
          "stop" : 1713592672075,
          "duration" : 12623
        }
      }, {
        "uid" : "6b70d46e2a203388",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/6b70d46e2a203388",
        "status" : "passed",
        "time" : {
          "start" : 1713435463380,
          "stop" : 1713435477160,
          "duration" : 13780
        }
      }, {
        "uid" : "d874224864ee95bb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/197//#testresult/d874224864ee95bb",
        "status" : "passed",
        "time" : {
          "start" : 1713198379817,
          "stop" : 1713198393316,
          "duration" : 13499
        }
      }, {
        "uid" : "d57f3bd67ac3426f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/d57f3bd67ac3426f",
        "status" : "passed",
        "time" : {
          "start" : 1713100955921,
          "stop" : 1713100969047,
          "duration" : 13126
        }
      }, {
        "uid" : "d8bce8f8f31be4d5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/d8bce8f8f31be4d5",
        "status" : "passed",
        "time" : {
          "start" : 1711136482391,
          "stop" : 1711136494484,
          "duration" : 12093
        }
      }, {
        "uid" : "f48608a72539bc5a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/195//#testresult/f48608a72539bc5a",
        "status" : "passed",
        "time" : {
          "start" : 1710360745285,
          "stop" : 1710360758289,
          "duration" : 13004
        }
      }, {
        "uid" : "739b58a674f46135",
        "reportUrl" : "https://Nat754.github.io/PulseWave/194//#testresult/739b58a674f46135",
        "status" : "passed",
        "time" : {
          "start" : 1710226198568,
          "stop" : 1710226210939,
          "duration" : 12371
        }
      }, {
        "uid" : "6da6b38af1fd4dbb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/193//#testresult/6da6b38af1fd4dbb",
        "status" : "passed",
        "time" : {
          "start" : 1710181235517,
          "stop" : 1710181247277,
          "duration" : 11760
        }
      }, {
        "uid" : "9cd9c244c29ebbd2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/192//#testresult/9cd9c244c29ebbd2",
        "status" : "passed",
        "time" : {
          "start" : 1710080785630,
          "stop" : 1710080797869,
          "duration" : 12239
        }
      }, {
        "uid" : "2f975349a235506e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/191//#testresult/2f975349a235506e",
        "status" : "passed",
        "time" : {
          "start" : 1709990160130,
          "stop" : 1709990172095,
          "duration" : 11965
        }
      }, {
        "uid" : "f18a044099964525",
        "reportUrl" : "https://Nat754.github.io/PulseWave/190//#testresult/f18a044099964525",
        "status" : "passed",
        "time" : {
          "start" : 1709988386418,
          "stop" : 1709988398460,
          "duration" : 12042
        }
      }, {
        "uid" : "a2ca643ff2903f22",
        "reportUrl" : "https://Nat754.github.io/PulseWave/189//#testresult/a2ca643ff2903f22",
        "status" : "passed",
        "time" : {
          "start" : 1709931333013,
          "stop" : 1709931345050,
          "duration" : 12037
        }
      }, {
        "uid" : "ba61350eaf6c990e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/188//#testresult/ba61350eaf6c990e",
        "status" : "passed",
        "time" : {
          "start" : 1709929290931,
          "stop" : 1709929303304,
          "duration" : 12373
        }
      }, {
        "uid" : "4af8e1c73e8afd5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/187//#testresult/4af8e1c73e8afd5",
        "status" : "passed",
        "time" : {
          "start" : 1709813827621,
          "stop" : 1709813839620,
          "duration" : 11999
        }
      }, {
        "uid" : "6edd74a3fc9784ff",
        "reportUrl" : "https://Nat754.github.io/PulseWave/186//#testresult/6edd74a3fc9784ff",
        "status" : "passed",
        "time" : {
          "start" : 1709750204813,
          "stop" : 1709750216800,
          "duration" : 11987
        }
      }, {
        "uid" : "c8a9742df4dd27a7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/185//#testresult/c8a9742df4dd27a7",
        "status" : "passed",
        "time" : {
          "start" : 1709748573897,
          "stop" : 1709748586211,
          "duration" : 12314
        }
      }, {
        "uid" : "f3af1a903c39e8a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/184//#testresult/f3af1a903c39e8a",
        "status" : "passed",
        "time" : {
          "start" : 1709534715975,
          "stop" : 1709534727564,
          "duration" : 11589
        }
      }, {
        "uid" : "55fbf04372746a47",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/55fbf04372746a47",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 201. Actual: 502",
        "time" : {
          "start" : 1709529380532,
          "stop" : 1709529391664,
          "duration" : 11132
        }
      }, {
        "uid" : "eea30068f6a21fa5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/183//#testresult/eea30068f6a21fa5",
        "status" : "passed",
        "time" : {
          "start" : 1709495895773,
          "stop" : 1709495907773,
          "duration" : 12000
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3d7725406897f14c.json",
  "parameterValues" : [ ]
}