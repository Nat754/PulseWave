{
  "uid" : "e9d4acf42dfc89f0",
  "name" : "GET Получение комментария",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_task_id_comment",
  "historyId" : "0676f9cd255bfab810907c313091928a",
  "time" : {
    "start" : 1715308171259,
    "stop" : 1715308180935,
    "duration" : 9676
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nKeyError: 'id'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f3d3fba7f20>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f3d3f5860c0>\n\n    @pytest.mark.xfail\n    @allure.title(\"GET Получение комментария\")\n    def test_get_task_id_comment(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n>       column_id, task_id = use_api_base.get_column_task_id()\n\ntests/test_api/test_api.py:481: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:177: in get_column_task_id\n    board_id, column_id = self.get_board_column_id()\napi_testing/api_base.py:163: in get_board_column_id\n    workspace_id, board_id = self.get_board_id()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api_testing.api_base.ApiBase object at 0x7f3d3f5860c0>\n\n    def get_board_id(self):\n        with allure.step(\"Получить id доски\"):\n            jwt = self.create_jwt(email1, password0)\n            workspace_id = self.get_workspace_id()\n            url = f'{ApiConstant.BASE_URL}api/workspace/{workspace_id}/boards/'\n            response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                     json={\"name\": faker.job()[:50], \"work_space\": f\"{workspace_id}\"})\n            # print(response.json())\n>           board_id = response.json()['id']\nE           KeyError: 'id'\n\napi_testing/api_base.py:157: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1715307890959,
      "stop" : 1715307890959,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1715308171259,
      "stop" : 1715308171259,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1715307890943,
      "stop" : 1715307890959,
      "duration" : 16
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nKeyError: 'id'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f3d3fba7f20>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f3d3f5860c0>\n\n    @pytest.mark.xfail\n    @allure.title(\"GET Получение комментария\")\n    def test_get_task_id_comment(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n>       column_id, task_id = use_api_base.get_column_task_id()\n\ntests/test_api/test_api.py:481: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:177: in get_column_task_id\n    board_id, column_id = self.get_board_column_id()\napi_testing/api_base.py:163: in get_board_column_id\n    workspace_id, board_id = self.get_board_id()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api_testing.api_base.ApiBase object at 0x7f3d3f5860c0>\n\n    def get_board_id(self):\n        with allure.step(\"Получить id доски\"):\n            jwt = self.create_jwt(email1, password0)\n            workspace_id = self.get_workspace_id()\n            url = f'{ApiConstant.BASE_URL}api/workspace/{workspace_id}/boards/'\n            response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                     json={\"name\": faker.job()[:50], \"work_space\": f\"{workspace_id}\"})\n            # print(response.json())\n>           board_id = response.json()['id']\nE           KeyError: 'id'\n\napi_testing/api_base.py:157: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1715308171259,
        "stop" : 1715308172810,
        "duration" : 1551
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить id задачи",
      "time" : {
        "start" : 1715308172811,
        "stop" : 1715308180935,
        "duration" : 8124
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'id'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 177, in get_column_task_id\n    board_id, column_id = self.get_board_column_id()\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 163, in get_board_column_id\n    workspace_id, board_id = self.get_board_id()\n                             ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 157, in get_board_id\n    board_id = response.json()['id']\n               ~~~~~~~~~~~~~~~^^^^^^\n",
      "steps" : [ {
        "name" : "Получить access токен пользователя на емайл",
        "time" : {
          "start" : 1715308172811,
          "stop" : 1715308174201,
          "duration" : 1390
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Получить id колонки",
        "time" : {
          "start" : 1715308174202,
          "stop" : 1715308180934,
          "duration" : 6732
        },
        "status" : "broken",
        "statusMessage" : "KeyError: 'id'\n",
        "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 163, in get_board_column_id\n    workspace_id, board_id = self.get_board_id()\n                             ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 157, in get_board_id\n    board_id = response.json()['id']\n               ~~~~~~~~~~~~~~~^^^^^^\n",
        "steps" : [ {
          "name" : "Получить access токен пользователя на емайл",
          "time" : {
            "start" : 1715308174202,
            "stop" : 1715308175633,
            "duration" : 1431
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Получить id доски",
          "time" : {
            "start" : 1715308175633,
            "stop" : 1715308180934,
            "duration" : 5301
          },
          "status" : "broken",
          "statusMessage" : "KeyError: 'id'\n",
          "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 157, in get_board_id\n    board_id = response.json()['id']\n               ~~~~~~~~~~~~~~~^^^^^^\n",
          "steps" : [ {
            "name" : "Получить access токен пользователя на емайл",
            "time" : {
              "start" : 1715308175634,
              "stop" : 1715308177010,
              "duration" : 1376
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : false
          }, {
            "name" : "Получить id рабочего пространства",
            "time" : {
              "start" : 1715308177011,
              "stop" : 1715308180133,
              "duration" : 3122
            },
            "status" : "passed",
            "steps" : [ {
              "name" : "Получить access токен пользователя на емайл",
              "time" : {
                "start" : 1715308177011,
                "stop" : 1715308178488,
                "duration" : 1477
              },
              "status" : "passed",
              "steps" : [ ],
              "attachments" : [ ],
              "parameters" : [ ],
              "stepsCount" : 0,
              "attachmentsCount" : 0,
              "shouldDisplayMessage" : false,
              "hasContent" : false
            } ],
            "attachments" : [ ],
            "parameters" : [ ],
            "stepsCount" : 1,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : true
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 3,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : true,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 5,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1206-243"
  }, {
    "name" : "thread",
    "value" : "2304-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 25,
        "passed" : 0,
        "unknown" : 0,
        "total" : 25
      },
      "items" : [ {
        "uid" : "85887ca40433140e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/19//#testresult/85887ca40433140e",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715221618973,
          "stop" : 1715221628491,
          "duration" : 9518
        }
      }, {
        "uid" : "7e5f84ec57d7ce81",
        "reportUrl" : "https://Nat754.github.io/PulseWave/18//#testresult/7e5f84ec57d7ce81",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715134291457,
          "stop" : 1715134299394,
          "duration" : 7937
        }
      }, {
        "uid" : "8f7ecf1b4cab9cb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/17//#testresult/8f7ecf1b4cab9cb",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715048947576,
          "stop" : 1715048955835,
          "duration" : 8259
        }
      }, {
        "uid" : "d93035be94e69aa",
        "reportUrl" : "https://Nat754.github.io/PulseWave/16//#testresult/d93035be94e69aa",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714962346518,
          "stop" : 1714962354847,
          "duration" : 8329
        }
      }, {
        "uid" : "123fb81236d73e14",
        "reportUrl" : "https://Nat754.github.io/PulseWave/15//#testresult/123fb81236d73e14",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714875920651,
          "stop" : 1714875929830,
          "duration" : 9179
        }
      }, {
        "uid" : "4094696b42674c97",
        "reportUrl" : "https://Nat754.github.io/PulseWave/14//#testresult/4094696b42674c97",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714827466476,
          "stop" : 1714827473709,
          "duration" : 7233
        }
      }, {
        "uid" : "767f44df336cc92c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/14//#testresult/767f44df336cc92c",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nKeyError: 'access'",
        "time" : {
          "start" : 1714789060235,
          "stop" : 1714789061561,
          "duration" : 1326
        }
      }, {
        "uid" : "a4800fce678c5b0f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/13//#testresult/a4800fce678c5b0f",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nKeyError: 'access'",
        "time" : {
          "start" : 1714702921258,
          "stop" : 1714702922485,
          "duration" : 1227
        }
      }, {
        "uid" : "6d282abd8f01e5f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/12//#testresult/6d282abd8f01e5f",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nKeyError: 'access'",
        "time" : {
          "start" : 1714616372721,
          "stop" : 1714616373958,
          "duration" : 1237
        }
      }, {
        "uid" : "691f1af8d39ec56a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/11//#testresult/691f1af8d39ec56a",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nKeyError: 'access'",
        "time" : {
          "start" : 1714530307546,
          "stop" : 1714530308804,
          "duration" : 1258
        }
      }, {
        "uid" : "87c1c55702878dea",
        "reportUrl" : "https://Nat754.github.io/PulseWave/10//#testresult/87c1c55702878dea",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f17c7dbe840>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714443505746,
          "stop" : 1714443505937,
          "duration" : 191
        }
      }, {
        "uid" : "e4ebdc1de879b57c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/9//#testresult/e4ebdc1de879b57c",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f7971e01b80>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1714357181362,
          "stop" : 1714357181486,
          "duration" : 124
        }
      }, {
        "uid" : "46434c04acd68381",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/46434c04acd68381",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='owa.pulsewave.ru', port=443): Max retries exceeded with url: /auth/jwt/create/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1000)')))",
        "time" : {
          "start" : 1714270970426,
          "stop" : 1714270970740,
          "duration" : 314
        }
      }, {
        "uid" : "e64e62bb009add41",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/e64e62bb009add41",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714184501032,
          "stop" : 1714184510123,
          "duration" : 9091
        }
      }, {
        "uid" : "d6eff2a202a830ee",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/d6eff2a202a830ee",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714148039569,
          "stop" : 1714148047456,
          "duration" : 7887
        }
      }, {
        "uid" : "8a26ec9d9f8aa3d3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/8a26ec9d9f8aa3d3",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714098099657,
          "stop" : 1714098107740,
          "duration" : 8083
        }
      }, {
        "uid" : "9151b1ae77c850f3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/9151b1ae77c850f3",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714014020215,
          "stop" : 1714014027617,
          "duration" : 7402
        }
      }, {
        "uid" : "ded23b6f475e767",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/ded23b6f475e767",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713945473553,
          "stop" : 1713945482179,
          "duration" : 8626
        }
      }, {
        "uid" : "13bdb3f7efebb574",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/13bdb3f7efebb574",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713925285743,
          "stop" : 1713925293234,
          "duration" : 7491
        }
      }, {
        "uid" : "dbd3b93d7fa0c578",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/dbd3b93d7fa0c578",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1713901100054,
          "stop" : 1713901108293,
          "duration" : 8239
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "e9d4acf42dfc89f0.json",
  "parameterValues" : [ ]
}