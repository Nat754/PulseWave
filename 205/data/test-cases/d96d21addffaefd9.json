{
  "uid" : "d96d21addffaefd9",
  "name" : "POST Создать доску без указания РП",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_api_board_create",
  "historyId" : "a6085ff02c8eb32aa6f75c6af168277f",
  "time" : {
    "start" : 1713867448358,
    "stop" : 1713867450453,
    "duration" : 2095
  },
  "description" : "Создание доски без указания РП, будет создано дефолтное РП для этой доски",
  "descriptionHtml" : "<p>Создание доски без указания РП, будет создано дефолтное РП для этой доски</p>\n",
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 201. Actual: 500",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7faef229bfb0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7faef1c2b6e0>\n\n    @pytest.mark.xfail(reazon='Bug')\n    @allure.title(\"POST Создать доску без указания РП\")\n    def test_post_api_board_create(self, use_api_base):\n        \"\"\"Создание доски без указания РП, будет создано дефолтное РП для этой доски\"\"\"\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.constant.BASE_URL}api/board_create/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                 json=self.constant.BOARD_CREATE)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:248: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1713867355414,
      "stop" : 1713867355414,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1713867448358,
      "stop" : 1713867448358,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1713867355397,
      "stop" : 1713867355414,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Создание доски без указания РП, будет создано дефолтное РП для этой доски",
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 201. Actual: 500",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7faef229bfb0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7faef1c2b6e0>\n\n    @pytest.mark.xfail(reazon='Bug')\n    @allure.title(\"POST Создать доску без указания РП\")\n    def test_post_api_board_create(self, use_api_base):\n        \"\"\"Создание доски без указания РП, будет создано дефолтное РП для этой доски\"\"\"\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.constant.BASE_URL}api/board_create/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                 json=self.constant.BOARD_CREATE)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:248: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1713867448358,
        "stop" : 1713867449717,
        "duration" : 1359
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1713867450452,
        "stop" : 1713867450452,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 500\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reazon='Bug')"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az768-649"
  }, {
    "name" : "thread",
    "value" : "2327-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 3,
        "skipped" : 7,
        "passed" : 49,
        "unknown" : 0,
        "total" : 63
      },
      "items" : [ {
        "uid" : "4bed088247107be0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/204//#testresult/4bed088247107be0",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 201. Actual: 500",
        "time" : {
          "start" : 1713865014691,
          "stop" : 1713865016822,
          "duration" : 2131
        }
      }, {
        "uid" : "7d35df68dc801a9e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/3//#testresult/7d35df68dc801a9e",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 201. Actual: 500",
        "time" : {
          "start" : 1713838843791,
          "stop" : 1713838845538,
          "duration" : 1747
        }
      }, {
        "uid" : "5ad667c76a01abed",
        "reportUrl" : "https://Nat754.github.io/PulseWave/203//#testresult/5ad667c76a01abed",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 201. Actual: 500",
        "time" : {
          "start" : 1713811974564,
          "stop" : 1713811976419,
          "duration" : 1855
        }
      }, {
        "uid" : "a7c30127f0eef76f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/202//#testresult/a7c30127f0eef76f",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 201. Actual: 500",
        "time" : {
          "start" : 1713788577681,
          "stop" : 1713788579679,
          "duration" : 1998
        }
      }, {
        "uid" : "e1d6304420253a93",
        "reportUrl" : "https://Nat754.github.io/PulseWave/201//#testresult/e1d6304420253a93",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 201. Actual: 500",
        "time" : {
          "start" : 1713781865262,
          "stop" : 1713781867052,
          "duration" : 1790
        }
      }, {
        "uid" : "21651478435deb14",
        "reportUrl" : "https://Nat754.github.io/PulseWave/200//#testresult/21651478435deb14",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 201. Actual: 500",
        "time" : {
          "start" : 1713778787580,
          "stop" : 1713778789734,
          "duration" : 2154
        }
      }, {
        "uid" : "9d4ecbb0dd249116",
        "reportUrl" : "https://Nat754.github.io/PulseWave/2//#testresult/9d4ecbb0dd249116",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 201. Actual: 500",
        "time" : {
          "start" : 1713752440847,
          "stop" : 1713752442885,
          "duration" : 2038
        }
      }, {
        "uid" : "593f691458202874",
        "reportUrl" : "https://Nat754.github.io/PulseWave/1//#testresult/593f691458202874",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 201. Actual: 500",
        "time" : {
          "start" : 1713666089232,
          "stop" : 1713666091586,
          "duration" : 2354
        }
      }, {
        "uid" : "e79242c771273646",
        "reportUrl" : "https://Nat754.github.io/PulseWave/198//#testresult/e79242c771273646",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 201. Actual: 500",
        "time" : {
          "start" : 1713592772486,
          "stop" : 1713592775131,
          "duration" : 2645
        }
      }, {
        "uid" : "7e0a120fda933478",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/7e0a120fda933478",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 201. Actual: 500",
        "time" : {
          "start" : 1713435595099,
          "stop" : 1713435598160,
          "duration" : 3061
        }
      }, {
        "uid" : "8a8255bb2ef8dafc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/197//#testresult/8a8255bb2ef8dafc",
        "status" : "passed",
        "time" : {
          "start" : 1713198506098,
          "stop" : 1713198508947,
          "duration" : 2849
        }
      }, {
        "uid" : "6791746a5b9887e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/6791746a5b9887e",
        "status" : "passed",
        "time" : {
          "start" : 1713101078950,
          "stop" : 1713101082088,
          "duration" : 3138
        }
      }, {
        "uid" : "8ff9bddc01bdd15d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/196//#testresult/8ff9bddc01bdd15d",
        "status" : "passed",
        "time" : {
          "start" : 1711136571162,
          "stop" : 1711136572655,
          "duration" : 1493
        }
      }, {
        "uid" : "c40e5d842eb2e14",
        "reportUrl" : "https://Nat754.github.io/PulseWave/195//#testresult/c40e5d842eb2e14",
        "status" : "passed",
        "time" : {
          "start" : 1710360847558,
          "stop" : 1710360849523,
          "duration" : 1965
        }
      }, {
        "uid" : "23131448f2ef32ad",
        "reportUrl" : "https://Nat754.github.io/PulseWave/194//#testresult/23131448f2ef32ad",
        "status" : "passed",
        "time" : {
          "start" : 1710226293519,
          "stop" : 1710226295298,
          "duration" : 1779
        }
      }, {
        "uid" : "7e074d052e747bd0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/193//#testresult/7e074d052e747bd0",
        "status" : "passed",
        "time" : {
          "start" : 1710181316964,
          "stop" : 1710181318449,
          "duration" : 1485
        }
      }, {
        "uid" : "a622a251ef661ebc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/192//#testresult/a622a251ef661ebc",
        "status" : "passed",
        "time" : {
          "start" : 1710080866365,
          "stop" : 1710080867739,
          "duration" : 1374
        }
      }, {
        "uid" : "7cc8a5dce28b5a77",
        "reportUrl" : "https://Nat754.github.io/PulseWave/191//#testresult/7cc8a5dce28b5a77",
        "status" : "passed",
        "time" : {
          "start" : 1709990246051,
          "stop" : 1709990247659,
          "duration" : 1608
        }
      }, {
        "uid" : "f90db7480c6fa84",
        "reportUrl" : "https://Nat754.github.io/PulseWave/190//#testresult/f90db7480c6fa84",
        "status" : "passed",
        "time" : {
          "start" : 1709988470956,
          "stop" : 1709988472609,
          "duration" : 1653
        }
      }, {
        "uid" : "402e3aa589dc58bf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/189//#testresult/402e3aa589dc58bf",
        "status" : "passed",
        "time" : {
          "start" : 1709931419423,
          "stop" : 1709931421011,
          "duration" : 1588
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail(reazon='Bug')" ]
  },
  "source" : "d96d21addffaefd9.json",
  "parameterValues" : [ ]
}