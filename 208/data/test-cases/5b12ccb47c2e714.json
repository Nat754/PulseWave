{
  "uid" : "5b12ccb47c2e714",
  "name" : "POST Создать доску без указания РП",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_api_board_create",
  "historyId" : "a6085ff02c8eb32aa6f75c6af168277f",
  "time" : {
    "start" : 1713878679870,
    "stop" : 1713878682302,
    "duration" : 2432
  },
  "description" : "Создание доски без указания РП, будет создано дефолтное РП для этой доски",
  "descriptionHtml" : "<p>Создание доски без указания РП, будет создано дефолтное РП для этой доски</p>\n",
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 201. Actual: 500",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f1f7db9fd40>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f1f7d56ee40>\n\n    @pytest.mark.xfail(reazon='Bug')\n    @allure.title(\"POST Создать доску без указания РП\")\n    def test_post_api_board_create(self, use_api_base):\n        \"\"\"Создание доски без указания РП, будет создано дефолтное РП для этой доски\"\"\"\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.constant.BASE_URL}api/board_create/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                 json=self.constant.BOARD_CREATE)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:248: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1713878570394,
      "stop" : 1713878570411,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1713878679869,
      "stop" : 1713878679869,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1713878570411,
      "stop" : 1713878570411,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Создание доски без указания РП, будет создано дефолтное РП для этой доски",
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 201. Actual: 500",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f1f7db9fd40>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f1f7d56ee40>\n\n    @pytest.mark.xfail(reazon='Bug')\n    @allure.title(\"POST Создать доску без указания РП\")\n    def test_post_api_board_create(self, use_api_base):\n        \"\"\"Создание доски без указания РП, будет создано дефолтное РП для этой доски\"\"\"\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.constant.BASE_URL}api/board_create/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                 json=self.constant.BOARD_CREATE)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:248: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1713878679870,
        "stop" : 1713878681399,
        "duration" : 1529
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1713878682302,
        "stop" : 1713878682302,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 500\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reazon='Bug')"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1149-844"
  }, {
    "name" : "thread",
    "value" : "2306-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.xfail(reazon='Bug')" ]
  },
  "source" : "5b12ccb47c2e714.json",
  "parameterValues" : [ ]
}