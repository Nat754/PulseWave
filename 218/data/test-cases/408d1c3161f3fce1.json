{
  "uid" : "408d1c3161f3fce1",
  "name" : "3.2, 3.2.1 Восстановить пароль на корректный емайл",
  "fullName" : "tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage#test_recovery_password_to_fill_correct_email",
  "historyId" : "3fbb91d2b204c3d1abb80d32ac377e08",
  "time" : {
    "start" : 1732417561965,
    "stop" : 1732417580819,
    "duration" : 18854
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=131.0.6778.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55a8ce31b4ca <unknown>\n#1 0x55a8cde2e620 <unknown>\n#2 0x55a8cde343e3 <unknown>\n#3 0x55a8cde36b7e <unknown>\n#4 0x55a8cdec0e6c <unknown>\n#5 0x55a8cdea1372 <unknown>\n#6 0x55a8cdebfde0 <unknown>\n#7 0x55a8cdea1113 <unknown>\n#8 0x55a8cde6fbe0 <unknown>\n#9 0x55a8cde70bbe <unknown>\n#10 0x55a8ce2e7e4b <unknown>\n#11 0x55a8ce2ebde2 <unknown>\n#12 0x55a8ce2d4d2c <unknown>\n#13 0x55a8ce2ec957 <unknown>\n#14 0x55a8ce2ba4bf <unknown>\n#15 0x55a8ce30a348 <unknown>\n#16 0x55a8ce30a510 <unknown>\n#17 0x55a8ce31a346 <unknown>\n#18 0x7f24d5894ac3 <unknown>",
  "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7fd7e433ec60>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7fd7e4365f40>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f0f402a59b94126c4a358b6a7b1d128c\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        time.sleep(15)  # Получить ссылку на емайл\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:53: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:61: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd7e4361b50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x55a8ce30a510 \\\\u003Cunknown>\\\\n#17 0x55a8ce31a346 \\\\u003Cunknown>\\\\n#18 0x7f24d5894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=131.0.6778.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55a8ce31b4ca <unknown>\nE       #1 0x55a8cde2e620 <unknown>\nE       #2 0x55a8cde343e3 <unknown>\nE       #3 0x55a8cde36b7e <unknown>\nE       #4 0x55a8cdec0e6c <unknown>\nE       #5 0x55a8cdea1372 <unknown>\nE       #6 0x55a8cdebfde0 <unknown>\nE       #7 0x55a8cdea1113 <unknown>\nE       #8 0x55a8cde6fbe0 <unknown>\nE       #9 0x55a8cde70bbe <unknown>\nE       #10 0x55a8ce2e7e4b <unknown>\nE       #11 0x55a8ce2ebde2 <unknown>\nE       #12 0x55a8ce2d4d2c <unknown>\nE       #13 0x55a8ce2ec957 <unknown>\nE       #14 0x55a8ce2ba4bf <unknown>\nE       #15 0x55a8ce30a348 <unknown>\nE       #16 0x55a8ce30a510 <unknown>\nE       #17 0x55a8ce31a346 <unknown>\nE       #18 0x7f24d5894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1732417559160,
      "stop" : 1732417559446,
      "duration" : 286
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "recovery_page_open",
    "time" : {
      "start" : 1732417559446,
      "stop" : 1732417561965,
      "duration" : 2519
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1732417561862,
        "stop" : 1732417561892,
        "duration" : 30
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1732417037917,
      "stop" : 1732417037917,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1732417037899,
      "stop" : 1732417037917,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=131.0.6778.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55a8ce31b4ca <unknown>\n#1 0x55a8cde2e620 <unknown>\n#2 0x55a8cde343e3 <unknown>\n#3 0x55a8cde36b7e <unknown>\n#4 0x55a8cdec0e6c <unknown>\n#5 0x55a8cdea1372 <unknown>\n#6 0x55a8cdebfde0 <unknown>\n#7 0x55a8cdea1113 <unknown>\n#8 0x55a8cde6fbe0 <unknown>\n#9 0x55a8cde70bbe <unknown>\n#10 0x55a8ce2e7e4b <unknown>\n#11 0x55a8ce2ebde2 <unknown>\n#12 0x55a8ce2d4d2c <unknown>\n#13 0x55a8ce2ec957 <unknown>\n#14 0x55a8ce2ba4bf <unknown>\n#15 0x55a8ce30a348 <unknown>\n#16 0x55a8ce30a510 <unknown>\n#17 0x55a8ce31a346 <unknown>\n#18 0x7f24d5894ac3 <unknown>",
    "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7fd7e433ec60>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7fd7e4365f40>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f0f402a59b94126c4a358b6a7b1d128c\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        time.sleep(15)  # Получить ссылку на емайл\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:53: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:61: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd7e4361b50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x55a8ce30a510 \\\\u003Cunknown>\\\\n#17 0x55a8ce31a346 \\\\u003Cunknown>\\\\n#18 0x7f24d5894ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=131.0.6778.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55a8ce31b4ca <unknown>\nE       #1 0x55a8cde2e620 <unknown>\nE       #2 0x55a8cde343e3 <unknown>\nE       #3 0x55a8cde36b7e <unknown>\nE       #4 0x55a8cdec0e6c <unknown>\nE       #5 0x55a8cdea1372 <unknown>\nE       #6 0x55a8cdebfde0 <unknown>\nE       #7 0x55a8cdea1113 <unknown>\nE       #8 0x55a8cde6fbe0 <unknown>\nE       #9 0x55a8cde70bbe <unknown>\nE       #10 0x55a8ce2e7e4b <unknown>\nE       #11 0x55a8ce2ebde2 <unknown>\nE       #12 0x55a8ce2d4d2c <unknown>\nE       #13 0x55a8ce2ec957 <unknown>\nE       #14 0x55a8ce2ba4bf <unknown>\nE       #15 0x55a8ce30a348 <unknown>\nE       #16 0x55a8ce30a510 <unknown>\nE       #17 0x55a8ce31a346 <unknown>\nE       #18 0x7f24d5894ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Заполнить поле емайл",
      "time" : {
        "start" : 1732417561965,
        "stop" : 1732417562054,
        "duration" : 89
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Продолжить'",
      "time" : {
        "start" : 1732417562054,
        "stop" : 1732417562149,
        "duration" : 95
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить ссылку для смены пароля на email",
      "time" : {
        "start" : 1732417577149,
        "stop" : 1732417579229,
        "duration" : 2080
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ввести пароль в поле пароль",
      "time" : {
        "start" : 1732417579481,
        "stop" : 1732417579583,
        "duration" : 102
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ввести пароль в поле подтверждение пароля",
      "time" : {
        "start" : 1732417579583,
        "stop" : 1732417579658,
        "duration" : 75
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Сохранить пароль'",
      "time" : {
        "start" : 1732417579658,
        "stop" : 1732417579734,
        "duration" : 76
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации",
      "time" : {
        "start" : 1732417579735,
        "stop" : 1732417580817,
        "duration" : 1082
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=131.0.6778.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55a8ce31b4ca <unknown>\n#1 0x55a8cde2e620 <unknown>\n#2 0x55a8cde343e3 <unknown>\n#3 0x55a8cde36b7e <unknown>\n#4 0x55a8cdec0e6c <unknown>\n#5 0x55a8cdea1372 <unknown>\n#6 0x55a8cdebfde0 <unknown>\n#7 0x55a8cdea1113 <unknown>\n#8 0x55a8cde6fbe0 <unknown>\n#9 0x55a8cde70bbe <unknown>\n#10 0x55a8ce2e7e4b <unknown>\n#11 0x55a8ce2ebde2 <unknown>\n#12 0x55a8ce2d4d2c <unknown>\n#13 0x55a8ce2ec957 <unknown>\n#14 0x55a8ce2ba4bf <unknown>\n#15 0x55a8ce30a348 <unknown>\n#16 0x55a8ce30a510 <unknown>\n#17 0x55a8ce31a346 <unknown>\n#18 0x7f24d5894ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_password_recovery/test_password_recovery.py\", line 67, in test_recovery_password_to_fill_correct_email\n    recovery_page_open.click_resume_button()\n  File \"/home/runner/work/PulseWave/PulseWave/pages/password_recovery_page.py\", line 53, in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/pages/base_page.py\", line 61, in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 364, in _predicate\n    element = visibility_of(target)(driver)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 173, in _predicate\n    return _element_if_visible(element)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 179, in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n                      ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 252, in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 407, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "a44c4c6ea069df44",
      "name" : "Screenshot",
      "source" : "a44c4c6ea069df44.png",
      "type" : "image/png",
      "size" : 76718
    }, {
      "uid" : "7a8a8f3b5f968206",
      "name" : "HTML source",
      "source" : "7a8a8f3b5f968206.html",
      "type" : "text/html",
      "size" : 96468
    } ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1732417580977,
      "stop" : 1732417581047,
      "duration" : 70
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Восстановление пароля'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_password_recovery"
  }, {
    "name" : "suite",
    "value" : "test_password_recovery"
  }, {
    "name" : "subSuite",
    "value" : "TestPasswordRecoveryPage"
  }, {
    "name" : "host",
    "value" : "fv-az700-443"
  }, {
    "name" : "thread",
    "value" : "2334-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_password_recovery.test_password_recovery"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 12,
        "skipped" : 30,
        "passed" : 205,
        "unknown" : 0,
        "total" : 247
      },
      "items" : [ {
        "uid" : "d19e8e0144afa479",
        "reportUrl" : "https://Nat754.github.io/PulseWave/226//#testresult/d19e8e0144afa479",
        "status" : "passed",
        "time" : {
          "start" : 1732400229078,
          "stop" : 1732400250716,
          "duration" : 21638
        }
      }, {
        "uid" : "973b66ebaa9fc264",
        "reportUrl" : "https://Nat754.github.io/PulseWave/226//#testresult/973b66ebaa9fc264",
        "status" : "passed",
        "time" : {
          "start" : 1732399123857,
          "stop" : 1732399146235,
          "duration" : 22378
        }
      }, {
        "uid" : "18855b0b4a29c3b2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/217//#testresult/18855b0b4a29c3b2",
        "status" : "passed",
        "time" : {
          "start" : 1732330865713,
          "stop" : 1732330882716,
          "duration" : 17003
        }
      }, {
        "uid" : "f3d9602f6b016572",
        "reportUrl" : "https://Nat754.github.io/PulseWave/216//#testresult/f3d9602f6b016572",
        "status" : "passed",
        "time" : {
          "start" : 1732244804524,
          "stop" : 1732244821072,
          "duration" : 16548
        }
      }, {
        "uid" : "dce2ff209813bac0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/215//#testresult/dce2ff209813bac0",
        "status" : "passed",
        "time" : {
          "start" : 1732158129332,
          "stop" : 1732158144720,
          "duration" : 15388
        }
      }, {
        "uid" : "abfe8e780c136ab1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/214//#testresult/abfe8e780c136ab1",
        "status" : "passed",
        "time" : {
          "start" : 1732071755237,
          "stop" : 1732071770436,
          "duration" : 15199
        }
      }, {
        "uid" : "127d693ad6c8754f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/213//#testresult/127d693ad6c8754f",
        "status" : "passed",
        "time" : {
          "start" : 1731985471176,
          "stop" : 1731985486600,
          "duration" : 15424
        }
      }, {
        "uid" : "2d3aa91027c8173",
        "reportUrl" : "https://Nat754.github.io/PulseWave/212//#testresult/2d3aa91027c8173",
        "status" : "passed",
        "time" : {
          "start" : 1731899271631,
          "stop" : 1731899287195,
          "duration" : 15564
        }
      }, {
        "uid" : "17d987f2f283ab9d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/17d987f2f283ab9d",
        "status" : "passed",
        "time" : {
          "start" : 1731812821993,
          "stop" : 1731812837255,
          "duration" : 15262
        }
      }, {
        "uid" : "9872b63d5b63fdfc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/9872b63d5b63fdfc",
        "status" : "passed",
        "time" : {
          "start" : 1731726009377,
          "stop" : 1731726025185,
          "duration" : 15808
        }
      }, {
        "uid" : "2424ba8241376cf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/225//#testresult/2424ba8241376cf",
        "status" : "passed",
        "time" : {
          "start" : 1731669215428,
          "stop" : 1731669231836,
          "duration" : 16408
        }
      }, {
        "uid" : "cdf921edf97cb885",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/cdf921edf97cb885",
        "status" : "passed",
        "time" : {
          "start" : 1731656025154,
          "stop" : 1731656041545,
          "duration" : 16391
        }
      }, {
        "uid" : "a0f8fc7c5c8f9d5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/a0f8fc7c5c8f9d5",
        "status" : "passed",
        "time" : {
          "start" : 1731640038438,
          "stop" : 1731640054447,
          "duration" : 16009
        }
      }, {
        "uid" : "4faf99be1781cad6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/4faf99be1781cad6",
        "status" : "passed",
        "time" : {
          "start" : 1731552953088,
          "stop" : 1731552968389,
          "duration" : 15301
        }
      }, {
        "uid" : "f8114776e7d85aa1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/207//#testresult/f8114776e7d85aa1",
        "status" : "passed",
        "time" : {
          "start" : 1731466667688,
          "stop" : 1731466684601,
          "duration" : 16913
        }
      }, {
        "uid" : "4241dbc6525b7259",
        "reportUrl" : "https://Nat754.github.io/PulseWave/206//#testresult/4241dbc6525b7259",
        "status" : "passed",
        "time" : {
          "start" : 1731379914707,
          "stop" : 1731379930030,
          "duration" : 15323
        }
      }, {
        "uid" : "a53db1325f8d66f6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/205//#testresult/a53db1325f8d66f6",
        "status" : "passed",
        "time" : {
          "start" : 1731293737114,
          "stop" : 1731293752399,
          "duration" : 15285
        }
      }, {
        "uid" : "73aa279fb0ce57af",
        "reportUrl" : "https://Nat754.github.io/PulseWave/204//#testresult/73aa279fb0ce57af",
        "status" : "passed",
        "time" : {
          "start" : 1731207453677,
          "stop" : 1731207469154,
          "duration" : 15477
        }
      }, {
        "uid" : "759ae0f477ddac60",
        "reportUrl" : "https://Nat754.github.io/PulseWave/203//#testresult/759ae0f477ddac60",
        "status" : "passed",
        "time" : {
          "start" : 1731120812481,
          "stop" : 1731120828538,
          "duration" : 16057
        }
      }, {
        "uid" : "c8f9cc0f61873288",
        "reportUrl" : "https://Nat754.github.io/PulseWave/202//#testresult/c8f9cc0f61873288",
        "status" : "passed",
        "time" : {
          "start" : 1731034413508,
          "stop" : 1731034428534,
          "duration" : 15026
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "408d1c3161f3fce1.json",
  "parameterValues" : [ "'chrome'" ]
}