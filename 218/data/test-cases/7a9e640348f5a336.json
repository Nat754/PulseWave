{
  "uid" : "7a9e640348f5a336",
  "name" : "POST Подтверждение смены почты пользователя. Токен получить из ссылки auth/change_email/{token}.",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_change_email_confirm",
  "historyId" : "45e5562a3450eddd1d35fac0e3834f4b",
  "time" : {
    "start" : 1732417138055,
    "stop" : 1732417141875,
    "duration" : 3820
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fd7e4319df0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fd7e434b350>\n\n    @allure.title(\"POST Подтверждение смены почты пользователя. Токен получить из ссылки auth/change_email/{token}.\")\n    def test_post_auth_change_email_confirm(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.link.BASE_URL}auth/change_email_confirm/'\n        token_email = use_api_base.get_token_on_email(email2, password2, 'token=')\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                                 json={\"token\": token_email, \"email\": email2, \"password\": password0})\n>       Assertions.assert_status_code(response, self.code.STATUS_204)\n\ntests/test_api/test_api.py:199: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 204\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 204. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1732417138054,
      "stop" : 1732417138054,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1732417037917,
      "stop" : 1732417037917,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1732417037899,
      "stop" : 1732417037917,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fd7e4319df0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fd7e434b350>\n\n    @allure.title(\"POST Подтверждение смены почты пользователя. Токен получить из ссылки auth/change_email/{token}.\")\n    def test_post_auth_change_email_confirm(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.link.BASE_URL}auth/change_email_confirm/'\n        token_email = use_api_base.get_token_on_email(email2, password2, 'token=')\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                                 json={\"token\": token_email, \"email\": email2, \"password\": password0})\n>       Assertions.assert_status_code(response, self.code.STATUS_204)\n\ntests/test_api/test_api.py:199: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 204\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 204. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить access токен пользователя",
      "time" : {
        "start" : 1732417138055,
        "stop" : 1732417139363,
        "duration" : 1308
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить подтверждение смены почты пользователя на емайл",
      "time" : {
        "start" : 1732417139363,
        "stop" : 1732417141341,
        "duration" : 1978
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 204",
      "time" : {
        "start" : 1732417141874,
        "stop" : 1732417141874,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az700-443"
  }, {
    "name" : "thread",
    "value" : "2334-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 35,
        "skipped" : 0,
        "passed" : 211,
        "unknown" : 0,
        "total" : 247
      },
      "items" : [ {
        "uid" : "724e2254a120af34",
        "reportUrl" : "https://Nat754.github.io/PulseWave/226//#testresult/724e2254a120af34",
        "status" : "passed",
        "time" : {
          "start" : 1732399735711,
          "stop" : 1732399740337,
          "duration" : 4626
        }
      }, {
        "uid" : "57c6c8e9af843178",
        "reportUrl" : "https://Nat754.github.io/PulseWave/226//#testresult/57c6c8e9af843178",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1732398562167,
          "stop" : 1732398563683,
          "duration" : 1516
        }
      }, {
        "uid" : "6e2bc46cd60efcc3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/217//#testresult/6e2bc46cd60efcc3",
        "status" : "passed",
        "time" : {
          "start" : 1732330280943,
          "stop" : 1732330286089,
          "duration" : 5146
        }
      }, {
        "uid" : "fd5cfb7bd86a87f8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/216//#testresult/fd5cfb7bd86a87f8",
        "status" : "passed",
        "time" : {
          "start" : 1732244243104,
          "stop" : 1732244248213,
          "duration" : 5109
        }
      }, {
        "uid" : "5d1cf77122760229",
        "reportUrl" : "https://Nat754.github.io/PulseWave/215//#testresult/5d1cf77122760229",
        "status" : "passed",
        "time" : {
          "start" : 1732157697007,
          "stop" : 1732157700667,
          "duration" : 3660
        }
      }, {
        "uid" : "48528d6d14e0577",
        "reportUrl" : "https://Nat754.github.io/PulseWave/214//#testresult/48528d6d14e0577",
        "status" : "passed",
        "time" : {
          "start" : 1732071296449,
          "stop" : 1732071300408,
          "duration" : 3959
        }
      }, {
        "uid" : "371e3f3dfe78e8dd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/213//#testresult/371e3f3dfe78e8dd",
        "status" : "passed",
        "time" : {
          "start" : 1731984991098,
          "stop" : 1731984995914,
          "duration" : 4816
        }
      }, {
        "uid" : "6adba9c8d8291b1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/212//#testresult/6adba9c8d8291b1",
        "status" : "passed",
        "time" : {
          "start" : 1731898783584,
          "stop" : 1731898787687,
          "duration" : 4103
        }
      }, {
        "uid" : "12dcc32d063faf2d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/12dcc32d063faf2d",
        "status" : "passed",
        "time" : {
          "start" : 1731812378055,
          "stop" : 1731812381980,
          "duration" : 3925
        }
      }, {
        "uid" : "b698d4a4542d43f2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/b698d4a4542d43f2",
        "status" : "passed",
        "time" : {
          "start" : 1731725567510,
          "stop" : 1731725571438,
          "duration" : 3928
        }
      }, {
        "uid" : "7ef3ecec9ce20594",
        "reportUrl" : "https://Nat754.github.io/PulseWave/225//#testresult/7ef3ecec9ce20594",
        "status" : "passed",
        "time" : {
          "start" : 1731668653591,
          "stop" : 1731668658253,
          "duration" : 4662
        }
      }, {
        "uid" : "44e3c9d126a36216",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/44e3c9d126a36216",
        "status" : "passed",
        "time" : {
          "start" : 1731654834343,
          "stop" : 1731654839749,
          "duration" : 5406
        }
      }, {
        "uid" : "c938483f4df9e07f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/c938483f4df9e07f",
        "status" : "passed",
        "time" : {
          "start" : 1731639437367,
          "stop" : 1731639442403,
          "duration" : 5036
        }
      }, {
        "uid" : "44c72eb49f5a3992",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/44c72eb49f5a3992",
        "status" : "passed",
        "time" : {
          "start" : 1731552472774,
          "stop" : 1731552476692,
          "duration" : 3918
        }
      }, {
        "uid" : "9c5a5c40f2050127",
        "reportUrl" : "https://Nat754.github.io/PulseWave/207//#testresult/9c5a5c40f2050127",
        "status" : "passed",
        "time" : {
          "start" : 1731466053292,
          "stop" : 1731466058607,
          "duration" : 5315
        }
      }, {
        "uid" : "74a3d5e861add2f0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/206//#testresult/74a3d5e861add2f0",
        "status" : "passed",
        "time" : {
          "start" : 1731379441292,
          "stop" : 1731379445648,
          "duration" : 4356
        }
      }, {
        "uid" : "1fde7721b74217de",
        "reportUrl" : "https://Nat754.github.io/PulseWave/205//#testresult/1fde7721b74217de",
        "status" : "passed",
        "time" : {
          "start" : 1731293246204,
          "stop" : 1731293250108,
          "duration" : 3904
        }
      }, {
        "uid" : "5ec7d8a28e80e9fb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/204//#testresult/5ec7d8a28e80e9fb",
        "status" : "passed",
        "time" : {
          "start" : 1731206926087,
          "stop" : 1731206930906,
          "duration" : 4819
        }
      }, {
        "uid" : "384faa077cddc96c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/203//#testresult/384faa077cddc96c",
        "status" : "passed",
        "time" : {
          "start" : 1731120197790,
          "stop" : 1731120203162,
          "duration" : 5372
        }
      }, {
        "uid" : "c0e1b6ae574fbe7a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/202//#testresult/c0e1b6ae574fbe7a",
        "status" : "passed",
        "time" : {
          "start" : 1731033958315,
          "stop" : 1731033962238,
          "duration" : 3923
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7a9e640348f5a336.json",
  "parameterValues" : [ ]
}