{
  "uid" : "e3a22836c63a9c42",
  "name" : "POST Обновить JWT access_token авторизованного пользователя",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_jwt_refresh",
  "historyId" : "af14d7891c2f15bc9c4384deec55c884",
  "time" : {
    "start" : 1732398555816,
    "stop" : 1732398557963,
    "duration" : 2147
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'refresh'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fee4a3a6870>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fee4a3e5dc0>\n\n    @allure.title(\"POST Обновить JWT access_token авторизованного пользователя\")\n    def test_post_auth_jwt_refresh(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/jwt/refresh/'\n>       refresh = use_api_base.create_refresh(email1, password0)\n\ntests/test_api/test_api.py:172: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_refresh(e_mail, passwrd):\n        with allure.step('Получить refresh токен пользователя'):\n            url = f'{Links.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           refresh = f\"{response.json()['refresh']}\"\nE           KeyError: 'refresh'\n\napi_testing/api_base.py:83: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1732398555816,
      "stop" : 1732398555816,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1732398506975,
      "stop" : 1732398506975,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1732398506957,
      "stop" : 1732398506975,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'refresh'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fee4a3a6870>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fee4a3e5dc0>\n\n    @allure.title(\"POST Обновить JWT access_token авторизованного пользователя\")\n    def test_post_auth_jwt_refresh(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/jwt/refresh/'\n>       refresh = use_api_base.create_refresh(email1, password0)\n\ntests/test_api/test_api.py:172: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_refresh(e_mail, passwrd):\n        with allure.step('Получить refresh токен пользователя'):\n            url = f'{Links.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           refresh = f\"{response.json()['refresh']}\"\nE           KeyError: 'refresh'\n\napi_testing/api_base.py:83: KeyError",
    "steps" : [ {
      "name" : "Получить refresh токен пользователя",
      "time" : {
        "start" : 1732398555816,
        "stop" : 1732398557963,
        "duration" : 2147
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'refresh'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 83, in create_refresh\n    refresh = f\"{response.json()['refresh']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1345-142"
  }, {
    "name" : "thread",
    "value" : "2256-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 25,
        "skipped" : 0,
        "passed" : 220,
        "unknown" : 0,
        "total" : 245
      },
      "items" : [ {
        "uid" : "b91913bc19bfbc26",
        "reportUrl" : "https://Nat754.github.io/PulseWave/217//#testresult/b91913bc19bfbc26",
        "status" : "passed",
        "time" : {
          "start" : 1732330241721,
          "stop" : 1732330245112,
          "duration" : 3391
        }
      }, {
        "uid" : "c65ad3f0ec4e8625",
        "reportUrl" : "https://Nat754.github.io/PulseWave/216//#testresult/c65ad3f0ec4e8625",
        "status" : "passed",
        "time" : {
          "start" : 1732244208993,
          "stop" : 1732244212195,
          "duration" : 3202
        }
      }, {
        "uid" : "a5229a73be546432",
        "reportUrl" : "https://Nat754.github.io/PulseWave/215//#testresult/a5229a73be546432",
        "status" : "passed",
        "time" : {
          "start" : 1732157668295,
          "stop" : 1732157670864,
          "duration" : 2569
        }
      }, {
        "uid" : "122e4df4f791db7e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/214//#testresult/122e4df4f791db7e",
        "status" : "passed",
        "time" : {
          "start" : 1732071267357,
          "stop" : 1732071270028,
          "duration" : 2671
        }
      }, {
        "uid" : "a3aa26bf0bf54fe3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/213//#testresult/a3aa26bf0bf54fe3",
        "status" : "passed",
        "time" : {
          "start" : 1731984952559,
          "stop" : 1731984955308,
          "duration" : 2749
        }
      }, {
        "uid" : "a1c99cbd85b24319",
        "reportUrl" : "https://Nat754.github.io/PulseWave/212//#testresult/a1c99cbd85b24319",
        "status" : "passed",
        "time" : {
          "start" : 1731898753063,
          "stop" : 1731898755830,
          "duration" : 2767
        }
      }, {
        "uid" : "57f5af1e1ba0c543",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/57f5af1e1ba0c543",
        "status" : "passed",
        "time" : {
          "start" : 1731812341036,
          "stop" : 1731812343601,
          "duration" : 2565
        }
      }, {
        "uid" : "fd45bf2fae638850",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/fd45bf2fae638850",
        "status" : "passed",
        "time" : {
          "start" : 1731725538280,
          "stop" : 1731725540848,
          "duration" : 2568
        }
      }, {
        "uid" : "620c8d0502853193",
        "reportUrl" : "https://Nat754.github.io/PulseWave/225//#testresult/620c8d0502853193",
        "status" : "passed",
        "time" : {
          "start" : 1731668619916,
          "stop" : 1731668623089,
          "duration" : 3173
        }
      }, {
        "uid" : "54752882d03b546a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/54752882d03b546a",
        "status" : "passed",
        "time" : {
          "start" : 1731654791810,
          "stop" : 1731654795173,
          "duration" : 3363
        }
      }, {
        "uid" : "5f21a8a319bc5aad",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/5f21a8a319bc5aad",
        "status" : "passed",
        "time" : {
          "start" : 1731639399106,
          "stop" : 1731639402352,
          "duration" : 3246
        }
      }, {
        "uid" : "68ee492312b79b1f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/68ee492312b79b1f",
        "status" : "passed",
        "time" : {
          "start" : 1731552443059,
          "stop" : 1731552445682,
          "duration" : 2623
        }
      }, {
        "uid" : "5e194f4e523bae44",
        "reportUrl" : "https://Nat754.github.io/PulseWave/207//#testresult/5e194f4e523bae44",
        "status" : "passed",
        "time" : {
          "start" : 1731466017702,
          "stop" : 1731466021115,
          "duration" : 3413
        }
      }, {
        "uid" : "7b4a57692585a9be",
        "reportUrl" : "https://Nat754.github.io/PulseWave/206//#testresult/7b4a57692585a9be",
        "status" : "passed",
        "time" : {
          "start" : 1731379411185,
          "stop" : 1731379413924,
          "duration" : 2739
        }
      }, {
        "uid" : "4d41922f11bc79a1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/205//#testresult/4d41922f11bc79a1",
        "status" : "passed",
        "time" : {
          "start" : 1731293216534,
          "stop" : 1731293219164,
          "duration" : 2630
        }
      }, {
        "uid" : "f686935502337830",
        "reportUrl" : "https://Nat754.github.io/PulseWave/204//#testresult/f686935502337830",
        "status" : "passed",
        "time" : {
          "start" : 1731206895091,
          "stop" : 1731206897887,
          "duration" : 2796
        }
      }, {
        "uid" : "3e15c406d597f84c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/203//#testresult/3e15c406d597f84c",
        "status" : "passed",
        "time" : {
          "start" : 1731120162047,
          "stop" : 1731120165467,
          "duration" : 3420
        }
      }, {
        "uid" : "b5f48d150979bd91",
        "reportUrl" : "https://Nat754.github.io/PulseWave/202//#testresult/b5f48d150979bd91",
        "status" : "passed",
        "time" : {
          "start" : 1731033929086,
          "stop" : 1731033931743,
          "duration" : 2657
        }
      }, {
        "uid" : "e9a397dc3b7ca869",
        "reportUrl" : "https://Nat754.github.io/PulseWave/201//#testresult/e9a397dc3b7ca869",
        "status" : "passed",
        "time" : {
          "start" : 1730947533301,
          "stop" : 1730947535900,
          "duration" : 2599
        }
      }, {
        "uid" : "4052df28892550e8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/224//#testresult/4052df28892550e8",
        "status" : "passed",
        "time" : {
          "start" : 1730928976507,
          "stop" : 1730928979145,
          "duration" : 2638
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e3a22836c63a9c42.json",
  "parameterValues" : [ ]
}