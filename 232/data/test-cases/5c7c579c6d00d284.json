{
  "uid" : "5c7c579c6d00d284",
  "name" : "W12. Проверка прочтения уведомлений",
  "fullName" : "tests.test_workspace_page.test_workspace_page.TestWorkspacePage#test_check_no_notifications",
  "historyId" : "eaed4062460b05b1bee6a8f91c223818",
  "time" : {
    "start" : 1748800679282,
    "stop" : 1748800679527,
    "duration" : 245
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=136.0.7103.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b96d58978a <unknown>\n#1 0x55b96d02c0a0 <unknown>\n#2 0x55b96d032cff <unknown>\n#3 0x55b96d035578 <unknown>\n#4 0x55b96d035603 <unknown>\n#5 0x55b96d077f7d <unknown>\n#6 0x55b96d0a33a2 <unknown>\n#7 0x55b96d07151a <unknown>\n#8 0x55b96d0a356e <unknown>\n#9 0x55b96d0c92a0 <unknown>\n#10 0x55b96d0a3173 <unknown>\n#11 0x55b96d06fd4b <unknown>\n#12 0x55b96d0709b1 <unknown>\n#13 0x55b96d54e93b <unknown>\n#14 0x55b96d55283a <unknown>\n#15 0x55b96d536692 <unknown>\n#16 0x55b96d5533c4 <unknown>\n#17 0x55b96d51b4cf <unknown>\n#18 0x55b96d577568 <unknown>\n#19 0x55b96d577746 <unknown>\n#20 0x55b96d5885f6 <unknown>\n#21 0x7f1cec09caa4 <unknown>\n#22 0x7f1cec129c3c <unknown>",
  "statusTrace" : "self = <tests.test_workspace_page.test_workspace_page.TestWorkspacePage object at 0x7fb1af63f8f0>\nauth_user = <pages.login_page.LoginPage object at 0x7fb1af668320>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d592e8d74b532ecc38879f219c52b6bc\")>\n\n    @allure.title(\"W12. Проверка прочтения уведомлений\")\n    @pytest.mark.regress\n    def test_check_no_notifications(self, auth_user, driver):\n        page = WorkspacePage(driver)\n        page.get_notify_button_is_visible().click()\n        color = page.get_toggle_is_visible().value_of_css_property('background-color')\n        if color == self.wsconst.TOGGLE_COLOR[1]:\n            page.get_toggle_is_visible().click()\n        try:\n            page.get_read_all_button_is_visible().click()\n        except TimeoutException:\n            pass\n>       text = page.get_no_notifications_is_visible().text\n\ntests/test_workspace_page/test_workspace_page.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb1af660dd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x55b96d5885f6 \\\\u003Cunknown>\\\\n#21 0x7f1cec09caa4 \\\\u003Cunknown>\\\\n#22 0x7f1cec129c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=136.0.7103.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55b96d58978a <unknown>\nE       #1 0x55b96d02c0a0 <unknown>\nE       #2 0x55b96d032cff <unknown>\nE       #3 0x55b96d035578 <unknown>\nE       #4 0x55b96d035603 <unknown>\nE       #5 0x55b96d077f7d <unknown>\nE       #6 0x55b96d0a33a2 <unknown>\nE       #7 0x55b96d07151a <unknown>\nE       #8 0x55b96d0a356e <unknown>\nE       #9 0x55b96d0c92a0 <unknown>\nE       #10 0x55b96d0a3173 <unknown>\nE       #11 0x55b96d06fd4b <unknown>\nE       #12 0x55b96d0709b1 <unknown>\nE       #13 0x55b96d54e93b <unknown>\nE       #14 0x55b96d55283a <unknown>\nE       #15 0x55b96d536692 <unknown>\nE       #16 0x55b96d5533c4 <unknown>\nE       #17 0x55b96d51b4cf <unknown>\nE       #18 0x55b96d577568 <unknown>\nE       #19 0x55b96d577746 <unknown>\nE       #20 0x55b96d5885f6 <unknown>\nE       #21 0x7f1cec09caa4 <unknown>\nE       #22 0x7f1cec129c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1748800073510,
      "stop" : 1748800073510,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1748800073496,
      "stop" : 1748800073510,
      "duration" : 14
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1748800674358,
      "stop" : 1748800674701,
      "duration" : 343
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_user",
    "time" : {
      "start" : 1748800674701,
      "stop" : 1748800679282,
      "duration" : 4581
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1748800676910,
        "stop" : 1748800676938,
        "duration" : 28
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Войти'",
      "time" : {
        "start" : 1748800677154,
        "stop" : 1748800677244,
        "duration" : 90
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ждать обновление страницы",
      "time" : {
        "start" : 1748800677244,
        "stop" : 1748800679267,
        "duration" : 2023
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверка отсутствия лоадера",
      "time" : {
        "start" : 1748800679267,
        "stop" : 1748800679282,
        "duration" : 15
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=136.0.7103.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b96d58978a <unknown>\n#1 0x55b96d02c0a0 <unknown>\n#2 0x55b96d032cff <unknown>\n#3 0x55b96d035578 <unknown>\n#4 0x55b96d035603 <unknown>\n#5 0x55b96d077f7d <unknown>\n#6 0x55b96d0a33a2 <unknown>\n#7 0x55b96d07151a <unknown>\n#8 0x55b96d0a356e <unknown>\n#9 0x55b96d0c92a0 <unknown>\n#10 0x55b96d0a3173 <unknown>\n#11 0x55b96d06fd4b <unknown>\n#12 0x55b96d0709b1 <unknown>\n#13 0x55b96d54e93b <unknown>\n#14 0x55b96d55283a <unknown>\n#15 0x55b96d536692 <unknown>\n#16 0x55b96d5533c4 <unknown>\n#17 0x55b96d51b4cf <unknown>\n#18 0x55b96d577568 <unknown>\n#19 0x55b96d577746 <unknown>\n#20 0x55b96d5885f6 <unknown>\n#21 0x7f1cec09caa4 <unknown>\n#22 0x7f1cec129c3c <unknown>",
    "statusTrace" : "self = <tests.test_workspace_page.test_workspace_page.TestWorkspacePage object at 0x7fb1af63f8f0>\nauth_user = <pages.login_page.LoginPage object at 0x7fb1af668320>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d592e8d74b532ecc38879f219c52b6bc\")>\n\n    @allure.title(\"W12. Проверка прочтения уведомлений\")\n    @pytest.mark.regress\n    def test_check_no_notifications(self, auth_user, driver):\n        page = WorkspacePage(driver)\n        page.get_notify_button_is_visible().click()\n        color = page.get_toggle_is_visible().value_of_css_property('background-color')\n        if color == self.wsconst.TOGGLE_COLOR[1]:\n            page.get_toggle_is_visible().click()\n        try:\n            page.get_read_all_button_is_visible().click()\n        except TimeoutException:\n            pass\n>       text = page.get_no_notifications_is_visible().text\n\ntests/test_workspace_page/test_workspace_page.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb1af660dd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x55b96d5885f6 \\\\u003Cunknown>\\\\n#21 0x7f1cec09caa4 \\\\u003Cunknown>\\\\n#22 0x7f1cec129c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=136.0.7103.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55b96d58978a <unknown>\nE       #1 0x55b96d02c0a0 <unknown>\nE       #2 0x55b96d032cff <unknown>\nE       #3 0x55b96d035578 <unknown>\nE       #4 0x55b96d035603 <unknown>\nE       #5 0x55b96d077f7d <unknown>\nE       #6 0x55b96d0a33a2 <unknown>\nE       #7 0x55b96d07151a <unknown>\nE       #8 0x55b96d0a356e <unknown>\nE       #9 0x55b96d0c92a0 <unknown>\nE       #10 0x55b96d0a3173 <unknown>\nE       #11 0x55b96d06fd4b <unknown>\nE       #12 0x55b96d0709b1 <unknown>\nE       #13 0x55b96d54e93b <unknown>\nE       #14 0x55b96d55283a <unknown>\nE       #15 0x55b96d536692 <unknown>\nE       #16 0x55b96d5533c4 <unknown>\nE       #17 0x55b96d51b4cf <unknown>\nE       #18 0x55b96d577568 <unknown>\nE       #19 0x55b96d577746 <unknown>\nE       #20 0x55b96d5885f6 <unknown>\nE       #21 0x7f1cec09caa4 <unknown>\nE       #22 0x7f1cec129c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Проверка видимости колокольчика уведомлений на главной странице",
      "time" : {
        "start" : 1748800679283,
        "stop" : 1748800679323,
        "duration" : 40
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверка видимости и кликабельности переключателя 'Непрочитанные'",
      "time" : {
        "start" : 1748800679373,
        "stop" : 1748800679423,
        "duration" : 50
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверка видимости кнопки 'Отметить все как прочитанные'",
      "time" : {
        "start" : 1748800679431,
        "stop" : 1748800679440,
        "duration" : 9
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверка видимости сообщения 'Нет уведомлений'",
      "time" : {
        "start" : 1748800679485,
        "stop" : 1748800679493,
        "duration" : 8
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "9b9687e4db99cd8f",
      "name" : "Screenshot",
      "source" : "9b9687e4db99cd8f.png",
      "type" : "image/png",
      "size" : 274819
    }, {
      "uid" : "c7df2f256389ec8e",
      "name" : "HTML source",
      "source" : "c7df2f256389ec8e.html",
      "type" : "text/html",
      "size" : 118651
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1748800679802,
      "stop" : 1748800679863,
      "duration" : 61
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Рабочие пространства'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_workspace_page"
  }, {
    "name" : "suite",
    "value" : "test_workspace_page"
  }, {
    "name" : "subSuite",
    "value" : "TestWorkspacePage"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2548-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_workspace_page.test_workspace_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 239,
        "unknown" : 0,
        "total" : 241
      },
      "items" : [ {
        "uid" : "2af2792ee4ae9c0a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/406//#testresult/2af2792ee4ae9c0a",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564af879a78a <unknown>\n#1 0x564af823d0a0 <unknown>\n#2 0x564af828e9b0 <unknown>\n#3 0x564af828eba1 <unknown>\n#4 0x564af82dcea4 <unknown>\n#5 0x564af82b43cd <unknown>\n#6 0x564af82da2a0 <unknown>\n#7 0x564af82b4173 <unknown>\n#8 0x564af8280d4b <unknown>\n#9 0x564af82819b1 <unknown>\n#10 0x564af875f93b <unknown>\n#11 0x564af876383a <unknown>\n#12 0x564af8747692 <unknown>\n#13 0x564af87643c4 <unknown>\n#14 0x564af872c4cf <unknown>\n#15 0x564af8788568 <unknown>\n#16 0x564af8788746 <unknown>\n#17 0x564af87995f6 <unknown>\n#18 0x7f392fc9caa4 <unknown>\n#19 0x7f392fd29c3c <unknown>",
        "time" : {
          "start" : 1748797314766,
          "stop" : 1748797335252,
          "duration" : 20486
        }
      }, {
        "uid" : "3882619598aeedc6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/406//#testresult/3882619598aeedc6",
        "status" : "passed",
        "time" : {
          "start" : 1748715648479,
          "stop" : 1748715649735,
          "duration" : 1256
        }
      }, {
        "uid" : "834ca8a37888cbe9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/405//#testresult/834ca8a37888cbe9",
        "status" : "passed",
        "time" : {
          "start" : 1748629544925,
          "stop" : 1748629546700,
          "duration" : 1775
        }
      }, {
        "uid" : "1dc105aeabe1a110",
        "reportUrl" : "https://Nat754.github.io/PulseWave/404//#testresult/1dc105aeabe1a110",
        "status" : "passed",
        "time" : {
          "start" : 1748543160261,
          "stop" : 1748543162040,
          "duration" : 1779
        }
      }, {
        "uid" : "5233a71557ddd445",
        "reportUrl" : "https://Nat754.github.io/PulseWave/403//#testresult/5233a71557ddd445",
        "status" : "passed",
        "time" : {
          "start" : 1748456572336,
          "stop" : 1748456573590,
          "duration" : 1254
        }
      }, {
        "uid" : "6c8912b751e994f9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/402//#testresult/6c8912b751e994f9",
        "status" : "passed",
        "time" : {
          "start" : 1748370057940,
          "stop" : 1748370059190,
          "duration" : 1250
        }
      }, {
        "uid" : "2cb17a6a0d75de75",
        "reportUrl" : "https://Nat754.github.io/PulseWave/401//#testresult/2cb17a6a0d75de75",
        "status" : "passed",
        "time" : {
          "start" : 1748283706541,
          "stop" : 1748283707797,
          "duration" : 1256
        }
      }, {
        "uid" : "225d2052c0965c9a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/400//#testresult/225d2052c0965c9a",
        "status" : "passed",
        "time" : {
          "start" : 1748197375031,
          "stop" : 1748197376796,
          "duration" : 1765
        }
      }, {
        "uid" : "c007304a99453c40",
        "reportUrl" : "https://Nat754.github.io/PulseWave/399//#testresult/c007304a99453c40",
        "status" : "passed",
        "time" : {
          "start" : 1748110968386,
          "stop" : 1748110970149,
          "duration" : 1763
        }
      }, {
        "uid" : "2e7366aaac1a737a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/398//#testresult/2e7366aaac1a737a",
        "status" : "passed",
        "time" : {
          "start" : 1748024720485,
          "stop" : 1748024722253,
          "duration" : 1768
        }
      }, {
        "uid" : "3b61161c600651dc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/397//#testresult/3b61161c600651dc",
        "status" : "passed",
        "time" : {
          "start" : 1747938351356,
          "stop" : 1747938353113,
          "duration" : 1757
        }
      }, {
        "uid" : "7a40cb1a3ee57ff6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/396//#testresult/7a40cb1a3ee57ff6",
        "status" : "passed",
        "time" : {
          "start" : 1747851724317,
          "stop" : 1747851725572,
          "duration" : 1255
        }
      }, {
        "uid" : "afd6f8111babad07",
        "reportUrl" : "https://Nat754.github.io/PulseWave/231//#testresult/afd6f8111babad07",
        "status" : "passed",
        "time" : {
          "start" : 1747845479853,
          "stop" : 1747845481615,
          "duration" : 1762
        }
      }, {
        "uid" : "796c27a1b2f7e5d1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/395//#testresult/796c27a1b2f7e5d1",
        "status" : "passed",
        "time" : {
          "start" : 1747842686033,
          "stop" : 1747842687806,
          "duration" : 1773
        }
      }, {
        "uid" : "3a655f5633f4f957",
        "reportUrl" : "https://Nat754.github.io/PulseWave/395//#testresult/3a655f5633f4f957",
        "status" : "passed",
        "time" : {
          "start" : 1747765595218,
          "stop" : 1747765597533,
          "duration" : 2315
        }
      }, {
        "uid" : "7a86a93a26808eae",
        "reportUrl" : "https://Nat754.github.io/PulseWave/394//#testresult/7a86a93a26808eae",
        "status" : "passed",
        "time" : {
          "start" : 1747689830598,
          "stop" : 1747689831852,
          "duration" : 1254
        }
      }, {
        "uid" : "a8206a5ceaa4597f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/389//#testresult/a8206a5ceaa4597f",
        "status" : "passed",
        "time" : {
          "start" : 1747260792261,
          "stop" : 1747260794024,
          "duration" : 1763
        }
      }, {
        "uid" : "329e271eb8832540",
        "reportUrl" : "https://Nat754.github.io/PulseWave/386//#testresult/329e271eb8832540",
        "status" : "passed",
        "time" : {
          "start" : 1746987828933,
          "stop" : 1746987830697,
          "duration" : 1764
        }
      }, {
        "uid" : "4a482741ae33e2e9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/385//#testresult/4a482741ae33e2e9",
        "status" : "passed",
        "time" : {
          "start" : 1746901379773,
          "stop" : 1746901381547,
          "duration" : 1774
        }
      }, {
        "uid" : "506bcec7a754e648",
        "reportUrl" : "https://Nat754.github.io/PulseWave/384//#testresult/506bcec7a754e648",
        "status" : "passed",
        "time" : {
          "start" : 1746814985335,
          "stop" : 1746814987121,
          "duration" : 1786
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "5c7c579c6d00d284.json",
  "parameterValues" : [ "'chrome'" ]
}