{
  "uid" : "8167ee1f14afcd42",
  "name" : "3.2, 3.2.1 Восстановить пароль на корректный емайл",
  "fullName" : "tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage#test_recovery_password_to_fill_correct_email",
  "historyId" : "3fbb91d2b204c3d1abb80d32ac377e08",
  "time" : {
    "start" : 1748800537331,
    "stop" : 1748800560376,
    "duration" : 23045
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=136.0.7103.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x56189770578a <unknown>\n#1 0x5618971a80a0 <unknown>\n#2 0x5618971aecff <unknown>\n#3 0x5618971b1578 <unknown>\n#4 0x5618971b1603 <unknown>\n#5 0x5618971f45da <unknown>\n#6 0x56189721f3a2 <unknown>\n#7 0x5618971ed51a <unknown>\n#8 0x56189721f56e <unknown>\n#9 0x5618972452a0 <unknown>\n#10 0x56189721f173 <unknown>\n#11 0x5618971ebd4b <unknown>\n#12 0x5618971ec9b1 <unknown>\n#13 0x5618976ca93b <unknown>\n#14 0x5618976ce83a <unknown>\n#15 0x5618976b2692 <unknown>\n#16 0x5618976cf3c4 <unknown>\n#17 0x5618976974cf <unknown>\n#18 0x5618976f3568 <unknown>\n#19 0x5618976f3746 <unknown>\n#20 0x5618977045f6 <unknown>\n#21 0x7f9a30c9caa4 <unknown>\n#22 0x7f9a30d29c3c <unknown>",
  "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7fb1af632810>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7fb1af66b950>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"610b333724fbd0003291d3d85770df4a\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:41: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:61: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:365: in _predicate\n    if element and element.is_enabled():\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb1af66bad0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x5618977045f6 \\\\u003Cunknown>\\\\n#21 0x7f9a30c9caa4 \\\\u003Cunknown>\\\\n#22 0x7f9a30d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=136.0.7103.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x56189770578a <unknown>\nE       #1 0x5618971a80a0 <unknown>\nE       #2 0x5618971aecff <unknown>\nE       #3 0x5618971b1578 <unknown>\nE       #4 0x5618971b1603 <unknown>\nE       #5 0x5618971f45da <unknown>\nE       #6 0x56189721f3a2 <unknown>\nE       #7 0x5618971ed51a <unknown>\nE       #8 0x56189721f56e <unknown>\nE       #9 0x5618972452a0 <unknown>\nE       #10 0x56189721f173 <unknown>\nE       #11 0x5618971ebd4b <unknown>\nE       #12 0x5618971ec9b1 <unknown>\nE       #13 0x5618976ca93b <unknown>\nE       #14 0x5618976ce83a <unknown>\nE       #15 0x5618976b2692 <unknown>\nE       #16 0x5618976cf3c4 <unknown>\nE       #17 0x5618976974cf <unknown>\nE       #18 0x5618976f3568 <unknown>\nE       #19 0x5618976f3746 <unknown>\nE       #20 0x5618977045f6 <unknown>\nE       #21 0x7f9a30c9caa4 <unknown>\nE       #22 0x7f9a30d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "recovery_page_open",
    "time" : {
      "start" : 1748800535029,
      "stop" : 1748800537331,
      "duration" : 2302
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1748800537249,
        "stop" : 1748800537278,
        "duration" : 29
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1748800534686,
      "stop" : 1748800535028,
      "duration" : 342
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1748800073510,
      "stop" : 1748800073510,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1748800073496,
      "stop" : 1748800073510,
      "duration" : 14
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=136.0.7103.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x56189770578a <unknown>\n#1 0x5618971a80a0 <unknown>\n#2 0x5618971aecff <unknown>\n#3 0x5618971b1578 <unknown>\n#4 0x5618971b1603 <unknown>\n#5 0x5618971f45da <unknown>\n#6 0x56189721f3a2 <unknown>\n#7 0x5618971ed51a <unknown>\n#8 0x56189721f56e <unknown>\n#9 0x5618972452a0 <unknown>\n#10 0x56189721f173 <unknown>\n#11 0x5618971ebd4b <unknown>\n#12 0x5618971ec9b1 <unknown>\n#13 0x5618976ca93b <unknown>\n#14 0x5618976ce83a <unknown>\n#15 0x5618976b2692 <unknown>\n#16 0x5618976cf3c4 <unknown>\n#17 0x5618976974cf <unknown>\n#18 0x5618976f3568 <unknown>\n#19 0x5618976f3746 <unknown>\n#20 0x5618977045f6 <unknown>\n#21 0x7f9a30c9caa4 <unknown>\n#22 0x7f9a30d29c3c <unknown>",
    "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7fb1af632810>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7fb1af66b950>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"610b333724fbd0003291d3d85770df4a\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:41: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:61: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:365: in _predicate\n    if element and element.is_enabled():\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb1af66bad0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x5618977045f6 \\\\u003Cunknown>\\\\n#21 0x7f9a30c9caa4 \\\\u003Cunknown>\\\\n#22 0x7f9a30d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=136.0.7103.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x56189770578a <unknown>\nE       #1 0x5618971a80a0 <unknown>\nE       #2 0x5618971aecff <unknown>\nE       #3 0x5618971b1578 <unknown>\nE       #4 0x5618971b1603 <unknown>\nE       #5 0x5618971f45da <unknown>\nE       #6 0x56189721f3a2 <unknown>\nE       #7 0x5618971ed51a <unknown>\nE       #8 0x56189721f56e <unknown>\nE       #9 0x5618972452a0 <unknown>\nE       #10 0x56189721f173 <unknown>\nE       #11 0x5618971ebd4b <unknown>\nE       #12 0x5618971ec9b1 <unknown>\nE       #13 0x5618976ca93b <unknown>\nE       #14 0x5618976ce83a <unknown>\nE       #15 0x5618976b2692 <unknown>\nE       #16 0x5618976cf3c4 <unknown>\nE       #17 0x5618976974cf <unknown>\nE       #18 0x5618976f3568 <unknown>\nE       #19 0x5618976f3746 <unknown>\nE       #20 0x5618977045f6 <unknown>\nE       #21 0x7f9a30c9caa4 <unknown>\nE       #22 0x7f9a30d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Заполнить поле емайл",
      "time" : {
        "start" : 1748800537331,
        "stop" : 1748800537426,
        "duration" : 95
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Продолжить'",
      "time" : {
        "start" : 1748800537426,
        "stop" : 1748800537524,
        "duration" : 98
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить ссылку для смены пароля на email",
      "time" : {
        "start" : 1748800537524,
        "stop" : 1748800559252,
        "duration" : 21728
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Прочитать сообщение",
        "time" : {
          "start" : 1748800537524,
          "stop" : 1748800559252,
          "duration" : 21728
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "e_mail",
          "value" : "'tester_pulsewave@mail.ru'"
        }, {
          "name" : "passwrd",
          "value" : "'xaM2xjxRLvrj71pDpSzL'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Ввести пароль в поле пароль",
      "time" : {
        "start" : 1748800559543,
        "stop" : 1748800559628,
        "duration" : 85
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ввести пароль в поле подтверждение пароля",
      "time" : {
        "start" : 1748800559628,
        "stop" : 1748800559717,
        "duration" : 89
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Сохранить пароль'",
      "time" : {
        "start" : 1748800559717,
        "stop" : 1748800559798,
        "duration" : 81
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации",
      "time" : {
        "start" : 1748800559798,
        "stop" : 1748800560375,
        "duration" : 577
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=136.0.7103.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x56189770578a <unknown>\n#1 0x5618971a80a0 <unknown>\n#2 0x5618971aecff <unknown>\n#3 0x5618971b1578 <unknown>\n#4 0x5618971b1603 <unknown>\n#5 0x5618971f45da <unknown>\n#6 0x56189721f3a2 <unknown>\n#7 0x5618971ed51a <unknown>\n#8 0x56189721f56e <unknown>\n#9 0x5618972452a0 <unknown>\n#10 0x56189721f173 <unknown>\n#11 0x5618971ebd4b <unknown>\n#12 0x5618971ec9b1 <unknown>\n#13 0x5618976ca93b <unknown>\n#14 0x5618976ce83a <unknown>\n#15 0x5618976b2692 <unknown>\n#16 0x5618976cf3c4 <unknown>\n#17 0x5618976974cf <unknown>\n#18 0x5618976f3568 <unknown>\n#19 0x5618976f3746 <unknown>\n#20 0x5618977045f6 <unknown>\n#21 0x7f9a30c9caa4 <unknown>\n#22 0x7f9a30d29c3c <unknown>\n\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_password_recovery/test_password_recovery.py\", line 68, in test_recovery_password_to_fill_correct_email\n    recovery_page_open.click_resume_button()\n  File \"/home/runner/work/PulseWave/PulseWave/pages/password_recovery_page.py\", line 41, in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/pages/base_page.py\", line 61, in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 365, in _predicate\n    if element and element.is_enabled():\n                   ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 192, in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "6a4173fcf43f6371",
      "name" : "Screenshot",
      "source" : "6a4173fcf43f6371.png",
      "type" : "image/png",
      "size" : 76022
    }, {
      "uid" : "ae2b4735aca1c98c",
      "name" : "HTML source",
      "source" : "ae2b4735aca1c98c.html",
      "type" : "text/html",
      "size" : 98268
    } ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1748800560596,
      "stop" : 1748800560657,
      "duration" : 61
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Восстановление пароля'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_password_recovery"
  }, {
    "name" : "suite",
    "value" : "test_password_recovery"
  }, {
    "name" : "subSuite",
    "value" : "TestPasswordRecoveryPage"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2548-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_password_recovery.test_password_recovery"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 23,
        "skipped" : 30,
        "passed" : 403,
        "unknown" : 0,
        "total" : 456
      },
      "items" : [ {
        "uid" : "738a6d3462c100d6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/406//#testresult/738a6d3462c100d6",
        "status" : "passed",
        "time" : {
          "start" : 1748797077225,
          "stop" : 1748797083170,
          "duration" : 5945
        }
      }, {
        "uid" : "c0385bb0469dc135",
        "reportUrl" : "https://Nat754.github.io/PulseWave/406//#testresult/c0385bb0469dc135",
        "status" : "passed",
        "time" : {
          "start" : 1748715491318,
          "stop" : 1748715498623,
          "duration" : 7305
        }
      }, {
        "uid" : "7cfa119bfebab397",
        "reportUrl" : "https://Nat754.github.io/PulseWave/405//#testresult/7cfa119bfebab397",
        "status" : "passed",
        "time" : {
          "start" : 1748629336203,
          "stop" : 1748629343866,
          "duration" : 7663
        }
      }, {
        "uid" : "c0b76f265db10c4d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/404//#testresult/c0b76f265db10c4d",
        "status" : "passed",
        "time" : {
          "start" : 1748542955790,
          "stop" : 1748542965278,
          "duration" : 9488
        }
      }, {
        "uid" : "4f440df79a705b5d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/403//#testresult/4f440df79a705b5d",
        "status" : "passed",
        "time" : {
          "start" : 1748456400961,
          "stop" : 1748456412632,
          "duration" : 11671
        }
      }, {
        "uid" : "c41a8b0f37992eb9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/402//#testresult/c41a8b0f37992eb9",
        "status" : "passed",
        "time" : {
          "start" : 1748369893720,
          "stop" : 1748369908712,
          "duration" : 14992
        }
      }, {
        "uid" : "3cb7d065ed8dece9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/401//#testresult/3cb7d065ed8dece9",
        "status" : "passed",
        "time" : {
          "start" : 1748283537685,
          "stop" : 1748283543272,
          "duration" : 5587
        }
      }, {
        "uid" : "dd24f923ef56dba0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/400//#testresult/dd24f923ef56dba0",
        "status" : "passed",
        "time" : {
          "start" : 1748197189038,
          "stop" : 1748197198130,
          "duration" : 9092
        }
      }, {
        "uid" : "1824386c6acfbf6f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/399//#testresult/1824386c6acfbf6f",
        "status" : "passed",
        "time" : {
          "start" : 1748110786295,
          "stop" : 1748110792924,
          "duration" : 6629
        }
      }, {
        "uid" : "6a89c70795d5b655",
        "reportUrl" : "https://Nat754.github.io/PulseWave/398//#testresult/6a89c70795d5b655",
        "status" : "passed",
        "time" : {
          "start" : 1748024511680,
          "stop" : 1748024520111,
          "duration" : 8431
        }
      }, {
        "uid" : "58e41c72799e602f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/397//#testresult/58e41c72799e602f",
        "status" : "passed",
        "time" : {
          "start" : 1747938157261,
          "stop" : 1747938164944,
          "duration" : 7683
        }
      }, {
        "uid" : "82f442dfc0599b38",
        "reportUrl" : "https://Nat754.github.io/PulseWave/396//#testresult/82f442dfc0599b38",
        "status" : "passed",
        "time" : {
          "start" : 1747851573533,
          "stop" : 1747851580311,
          "duration" : 6778
        }
      }, {
        "uid" : "5576ac970988724e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/231//#testresult/5576ac970988724e",
        "status" : "passed",
        "time" : {
          "start" : 1747845279558,
          "stop" : 1747845288970,
          "duration" : 9412
        }
      }, {
        "uid" : "a4c8edef009f147f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/395//#testresult/a4c8edef009f147f",
        "status" : "passed",
        "time" : {
          "start" : 1747842500829,
          "stop" : 1747842508026,
          "duration" : 7197
        }
      }, {
        "uid" : "3bd6bc9452a0606c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/395//#testresult/3bd6bc9452a0606c",
        "status" : "passed",
        "time" : {
          "start" : 1747765388096,
          "stop" : 1747765395918,
          "duration" : 7822
        }
      }, {
        "uid" : "6b5392f484681895",
        "reportUrl" : "https://Nat754.github.io/PulseWave/394//#testresult/6b5392f484681895",
        "status" : "passed",
        "time" : {
          "start" : 1747689626873,
          "stop" : 1747689635841,
          "duration" : 8968
        }
      }, {
        "uid" : "dace6c91a73a3b05",
        "reportUrl" : "https://Nat754.github.io/PulseWave/389//#testresult/dace6c91a73a3b05",
        "status" : "passed",
        "time" : {
          "start" : 1747260605396,
          "stop" : 1747260617167,
          "duration" : 11771
        }
      }, {
        "uid" : "123df6f394377625",
        "reportUrl" : "https://Nat754.github.io/PulseWave/386//#testresult/123df6f394377625",
        "status" : "passed",
        "time" : {
          "start" : 1746987630949,
          "stop" : 1746987640460,
          "duration" : 9511
        }
      }, {
        "uid" : "165de75c368865a0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/385//#testresult/165de75c368865a0",
        "status" : "passed",
        "time" : {
          "start" : 1746901195032,
          "stop" : 1746901201443,
          "duration" : 6411
        }
      }, {
        "uid" : "2ac15f69dcba1a3d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/384//#testresult/2ac15f69dcba1a3d",
        "status" : "passed",
        "time" : {
          "start" : 1746814822551,
          "stop" : 1746814827965,
          "duration" : 5414
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "8167ee1f14afcd42.json",
  "parameterValues" : [ "'chrome'" ]
}