{
  "uid" : "d69984a77adceec",
  "name" : "POST Обновить JWT refresh token авторизованного пользователя",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_jwt_refresh",
  "historyId" : "af14d7891c2f15bc9c4384deec55c884",
  "time" : {
    "start" : 1733885864874,
    "stop" : 1733885866110,
    "duration" : 1236
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'refresh'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f87b79fd3a0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f87b7a3df40>\n\n    @allure.title(\"POST Обновить JWT refresh token авторизованного пользователя\")\n    def test_post_auth_jwt_refresh(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/jwt/refresh/'\n>       refresh = use_api_base.create_refresh(email1, password0)\n\ntests/test_api/test_api.py:178: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_refresh(e_mail, passwrd):\n        with allure.step('Получить refresh токен пользователя'):\n            url = f'{Links.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           refresh = f\"{response.json()['refresh']}\"\nE           KeyError: 'refresh'\n\napi_testing/api_base.py:83: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1733885823999,
      "stop" : 1733885824017,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1733885824017,
      "stop" : 1733885824017,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1733885864874,
      "stop" : 1733885864874,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'refresh'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f87b79fd3a0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f87b7a3df40>\n\n    @allure.title(\"POST Обновить JWT refresh token авторизованного пользователя\")\n    def test_post_auth_jwt_refresh(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/jwt/refresh/'\n>       refresh = use_api_base.create_refresh(email1, password0)\n\ntests/test_api/test_api.py:178: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_refresh(e_mail, passwrd):\n        with allure.step('Получить refresh токен пользователя'):\n            url = f'{Links.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           refresh = f\"{response.json()['refresh']}\"\nE           KeyError: 'refresh'\n\napi_testing/api_base.py:83: KeyError",
    "steps" : [ {
      "name" : "Получить refresh токен пользователя",
      "time" : {
        "start" : 1733885864874,
        "stop" : 1733885866110,
        "duration" : 1236
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'refresh'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 83, in create_refresh\n    refresh = f\"{response.json()['refresh']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az520-636"
  }, {
    "name" : "thread",
    "value" : "2276-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 26,
        "skipped" : 0,
        "passed" : 240,
        "unknown" : 0,
        "total" : 266
      },
      "items" : [ {
        "uid" : "9cde852685d55605",
        "reportUrl" : "https://Nat754.github.io/PulseWave/234//#testresult/9cde852685d55605",
        "status" : "passed",
        "time" : {
          "start" : 1733799635557,
          "stop" : 1733799637243,
          "duration" : 1686
        }
      }, {
        "uid" : "26b0310fea68b1ae",
        "reportUrl" : "https://Nat754.github.io/PulseWave/233//#testresult/26b0310fea68b1ae",
        "status" : "passed",
        "time" : {
          "start" : 1733713305866,
          "stop" : 1733713307564,
          "duration" : 1698
        }
      }, {
        "uid" : "206b7e6c50210658",
        "reportUrl" : "https://Nat754.github.io/PulseWave/232//#testresult/206b7e6c50210658",
        "status" : "passed",
        "time" : {
          "start" : 1733627018744,
          "stop" : 1733627022104,
          "duration" : 3360
        }
      }, {
        "uid" : "306600c94a5a10e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/231//#testresult/306600c94a5a10e",
        "status" : "passed",
        "time" : {
          "start" : 1733540158547,
          "stop" : 1733540160328,
          "duration" : 1781
        }
      }, {
        "uid" : "474e5cdf74151428",
        "reportUrl" : "https://Nat754.github.io/PulseWave/230//#testresult/474e5cdf74151428",
        "status" : "passed",
        "time" : {
          "start" : 1733453875925,
          "stop" : 1733453877563,
          "duration" : 1638
        }
      }, {
        "uid" : "43f7ac258b434c60",
        "reportUrl" : "https://Nat754.github.io/PulseWave/229//#testresult/43f7ac258b434c60",
        "status" : "passed",
        "time" : {
          "start" : 1733367562098,
          "stop" : 1733367563779,
          "duration" : 1681
        }
      }, {
        "uid" : "1fc300f125b550ee",
        "reportUrl" : "https://Nat754.github.io/PulseWave/228//#testresult/1fc300f125b550ee",
        "status" : "passed",
        "time" : {
          "start" : 1733281120128,
          "stop" : 1733281121818,
          "duration" : 1690
        }
      }, {
        "uid" : "9e8da2d150aa2bbc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/227//#testresult/9e8da2d150aa2bbc",
        "status" : "passed",
        "time" : {
          "start" : 1733194836050,
          "stop" : 1733194838250,
          "duration" : 2200
        }
      }, {
        "uid" : "754b7f9d269378a0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/227//#testresult/754b7f9d269378a0",
        "status" : "passed",
        "time" : {
          "start" : 1733141943952,
          "stop" : 1733141945819,
          "duration" : 1867
        }
      }, {
        "uid" : "80c2e9b0d9566d3b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/226//#testresult/80c2e9b0d9566d3b",
        "status" : "passed",
        "time" : {
          "start" : 1733108421999,
          "stop" : 1733108423966,
          "duration" : 1967
        }
      }, {
        "uid" : "9a83df03e73bde0c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/225//#testresult/9a83df03e73bde0c",
        "status" : "passed",
        "time" : {
          "start" : 1733022620613,
          "stop" : 1733022622699,
          "duration" : 2086
        }
      }, {
        "uid" : "59a66b2add8179dd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/224//#testresult/59a66b2add8179dd",
        "status" : "passed",
        "time" : {
          "start" : 1732935042266,
          "stop" : 1732935044254,
          "duration" : 1988
        }
      }, {
        "uid" : "3a522fbf0598ad28",
        "reportUrl" : "https://Nat754.github.io/PulseWave/223//#testresult/3a522fbf0598ad28",
        "status" : "passed",
        "time" : {
          "start" : 1732848983917,
          "stop" : 1732848986859,
          "duration" : 2942
        }
      }, {
        "uid" : "84a82630d81444e6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/222//#testresult/84a82630d81444e6",
        "status" : "passed",
        "time" : {
          "start" : 1732762590545,
          "stop" : 1732762592826,
          "duration" : 2281
        }
      }, {
        "uid" : "cd7a1441f16e0bd1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/221//#testresult/cd7a1441f16e0bd1",
        "status" : "passed",
        "time" : {
          "start" : 1732676211781,
          "stop" : 1732676213920,
          "duration" : 2139
        }
      }, {
        "uid" : "bc63a24cf9f9e466",
        "reportUrl" : "https://Nat754.github.io/PulseWave/220//#testresult/bc63a24cf9f9e466",
        "status" : "passed",
        "time" : {
          "start" : 1732589670502,
          "stop" : 1732589672689,
          "duration" : 2187
        }
      }, {
        "uid" : "6576fd95826a4712",
        "reportUrl" : "https://Nat754.github.io/PulseWave/219//#testresult/6576fd95826a4712",
        "status" : "passed",
        "time" : {
          "start" : 1732503352594,
          "stop" : 1732503354666,
          "duration" : 2072
        }
      }, {
        "uid" : "ee4d6e8931611ec7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/218//#testresult/ee4d6e8931611ec7",
        "status" : "passed",
        "time" : {
          "start" : 1732429923793,
          "stop" : 1732429926389,
          "duration" : 2596
        }
      }, {
        "uid" : "d569ef15847237df",
        "reportUrl" : "https://Nat754.github.io/PulseWave/218//#testresult/d569ef15847237df",
        "status" : "passed",
        "time" : {
          "start" : 1732417116402,
          "stop" : 1732417118246,
          "duration" : 1844
        }
      }, {
        "uid" : "3e0bb79924629a34",
        "reportUrl" : "https://Nat754.github.io/PulseWave/226//#testresult/3e0bb79924629a34",
        "status" : "passed",
        "time" : {
          "start" : 1732399713727,
          "stop" : 1732399715842,
          "duration" : 2115
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d69984a77adceec.json",
  "parameterValues" : [ ]
}