{
  "uid" : "cd0129b675d1615a",
  "name" : "POST Подтверждение смены почты пользователя. Токен получить из ссылки auth/change_email/{token}.",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_change_email_confirm",
  "historyId" : "45e5562a3450eddd1d35fac0e3834f4b",
  "time" : {
    "start" : 1734144856737,
    "stop" : 1734144862265,
    "duration" : 5528
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fa544b76d20>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fa544bae810>\n\n    @allure.title(\"POST Подтверждение смены почты пользователя. Токен получить из ссылки auth/change_email/{token}.\")\n    def test_post_auth_change_email_confirm(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.link.BASE_URL}auth/change_email_confirm/'\n        token_email = use_api_base.get_token_on_email(email2, password2, 'token=')\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                                 json={\"token\": token_email, \"email\": email2, \"password\": password0})\n>       Assertions.assert_status_code(response, self.code.STATUS_204)\n\ntests/test_api/test_api.py:205: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 204\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 204. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1734144856736,
      "stop" : 1734144856737,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1734144744249,
      "stop" : 1734144744267,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1734144744267,
      "stop" : 1734144744267,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fa544b76d20>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fa544bae810>\n\n    @allure.title(\"POST Подтверждение смены почты пользователя. Токен получить из ссылки auth/change_email/{token}.\")\n    def test_post_auth_change_email_confirm(self, use_api_base):\n        jwt = use_api_base.create_jwt(email1, password0)\n        url = f'{self.link.BASE_URL}auth/change_email_confirm/'\n        token_email = use_api_base.get_token_on_email(email2, password2, 'token=')\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                                 json={\"token\": token_email, \"email\": email2, \"password\": password0})\n>       Assertions.assert_status_code(response, self.code.STATUS_204)\n\ntests/test_api/test_api.py:205: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 204\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 204. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить access токен пользователя",
      "time" : {
        "start" : 1734144856737,
        "stop" : 1734144858157,
        "duration" : 1420
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить подтверждение смены почты пользователя на емайл",
      "time" : {
        "start" : 1734144858158,
        "stop" : 1734144861473,
        "duration" : 3315
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 204",
      "time" : {
        "start" : 1734144862264,
        "stop" : 1734144862264,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1345-193"
  }, {
    "name" : "thread",
    "value" : "2226-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 36,
        "skipped" : 0,
        "passed" : 232,
        "unknown" : 0,
        "total" : 270
      },
      "items" : [ {
        "uid" : "77596366a6674274",
        "reportUrl" : "https://Nat754.github.io/PulseWave/237//#testresult/77596366a6674274",
        "status" : "passed",
        "time" : {
          "start" : 1734058813749,
          "stop" : 1734058818310,
          "duration" : 4561
        }
      }, {
        "uid" : "832cf440ea71c498",
        "reportUrl" : "https://Nat754.github.io/PulseWave/236//#testresult/832cf440ea71c498",
        "status" : "passed",
        "time" : {
          "start" : 1733972335208,
          "stop" : 1733972340731,
          "duration" : 5523
        }
      }, {
        "uid" : "c6850c82b1cc06e3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/235//#testresult/c6850c82b1cc06e3",
        "status" : "passed",
        "time" : {
          "start" : 1733887115863,
          "stop" : 1733887119957,
          "duration" : 4094
        }
      }, {
        "uid" : "bdba4029ca260fda",
        "reportUrl" : "https://Nat754.github.io/PulseWave/235//#testresult/bdba4029ca260fda",
        "status" : "broken",
        "statusDetails" : "KeyError: 'access'",
        "time" : {
          "start" : 1733885868582,
          "stop" : 1733885870604,
          "duration" : 2022
        }
      }, {
        "uid" : "7a7a8f40c87e34be",
        "reportUrl" : "https://Nat754.github.io/PulseWave/234//#testresult/7a7a8f40c87e34be",
        "status" : "passed",
        "time" : {
          "start" : 1733799656654,
          "stop" : 1733799660808,
          "duration" : 4154
        }
      }, {
        "uid" : "5f637ad45a8b855e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/233//#testresult/5f637ad45a8b855e",
        "status" : "passed",
        "time" : {
          "start" : 1733713327003,
          "stop" : 1733713330900,
          "duration" : 3897
        }
      }, {
        "uid" : "535e6e9d33aafeb0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/232//#testresult/535e6e9d33aafeb0",
        "status" : "passed",
        "time" : {
          "start" : 1733627041398,
          "stop" : 1733627045314,
          "duration" : 3916
        }
      }, {
        "uid" : "e12d0489052235aa",
        "reportUrl" : "https://Nat754.github.io/PulseWave/231//#testresult/e12d0489052235aa",
        "status" : "passed",
        "time" : {
          "start" : 1733540179581,
          "stop" : 1733540183591,
          "duration" : 4010
        }
      }, {
        "uid" : "ca8bb117aac0872c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/230//#testresult/ca8bb117aac0872c",
        "status" : "passed",
        "time" : {
          "start" : 1733453896800,
          "stop" : 1733453900645,
          "duration" : 3845
        }
      }, {
        "uid" : "4460c7caaa3ab96a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/229//#testresult/4460c7caaa3ab96a",
        "status" : "passed",
        "time" : {
          "start" : 1733367583299,
          "stop" : 1733367587072,
          "duration" : 3773
        }
      }, {
        "uid" : "16371e93df69688d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/228//#testresult/16371e93df69688d",
        "status" : "passed",
        "time" : {
          "start" : 1733281141213,
          "stop" : 1733281145351,
          "duration" : 4138
        }
      }, {
        "uid" : "1bdaa7b8fd5a9040",
        "reportUrl" : "https://Nat754.github.io/PulseWave/227//#testresult/1bdaa7b8fd5a9040",
        "status" : "passed",
        "time" : {
          "start" : 1733194858329,
          "stop" : 1733194863540,
          "duration" : 5211
        }
      }, {
        "uid" : "d1ef2220dfd131d9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/227//#testresult/d1ef2220dfd131d9",
        "status" : "passed",
        "time" : {
          "start" : 1733141965100,
          "stop" : 1733141969750,
          "duration" : 4650
        }
      }, {
        "uid" : "27afdf544c053fdd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/226//#testresult/27afdf544c053fdd",
        "status" : "passed",
        "time" : {
          "start" : 1733108444605,
          "stop" : 1733108448592,
          "duration" : 3987
        }
      }, {
        "uid" : "80e933dc82282589",
        "reportUrl" : "https://Nat754.github.io/PulseWave/225//#testresult/80e933dc82282589",
        "status" : "passed",
        "time" : {
          "start" : 1733022642555,
          "stop" : 1733022646580,
          "duration" : 4025
        }
      }, {
        "uid" : "2bc2291709ec7810",
        "reportUrl" : "https://Nat754.github.io/PulseWave/224//#testresult/2bc2291709ec7810",
        "status" : "passed",
        "time" : {
          "start" : 1732935064367,
          "stop" : 1732935069018,
          "duration" : 4651
        }
      }, {
        "uid" : "efd17af970ed98eb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/223//#testresult/efd17af970ed98eb",
        "status" : "passed",
        "time" : {
          "start" : 1732849006702,
          "stop" : 1732849011738,
          "duration" : 5036
        }
      }, {
        "uid" : "b0a48a2072ceb0e8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/222//#testresult/b0a48a2072ceb0e8",
        "status" : "passed",
        "time" : {
          "start" : 1732762613422,
          "stop" : 1732762618404,
          "duration" : 4982
        }
      }, {
        "uid" : "da8dfa6110c7e255",
        "reportUrl" : "https://Nat754.github.io/PulseWave/221//#testresult/da8dfa6110c7e255",
        "status" : "passed",
        "time" : {
          "start" : 1732676233828,
          "stop" : 1732676238378,
          "duration" : 4550
        }
      }, {
        "uid" : "de876fa86095bffb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/220//#testresult/de876fa86095bffb",
        "status" : "passed",
        "time" : {
          "start" : 1732589693080,
          "stop" : 1732589697551,
          "duration" : 4471
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "cd0129b675d1615a.json",
  "parameterValues" : [ ]
}