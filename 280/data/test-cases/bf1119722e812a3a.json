{
  "uid" : "bf1119722e812a3a",
  "name" : "POST Создать доску без указания РП",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_api_board_create",
  "historyId" : "a6085ff02c8eb32aa6f75c6af168277f",
  "time" : {
    "start" : 1737828573222,
    "stop" : 1737828575030,
    "duration" : 1808
  },
  "description" : "Создание доски без указания РП, будет создано дефолтное РП для этой доски",
  "descriptionHtml" : "<p>Создание доски без указания РП, будет создано дефолтное РП для этой доски</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fa1237beab0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fa12327c080>\n\n    @allure.title(\"POST Создать доску без указания РП\")\n    def test_post_api_board_create(self, use_api_base):\n        \"\"\"Создание доски без указания РП, будет создано дефолтное РП для этой доски\"\"\"\n        jwt = use_api_base.create_tokens(email1, password0)[0]\n        url = f'{self.link.BASE_URL}api/board_create/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                 json=self.constant.BOARD_CREATE)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1737828573222,
      "stop" : 1737828573222,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1737828515050,
      "stop" : 1737828515066,
      "duration" : 16
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1737828515066,
      "stop" : 1737828515066,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Создание доски без указания РП, будет создано дефолтное РП для этой доски",
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7fa1237beab0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fa12327c080>\n\n    @allure.title(\"POST Создать доску без указания РП\")\n    def test_post_api_board_create(self, use_api_base):\n        \"\"\"Создание доски без указания РП, будет создано дефолтное РП для этой доски\"\"\"\n        jwt = use_api_base.create_tokens(email1, password0)[0]\n        url = f'{self.link.BASE_URL}api/board_create/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"\"\"{jwt}\"\"\"},\n                                 json=self.constant.BOARD_CREATE)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить access токен пользователя",
      "time" : {
        "start" : 1737828573222,
        "stop" : 1737828574399,
        "duration" : 1177
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1737828575030,
        "stop" : 1737828575030,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1296-655"
  }, {
    "name" : "thread",
    "value" : "2390-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 25,
        "skipped" : 28,
        "passed" : 264,
        "unknown" : 0,
        "total" : 318
      },
      "items" : [ {
        "uid" : "337aaf2d372a1a7e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/279//#testresult/337aaf2d372a1a7e",
        "status" : "passed",
        "time" : {
          "start" : 1737742250871,
          "stop" : 1737742252610,
          "duration" : 1739
        }
      }, {
        "uid" : "f913ce2645cece8d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/278//#testresult/f913ce2645cece8d",
        "status" : "passed",
        "time" : {
          "start" : 1737655872418,
          "stop" : 1737655874096,
          "duration" : 1678
        }
      }, {
        "uid" : "343824c0fdbd452a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/277//#testresult/343824c0fdbd452a",
        "status" : "passed",
        "time" : {
          "start" : 1737569467709,
          "stop" : 1737569469397,
          "duration" : 1688
        }
      }, {
        "uid" : "eefbd50238a609d6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/276//#testresult/eefbd50238a609d6",
        "status" : "passed",
        "time" : {
          "start" : 1737558092791,
          "stop" : 1737558094892,
          "duration" : 2101
        }
      }, {
        "uid" : "83dff1c7106d5301",
        "reportUrl" : "https://Nat754.github.io/PulseWave/276//#testresult/83dff1c7106d5301",
        "status" : "passed",
        "time" : {
          "start" : 1737483076226,
          "stop" : 1737483078469,
          "duration" : 2243
        }
      }, {
        "uid" : "a0e3746a5e6b5cc6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/275//#testresult/a0e3746a5e6b5cc6",
        "status" : "passed",
        "time" : {
          "start" : 1737396633957,
          "stop" : 1737396635909,
          "duration" : 1952
        }
      }, {
        "uid" : "8ddc20fd32b076b4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/274//#testresult/8ddc20fd32b076b4",
        "status" : "passed",
        "time" : {
          "start" : 1737310170456,
          "stop" : 1737310173006,
          "duration" : 2550
        }
      }, {
        "uid" : "47fc708aeba4692a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/273//#testresult/47fc708aeba4692a",
        "status" : "passed",
        "time" : {
          "start" : 1737223803121,
          "stop" : 1737223805352,
          "duration" : 2231
        }
      }, {
        "uid" : "8d9ed940aea51775",
        "reportUrl" : "https://Nat754.github.io/PulseWave/272//#testresult/8d9ed940aea51775",
        "status" : "passed",
        "time" : {
          "start" : 1737137458518,
          "stop" : 1737137460736,
          "duration" : 2218
        }
      }, {
        "uid" : "285065338cdb94fe",
        "reportUrl" : "https://Nat754.github.io/PulseWave/271//#testresult/285065338cdb94fe",
        "status" : "passed",
        "time" : {
          "start" : 1737051047896,
          "stop" : 1737051049741,
          "duration" : 1845
        }
      }, {
        "uid" : "1103a46d6cae76f9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/270//#testresult/1103a46d6cae76f9",
        "status" : "passed",
        "time" : {
          "start" : 1736964642722,
          "stop" : 1736964644586,
          "duration" : 1864
        }
      }, {
        "uid" : "d6df64fc56eb6ad3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/269//#testresult/d6df64fc56eb6ad3",
        "status" : "passed",
        "time" : {
          "start" : 1736878246671,
          "stop" : 1736878248330,
          "duration" : 1659
        }
      }, {
        "uid" : "1603c6c35ee59cbb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/268//#testresult/1603c6c35ee59cbb",
        "status" : "passed",
        "time" : {
          "start" : 1736791900657,
          "stop" : 1736791902492,
          "duration" : 1835
        }
      }, {
        "uid" : "211595ee1b460888",
        "reportUrl" : "https://Nat754.github.io/PulseWave/267//#testresult/211595ee1b460888",
        "status" : "passed",
        "time" : {
          "start" : 1736705377536,
          "stop" : 1736705379477,
          "duration" : 1941
        }
      }, {
        "uid" : "8d08bbaa4435c8d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/266//#testresult/8d08bbaa4435c8d",
        "status" : "passed",
        "time" : {
          "start" : 1736619010560,
          "stop" : 1736619012816,
          "duration" : 2256
        }
      }, {
        "uid" : "e5dd074d175e7f17",
        "reportUrl" : "https://Nat754.github.io/PulseWave/265//#testresult/e5dd074d175e7f17",
        "status" : "passed",
        "time" : {
          "start" : 1736532672822,
          "stop" : 1736532674905,
          "duration" : 2083
        }
      }, {
        "uid" : "c18898cad45db975",
        "reportUrl" : "https://Nat754.github.io/PulseWave/264//#testresult/c18898cad45db975",
        "status" : "passed",
        "time" : {
          "start" : 1736446289874,
          "stop" : 1736446291869,
          "duration" : 1995
        }
      }, {
        "uid" : "2877a3d4922e5f8a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/263//#testresult/2877a3d4922e5f8a",
        "status" : "passed",
        "time" : {
          "start" : 1736359866189,
          "stop" : 1736359868179,
          "duration" : 1990
        }
      }, {
        "uid" : "cbe3f0ba0602a38",
        "reportUrl" : "https://Nat754.github.io/PulseWave/262//#testresult/cbe3f0ba0602a38",
        "status" : "passed",
        "time" : {
          "start" : 1736273491777,
          "stop" : 1736273494028,
          "duration" : 2251
        }
      }, {
        "uid" : "b900b3eeb675bf44",
        "reportUrl" : "https://Nat754.github.io/PulseWave/261//#testresult/b900b3eeb675bf44",
        "status" : "passed",
        "time" : {
          "start" : 1736187123386,
          "stop" : 1736187125615,
          "duration" : 2229
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bf1119722e812a3a.json",
  "parameterValues" : [ ]
}