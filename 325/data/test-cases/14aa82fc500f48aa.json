{
  "uid" : "14aa82fc500f48aa",
  "name" : "POST Регистрация пользователя без подтверждения подписки",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_create_user_no_subscriber",
  "historyId" : "65cde6c273276871256fcbcd8d2a7b23",
  "time" : {
    "start" : 1741718677241,
    "stop" : 1741718677752,
    "duration" : 511
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7ffa641c4830>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7ffa63bd7e90>\n\n    @allure.title(\"POST Регистрация пользователя без подтверждения подписки\")\n    def test_post_create_user_no_subscriber(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER_NO_SUBSCRIBER)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1741718600920,
      "stop" : 1741718600935,
      "duration" : 15
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1741718600935,
      "stop" : 1741718600935,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1741718677241,
      "stop" : 1741718677241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7ffa641c4830>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7ffa63bd7e90>\n\n    @allure.title(\"POST Регистрация пользователя без подтверждения подписки\")\n    def test_post_create_user_no_subscriber(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER_NO_SUBSCRIBER)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1741718677751,
        "stop" : 1741718677751,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1360-893"
  }, {
    "name" : "thread",
    "value" : "2413-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 42,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 327,
        "unknown" : 0,
        "total" : 372
      },
      "items" : [ {
        "uid" : "89809182530b84ce",
        "reportUrl" : "https://Nat754.github.io/PulseWave/325//#testresult/89809182530b84ce",
        "status" : "passed",
        "time" : {
          "start" : 1741716765080,
          "stop" : 1741716766509,
          "duration" : 1429
        }
      }, {
        "uid" : "2d1ef3b60536aef9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/324//#testresult/2d1ef3b60536aef9",
        "status" : "passed",
        "time" : {
          "start" : 1741631659152,
          "stop" : 1741631660342,
          "duration" : 1190
        }
      }, {
        "uid" : "6ff46ab7d6687975",
        "reportUrl" : "https://Nat754.github.io/PulseWave/324//#testresult/6ff46ab7d6687975",
        "status" : "passed",
        "time" : {
          "start" : 1741630284456,
          "stop" : 1741630285806,
          "duration" : 1350
        }
      }, {
        "uid" : "4223869140b500ea",
        "reportUrl" : "https://Nat754.github.io/PulseWave/323//#testresult/4223869140b500ea",
        "status" : "passed",
        "time" : {
          "start" : 1741543765933,
          "stop" : 1741543767390,
          "duration" : 1457
        }
      }, {
        "uid" : "c4f3e837e743bce6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/322//#testresult/c4f3e837e743bce6",
        "status" : "passed",
        "time" : {
          "start" : 1741457326087,
          "stop" : 1741457327320,
          "duration" : 1233
        }
      }, {
        "uid" : "42d105158e580939",
        "reportUrl" : "https://Nat754.github.io/PulseWave/321//#testresult/42d105158e580939",
        "status" : "passed",
        "time" : {
          "start" : 1741371139708,
          "stop" : 1741371141136,
          "duration" : 1428
        }
      }, {
        "uid" : "dbd75f3268c57231",
        "reportUrl" : "https://Nat754.github.io/PulseWave/320//#testresult/dbd75f3268c57231",
        "status" : "passed",
        "time" : {
          "start" : 1741284731473,
          "stop" : 1741284732667,
          "duration" : 1194
        }
      }, {
        "uid" : "14185d3ddf6dd1c6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/319//#testresult/14185d3ddf6dd1c6",
        "status" : "passed",
        "time" : {
          "start" : 1741198365731,
          "stop" : 1741198367181,
          "duration" : 1450
        }
      }, {
        "uid" : "8c722ee1c486df52",
        "reportUrl" : "https://Nat754.github.io/PulseWave/318//#testresult/8c722ee1c486df52",
        "status" : "passed",
        "time" : {
          "start" : 1741111940773,
          "stop" : 1741111942151,
          "duration" : 1378
        }
      }, {
        "uid" : "6a96025b6d9c33ae",
        "reportUrl" : "https://Nat754.github.io/PulseWave/317//#testresult/6a96025b6d9c33ae",
        "status" : "passed",
        "time" : {
          "start" : 1741025509550,
          "stop" : 1741025510951,
          "duration" : 1401
        }
      }, {
        "uid" : "51bddb92002b31d4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/316//#testresult/51bddb92002b31d4",
        "status" : "passed",
        "time" : {
          "start" : 1740939041453,
          "stop" : 1740939043484,
          "duration" : 2031
        }
      }, {
        "uid" : "68b07482344d030a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/315//#testresult/68b07482344d030a",
        "status" : "passed",
        "time" : {
          "start" : 1740852640146,
          "stop" : 1740852641656,
          "duration" : 1510
        }
      }, {
        "uid" : "ac09b7de0b59332a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/314//#testresult/ac09b7de0b59332a",
        "status" : "passed",
        "time" : {
          "start" : 1740766326420,
          "stop" : 1740766327670,
          "duration" : 1250
        }
      }, {
        "uid" : "f051421bea8bdaf8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/313//#testresult/f051421bea8bdaf8",
        "status" : "passed",
        "time" : {
          "start" : 1740679932741,
          "stop" : 1740679933915,
          "duration" : 1174
        }
      }, {
        "uid" : "e1056ccfe1cf2bdd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/312//#testresult/e1056ccfe1cf2bdd",
        "status" : "passed",
        "time" : {
          "start" : 1740593612352,
          "stop" : 1740593613814,
          "duration" : 1462
        }
      }, {
        "uid" : "9d5130b2b5923483",
        "reportUrl" : "https://Nat754.github.io/PulseWave/311//#testresult/9d5130b2b5923483",
        "status" : "passed",
        "time" : {
          "start" : 1740507173850,
          "stop" : 1740507175066,
          "duration" : 1216
        }
      }, {
        "uid" : "55124c1e0546e7aa",
        "reportUrl" : "https://Nat754.github.io/PulseWave/310//#testresult/55124c1e0546e7aa",
        "status" : "passed",
        "time" : {
          "start" : 1740420748894,
          "stop" : 1740420750333,
          "duration" : 1439
        }
      }, {
        "uid" : "1aa0b5eda7212ab2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/309//#testresult/1aa0b5eda7212ab2",
        "status" : "passed",
        "time" : {
          "start" : 1740334264068,
          "stop" : 1740334265323,
          "duration" : 1255
        }
      }, {
        "uid" : "41e6b0bb64ab5415",
        "reportUrl" : "https://Nat754.github.io/PulseWave/308//#testresult/41e6b0bb64ab5415",
        "status" : "passed",
        "time" : {
          "start" : 1740247812897,
          "stop" : 1740247814315,
          "duration" : 1418
        }
      }, {
        "uid" : "6751b752dabd7018",
        "reportUrl" : "https://Nat754.github.io/PulseWave/307//#testresult/6751b752dabd7018",
        "status" : "passed",
        "time" : {
          "start" : 1740161509330,
          "stop" : 1740161510767,
          "duration" : 1437
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "14aa82fc500f48aa.json",
  "parameterValues" : [ ]
}