{
  "uid" : "52d07e9c251f3474",
  "name" : "POST Создать пару токенов access и refresh",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_jwt_create",
  "historyId" : "3a2538cb31301304b345f32dcb0f93b0",
  "time" : {
    "start" : 1716517378294,
    "stop" : 1716517379800,
    "duration" : 1506
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 401",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6ff2ca18e0>\n\n    @allure.title(\"POST Создать пару токенов access и refresh\")\n    def test_post_auth_jwt_create(self):\n        url = f'{self.constant.BASE_URL}auth/jwt/create/'\n        response = requests.post(url, json={\"email\": email1, \"password\": password0})\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 401\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1716517354685,
      "stop" : 1716517354702,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1716517354703,
      "stop" : 1716517354703,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 401",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6ff2ca18e0>\n\n    @allure.title(\"POST Создать пару токенов access и refresh\")\n    def test_post_auth_jwt_create(self):\n        url = f'{self.constant.BASE_URL}auth/jwt/create/'\n        response = requests.post(url, json={\"email\": email1, \"password\": password0})\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 401\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 200",
      "time" : {
        "start" : 1716517379799,
        "stop" : 1716517379799,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 401\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az770-693"
  }, {
    "name" : "thread",
    "value" : "2379-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 5,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 32,
        "unknown" : 0,
        "total" : 40
      },
      "items" : [ {
        "uid" : "3a170e1d2ea56057",
        "reportUrl" : "https://Nat754.github.io/PulseWave/33//#testresult/3a170e1d2ea56057",
        "status" : "passed",
        "time" : {
          "start" : 1716430972607,
          "stop" : 1716430974864,
          "duration" : 2257
        }
      }, {
        "uid" : "dbcb266504bfb7e4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/32//#testresult/dbcb266504bfb7e4",
        "status" : "passed",
        "time" : {
          "start" : 1716344583592,
          "stop" : 1716344584990,
          "duration" : 1398
        }
      }, {
        "uid" : "4d5b3871dbce7f5e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/31//#testresult/4d5b3871dbce7f5e",
        "status" : "passed",
        "time" : {
          "start" : 1716258128296,
          "stop" : 1716258129498,
          "duration" : 1202
        }
      }, {
        "uid" : "f449974aed9df2d2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/30//#testresult/f449974aed9df2d2",
        "status" : "passed",
        "time" : {
          "start" : 1716171868265,
          "stop" : 1716171869693,
          "duration" : 1428
        }
      }, {
        "uid" : "fc86743e0bbef7c2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/29//#testresult/fc86743e0bbef7c2",
        "status" : "passed",
        "time" : {
          "start" : 1716085478279,
          "stop" : 1716085479583,
          "duration" : 1304
        }
      }, {
        "uid" : "61c8b2fa7f7f7f11",
        "reportUrl" : "https://Nat754.github.io/PulseWave/28//#testresult/61c8b2fa7f7f7f11",
        "status" : "passed",
        "time" : {
          "start" : 1715998907192,
          "stop" : 1715998908801,
          "duration" : 1609
        }
      }, {
        "uid" : "3b73a0f7731e1303",
        "reportUrl" : "https://Nat754.github.io/PulseWave/27//#testresult/3b73a0f7731e1303",
        "status" : "passed",
        "time" : {
          "start" : 1715912508765,
          "stop" : 1715912510141,
          "duration" : 1376
        }
      }, {
        "uid" : "c01429bf4bc239b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/212//#testresult/c01429bf4bc239b",
        "status" : "passed",
        "time" : {
          "start" : 1715841431593,
          "stop" : 1715841433488,
          "duration" : 1895
        }
      }, {
        "uid" : "c1bda3e875033247",
        "reportUrl" : "https://Nat754.github.io/PulseWave/26//#testresult/c1bda3e875033247",
        "status" : "passed",
        "time" : {
          "start" : 1715826128014,
          "stop" : 1715826129337,
          "duration" : 1323
        }
      }, {
        "uid" : "81b2886ebfcdd939",
        "reportUrl" : "https://Nat754.github.io/PulseWave/25//#testresult/81b2886ebfcdd939",
        "status" : "passed",
        "time" : {
          "start" : 1715739942165,
          "stop" : 1715739944223,
          "duration" : 2058
        }
      }, {
        "uid" : "1749a3f33875e498",
        "reportUrl" : "https://Nat754.github.io/PulseWave/24//#testresult/1749a3f33875e498",
        "status" : "passed",
        "time" : {
          "start" : 1715653293439,
          "stop" : 1715653294876,
          "duration" : 1437
        }
      }, {
        "uid" : "3c2a50b29f826e76",
        "reportUrl" : "https://Nat754.github.io/PulseWave/23//#testresult/3c2a50b29f826e76",
        "status" : "passed",
        "time" : {
          "start" : 1715567053835,
          "stop" : 1715567055189,
          "duration" : 1354
        }
      }, {
        "uid" : "22a998cdd5c9d8bb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/22//#testresult/22a998cdd5c9d8bb",
        "status" : "passed",
        "time" : {
          "start" : 1715480607948,
          "stop" : 1715480610169,
          "duration" : 2221
        }
      }, {
        "uid" : "e947931079a576c8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/21//#testresult/e947931079a576c8",
        "status" : "passed",
        "time" : {
          "start" : 1715393926595,
          "stop" : 1715393927887,
          "duration" : 1292
        }
      }, {
        "uid" : "f595418ea04eed1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/20//#testresult/f595418ea04eed1",
        "status" : "passed",
        "time" : {
          "start" : 1715307929523,
          "stop" : 1715307931103,
          "duration" : 1580
        }
      }, {
        "uid" : "30912d8c24101fd9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/19//#testresult/30912d8c24101fd9",
        "status" : "passed",
        "time" : {
          "start" : 1715221411919,
          "stop" : 1715221413257,
          "duration" : 1338
        }
      }, {
        "uid" : "3d5e74c9d0b9ab29",
        "reportUrl" : "https://Nat754.github.io/PulseWave/18//#testresult/3d5e74c9d0b9ab29",
        "status" : "passed",
        "time" : {
          "start" : 1715134106170,
          "stop" : 1715134107611,
          "duration" : 1441
        }
      }, {
        "uid" : "44a3b8e50ee11729",
        "reportUrl" : "https://Nat754.github.io/PulseWave/17//#testresult/44a3b8e50ee11729",
        "status" : "passed",
        "time" : {
          "start" : 1715048757438,
          "stop" : 1715048758930,
          "duration" : 1492
        }
      }, {
        "uid" : "c1407163a8093ceb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/16//#testresult/c1407163a8093ceb",
        "status" : "passed",
        "time" : {
          "start" : 1714962159487,
          "stop" : 1714962160798,
          "duration" : 1311
        }
      }, {
        "uid" : "1151e2f8ecb7194d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/15//#testresult/1151e2f8ecb7194d",
        "status" : "passed",
        "time" : {
          "start" : 1714875710371,
          "stop" : 1714875711782,
          "duration" : 1411
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "52d07e9c251f3474.json",
  "parameterValues" : [ ]
}