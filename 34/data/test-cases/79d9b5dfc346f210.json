{
  "uid" : "79d9b5dfc346f210",
  "name" : "GET Информация о конкретной колонке",
  "fullName" : "tests.test_api.test_api.TestAPI#test_get_api_boards_id_column_id",
  "historyId" : "6dbb0a16572cbcfe4b0f790e18796211",
  "time" : {
    "start" : 1716517401818,
    "stop" : 1716517403077,
    "duration" : 1259
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6ff2ca3170>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f6ff25ff020>\n\n    @allure.title(\"GET Информация о конкретной колонке\")\n    def test_get_api_boards_id_column_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:269: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1716517401818,
      "stop" : 1716517401818,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1716517354685,
      "stop" : 1716517354702,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1716517354703,
      "stop" : 1716517354703,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6ff2ca3170>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f6ff25ff020>\n\n    @allure.title(\"GET Информация о конкретной колонке\")\n    def test_get_api_boards_id_column_id(self, use_api_base):\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:269: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1716517401818,
        "stop" : 1716517403077,
        "duration" : 1259
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az770-693"
  }, {
    "name" : "thread",
    "value" : "2379-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 28,
        "passed" : 11,
        "unknown" : 0,
        "total" : 40
      },
      "items" : [ {
        "uid" : "a00ad133eaeaf40",
        "reportUrl" : "https://Nat754.github.io/PulseWave/33//#testresult/a00ad133eaeaf40",
        "status" : "passed",
        "time" : {
          "start" : 1716431068653,
          "stop" : 1716431078892,
          "duration" : 10239
        }
      }, {
        "uid" : "ab9f4447025520fd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/32//#testresult/ab9f4447025520fd",
        "status" : "passed",
        "time" : {
          "start" : 1716344677412,
          "stop" : 1716344687726,
          "duration" : 10314
        }
      }, {
        "uid" : "7fc8d89ce319de9e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/31//#testresult/7fc8d89ce319de9e",
        "status" : "passed",
        "time" : {
          "start" : 1716258204939,
          "stop" : 1716258212744,
          "duration" : 7805
        }
      }, {
        "uid" : "27d77565899958d1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/30//#testresult/27d77565899958d1",
        "status" : "passed",
        "time" : {
          "start" : 1716171962174,
          "stop" : 1716171972075,
          "duration" : 9901
        }
      }, {
        "uid" : "274acf9c7f50243d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/29//#testresult/274acf9c7f50243d",
        "status" : "passed",
        "time" : {
          "start" : 1716085559124,
          "stop" : 1716085567753,
          "duration" : 8629
        }
      }, {
        "uid" : "b9d690f99984c4dc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/28//#testresult/b9d690f99984c4dc",
        "status" : "passed",
        "time" : {
          "start" : 1715998984463,
          "stop" : 1715998992348,
          "duration" : 7885
        }
      }, {
        "uid" : "f3b7791f0a1ba5d4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/27//#testresult/f3b7791f0a1ba5d4",
        "status" : "passed",
        "time" : {
          "start" : 1715912602374,
          "stop" : 1715912612633,
          "duration" : 10259
        }
      }, {
        "uid" : "bb1eae1b690cfc66",
        "reportUrl" : "https://Nat754.github.io/PulseWave/212//#testresult/bb1eae1b690cfc66",
        "status" : "passed",
        "time" : {
          "start" : 1715841514857,
          "stop" : 1715841522873,
          "duration" : 8016
        }
      }, {
        "uid" : "13e48694ad07c22e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/26//#testresult/13e48694ad07c22e",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1715826207737,
          "stop" : 1715826216022,
          "duration" : 8285
        }
      }, {
        "uid" : "881dfb62df49d11f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/25//#testresult/881dfb62df49d11f",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1715740046590,
          "stop" : 1715740057479,
          "duration" : 10889
        }
      }, {
        "uid" : "3a71bd61b6a44dc1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/24//#testresult/3a71bd61b6a44dc1",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1715653388265,
          "stop" : 1715653398676,
          "duration" : 10411
        }
      }, {
        "uid" : "1a829dacc85e2fe6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/23//#testresult/1a829dacc85e2fe6",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715567135398,
          "stop" : 1715567142437,
          "duration" : 7039
        }
      }, {
        "uid" : "fd05b3a3c1d20aff",
        "reportUrl" : "https://Nat754.github.io/PulseWave/22//#testresult/fd05b3a3c1d20aff",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715480703204,
          "stop" : 1715480711348,
          "duration" : 8144
        }
      }, {
        "uid" : "469b26804dea38d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/21//#testresult/469b26804dea38d",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715394005246,
          "stop" : 1715394011667,
          "duration" : 6421
        }
      }, {
        "uid" : "15a5a1e2ea2bbbeb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/20//#testresult/15a5a1e2ea2bbbeb",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715308035782,
          "stop" : 1715308044798,
          "duration" : 9016
        }
      }, {
        "uid" : "be2313d0b6180b5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/19//#testresult/be2313d0b6180b5",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715221499668,
          "stop" : 1715221507659,
          "duration" : 7991
        }
      }, {
        "uid" : "2d93c5c9cf13c452",
        "reportUrl" : "https://Nat754.github.io/PulseWave/18//#testresult/2d93c5c9cf13c452",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715134187768,
          "stop" : 1715134194290,
          "duration" : 6522
        }
      }, {
        "uid" : "8f423f2bc892a1cf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/17//#testresult/8f423f2bc892a1cf",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715048841472,
          "stop" : 1715048847902,
          "duration" : 6430
        }
      }, {
        "uid" : "271e9bbeb42f85ce",
        "reportUrl" : "https://Nat754.github.io/PulseWave/16//#testresult/271e9bbeb42f85ce",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714962242223,
          "stop" : 1714962249274,
          "duration" : 7051
        }
      }, {
        "uid" : "da7a3d6280019950",
        "reportUrl" : "https://Nat754.github.io/PulseWave/15//#testresult/da7a3d6280019950",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714875798392,
          "stop" : 1714875806041,
          "duration" : 7649
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "79d9b5dfc346f210.json",
  "parameterValues" : [ ]
}