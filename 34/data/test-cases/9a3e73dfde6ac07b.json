{
  "uid" : "9a3e73dfde6ac07b",
  "name" : "POST Создать задачу",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_api_column_id_task",
  "historyId" : "b3a0dec94fba2069f242de52bffa8877",
  "time" : {
    "start" : 1716517405539,
    "stop" : 1716517406852,
    "duration" : 1313
  },
  "description" : "\n        responsible: Список ответственных пользователей. Передается массивом из id,например {\"responsible\": [1,2,3]}\n        deadline: Срок выполнения задачи\n        description: Описание\n        priority: Приоритет, число от 0 до 3, где 0 - высочайший приоритет\n        color_mark: Цвет метки\n        name_mark: Название метки\n        ",
  "descriptionHtml" : "<pre><code>    responsible: Список ответственных пользователей. Передается массивом из id,например {&quot;responsible&quot;: [1,2,3]}\n    deadline: Срок выполнения задачи\n    description: Описание\n    priority: Приоритет, число от 0 до 3, где 0 - высочайший приоритет\n    color_mark: Цвет метки\n    name_mark: Название метки\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "KeyError: 'access'",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6ff2ca6540>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f6ff25f9b80>\n\n    @allure.title(\"POST Создать задачу\")\n    def test_post_api_column_id_task(self, use_api_base):\n        \"\"\"\n        responsible: Список ответственных пользователей. Передается массивом из id,например {\"responsible\": [1,2,3]}\n        deadline: Срок выполнения задачи\n        description: Описание\n        priority: Приоритет, число от 0 до 3, где 0 - высочайший приоритет\n        color_mark: Цвет метки\n        name_mark: Название метки\n        \"\"\"\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:317: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1716517405539,
      "stop" : 1716517405539,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1716517354685,
      "stop" : 1716517354702,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1716517354703,
      "stop" : 1716517354703,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        responsible: Список ответственных пользователей. Передается массивом из id,например {\"responsible\": [1,2,3]}\n        deadline: Срок выполнения задачи\n        description: Описание\n        priority: Приоритет, число от 0 до 3, где 0 - высочайший приоритет\n        color_mark: Цвет метки\n        name_mark: Название метки\n        ",
    "status" : "broken",
    "statusMessage" : "KeyError: 'access'",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6ff2ca6540>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f6ff25f9b80>\n\n    @allure.title(\"POST Создать задачу\")\n    def test_post_api_column_id_task(self, use_api_base):\n        \"\"\"\n        responsible: Список ответственных пользователей. Передается массивом из id,например {\"responsible\": [1,2,3]}\n        deadline: Срок выполнения задачи\n        description: Описание\n        priority: Приоритет, число от 0 до 3, где 0 - высочайший приоритет\n        color_mark: Цвет метки\n        name_mark: Название метки\n        \"\"\"\n>       jwt = use_api_base.create_jwt(email1, password0)\n\ntests/test_api/test_api.py:317: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ne_mail = 'test_pulsewave0@mail.ru', passwrd = '!Q2w3e4r'\n\n    @staticmethod\n    def create_jwt(e_mail, passwrd):\n        with allure.step('Получить access токен пользователя на емайл'):\n            url = f'{ApiConstant.BASE_URL}auth/jwt/create/'\n            response = requests.post(url, json={\"email\": e_mail, \"password\": passwrd})\n>           jwt = f\"JWT {response.json()['access']}\"\nE           KeyError: 'access'\n\napi_testing/api_base.py:86: KeyError",
    "steps" : [ {
      "name" : "Получить access токен пользователя на емайл",
      "time" : {
        "start" : 1716517405539,
        "stop" : 1716517406851,
        "duration" : 1312
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 'access'\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 86, in create_jwt\n    jwt = f\"JWT {response.json()['access']}\"\n                 ~~~~~~~~~~~~~~~^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az770-693"
  }, {
    "name" : "thread",
    "value" : "2379-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 28,
        "passed" : 11,
        "unknown" : 0,
        "total" : 40
      },
      "items" : [ {
        "uid" : "312472ec77b51d4a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/33//#testresult/312472ec77b51d4a",
        "status" : "passed",
        "time" : {
          "start" : 1716431101228,
          "stop" : 1716431111631,
          "duration" : 10403
        }
      }, {
        "uid" : "888fe1d4d4d84864",
        "reportUrl" : "https://Nat754.github.io/PulseWave/32//#testresult/888fe1d4d4d84864",
        "status" : "passed",
        "time" : {
          "start" : 1716344709890,
          "stop" : 1716344720190,
          "duration" : 10300
        }
      }, {
        "uid" : "a38465239f007e0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/31//#testresult/a38465239f007e0",
        "status" : "passed",
        "time" : {
          "start" : 1716258229287,
          "stop" : 1716258236932,
          "duration" : 7645
        }
      }, {
        "uid" : "f179ba23486a12a1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/30//#testresult/f179ba23486a12a1",
        "status" : "passed",
        "time" : {
          "start" : 1716171993442,
          "stop" : 1716172003430,
          "duration" : 9988
        }
      }, {
        "uid" : "5c5b1531404e4bb1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/29//#testresult/5c5b1531404e4bb1",
        "status" : "passed",
        "time" : {
          "start" : 1716085585336,
          "stop" : 1716085593625,
          "duration" : 8289
        }
      }, {
        "uid" : "6dd5dad802ff27cd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/28//#testresult/6dd5dad802ff27cd",
        "status" : "passed",
        "time" : {
          "start" : 1715999009246,
          "stop" : 1715999016932,
          "duration" : 7686
        }
      }, {
        "uid" : "2001abc92503b857",
        "reportUrl" : "https://Nat754.github.io/PulseWave/27//#testresult/2001abc92503b857",
        "status" : "passed",
        "time" : {
          "start" : 1715912634446,
          "stop" : 1715912644567,
          "duration" : 10121
        }
      }, {
        "uid" : "bbb270277dc79a34",
        "reportUrl" : "https://Nat754.github.io/PulseWave/212//#testresult/bbb270277dc79a34",
        "status" : "passed",
        "time" : {
          "start" : 1715841540197,
          "stop" : 1715841549849,
          "duration" : 9652
        }
      }, {
        "uid" : "50d7bfd98be5b3b8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/26//#testresult/50d7bfd98be5b3b8",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1715826234154,
          "stop" : 1715826242468,
          "duration" : 8314
        }
      }, {
        "uid" : "7ab710e58a6c7969",
        "reportUrl" : "https://Nat754.github.io/PulseWave/25//#testresult/7ab710e58a6c7969",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1715740081972,
          "stop" : 1715740093129,
          "duration" : 11157
        }
      }, {
        "uid" : "15e41882f4b1a39e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/24//#testresult/15e41882f4b1a39e",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1715653420853,
          "stop" : 1715653431619,
          "duration" : 10766
        }
      }, {
        "uid" : "fe8aff346a2ea69a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/23//#testresult/fe8aff346a2ea69a",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715567156621,
          "stop" : 1715567163743,
          "duration" : 7122
        }
      }, {
        "uid" : "80d02363495b1a14",
        "reportUrl" : "https://Nat754.github.io/PulseWave/22//#testresult/80d02363495b1a14",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715480727526,
          "stop" : 1715480735233,
          "duration" : 7707
        }
      }, {
        "uid" : "6ef01720275d0b1d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/21//#testresult/6ef01720275d0b1d",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715394024756,
          "stop" : 1715394031206,
          "duration" : 6450
        }
      }, {
        "uid" : "103849c84cfaa3c3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/20//#testresult/103849c84cfaa3c3",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715308062300,
          "stop" : 1715308071653,
          "duration" : 9353
        }
      }, {
        "uid" : "941c58a462fd01f7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/19//#testresult/941c58a462fd01f7",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715221523092,
          "stop" : 1715221530581,
          "duration" : 7489
        }
      }, {
        "uid" : "32982412ed4ffcdf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/18//#testresult/32982412ed4ffcdf",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715134207970,
          "stop" : 1715134214396,
          "duration" : 6426
        }
      }, {
        "uid" : "8c5ab05c98b06ea5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/17//#testresult/8c5ab05c98b06ea5",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1715048862030,
          "stop" : 1715048868675,
          "duration" : 6645
        }
      }, {
        "uid" : "1018cba2ac87a26c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/16//#testresult/1018cba2ac87a26c",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714962262548,
          "stop" : 1714962269900,
          "duration" : 7352
        }
      }, {
        "uid" : "f996a5eaa023e393",
        "reportUrl" : "https://Nat754.github.io/PulseWave/15//#testresult/f996a5eaa023e393",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 2 column 1 (char 1)",
        "time" : {
          "start" : 1714875821846,
          "stop" : 1714875829386,
          "duration" : 7540
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9a3e73dfde6ac07b.json",
  "parameterValues" : [ ]
}