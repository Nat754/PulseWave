{
  "uid" : "e6c1821c09f9e578",
  "name" : "POST Активация пользователя с корректными данными",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_users_activation",
  "historyId" : "41cff5be4c2a881c5826f33ddc93442d",
  "time" : {
    "start" : 1716517366212,
    "stop" : 1716517369944,
    "duration" : 3732
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6ff2ca3290>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f6ff25e85c0>\n\n    @allure.title(\"POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/activation/'\n        user_token = use_api_base.get_activate_email_tokens(email1, password1)\n        response = requests.post(url, json=user_token)\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1716517354685,
      "stop" : 1716517354702,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1716517354703,
      "stop" : 1716517354703,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1716517366212,
      "stop" : 1716517366212,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f6ff2ca3290>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f6ff25e85c0>\n\n    @allure.title(\"POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/activation/'\n        user_token = use_api_base.get_activate_email_tokens(email1, password1)\n        response = requests.post(url, json=user_token)\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить токен активации пользователя на емайл",
      "time" : {
        "start" : 1716517366212,
        "stop" : 1716517368919,
        "duration" : 2707
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 200",
      "time" : {
        "start" : 1716517369944,
        "stop" : 1716517369944,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az770-693"
  }, {
    "name" : "thread",
    "value" : "2379-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 29,
        "passed" : 10,
        "unknown" : 0,
        "total" : 40
      },
      "items" : [ {
        "uid" : "bef00aab3595f1d1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/33//#testresult/bef00aab3595f1d1",
        "status" : "passed",
        "time" : {
          "start" : 1716430940216,
          "stop" : 1716430945163,
          "duration" : 4947
        }
      }, {
        "uid" : "3776f92bd4db7eeb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/32//#testresult/3776f92bd4db7eeb",
        "status" : "passed",
        "time" : {
          "start" : 1716344553874,
          "stop" : 1716344558101,
          "duration" : 4227
        }
      }, {
        "uid" : "ab68a9edac646f72",
        "reportUrl" : "https://Nat754.github.io/PulseWave/31//#testresult/ab68a9edac646f72",
        "status" : "passed",
        "time" : {
          "start" : 1716258104795,
          "stop" : 1716258108090,
          "duration" : 3295
        }
      }, {
        "uid" : "6af7c8fc1ef1ed88",
        "reportUrl" : "https://Nat754.github.io/PulseWave/30//#testresult/6af7c8fc1ef1ed88",
        "status" : "passed",
        "time" : {
          "start" : 1716171839494,
          "stop" : 1716171843930,
          "duration" : 4436
        }
      }, {
        "uid" : "5b05118ba8268909",
        "reportUrl" : "https://Nat754.github.io/PulseWave/29//#testresult/5b05118ba8268909",
        "status" : "passed",
        "time" : {
          "start" : 1716085454324,
          "stop" : 1716085458104,
          "duration" : 3780
        }
      }, {
        "uid" : "b66073b03cdeae1a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/28//#testresult/b66073b03cdeae1a",
        "status" : "passed",
        "time" : {
          "start" : 1715998885362,
          "stop" : 1715998888385,
          "duration" : 3023
        }
      }, {
        "uid" : "bfb9b8dbb8531ace",
        "reportUrl" : "https://Nat754.github.io/PulseWave/27//#testresult/bfb9b8dbb8531ace",
        "status" : "passed",
        "time" : {
          "start" : 1715912479066,
          "stop" : 1715912483318,
          "duration" : 4252
        }
      }, {
        "uid" : "16ea23cae8870f1c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/212//#testresult/16ea23cae8870f1c",
        "status" : "passed",
        "time" : {
          "start" : 1715841407846,
          "stop" : 1715841410707,
          "duration" : 2861
        }
      }, {
        "uid" : "f3716095b8f3d795",
        "reportUrl" : "https://Nat754.github.io/PulseWave/26//#testresult/f3716095b8f3d795",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1715826104880,
          "stop" : 1715826108316,
          "duration" : 3436
        }
      }, {
        "uid" : "45cd20d60ff64576",
        "reportUrl" : "https://Nat754.github.io/PulseWave/25//#testresult/45cd20d60ff64576",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1715739915511,
          "stop" : 1715739917868,
          "duration" : 2357
        }
      }, {
        "uid" : "ca62341ac082203",
        "reportUrl" : "https://Nat754.github.io/PulseWave/24//#testresult/ca62341ac082203",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1715653259703,
          "stop" : 1715653264178,
          "duration" : 4475
        }
      }, {
        "uid" : "47be6526d7d6c857",
        "reportUrl" : "https://Nat754.github.io/PulseWave/23//#testresult/47be6526d7d6c857",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1715567029347,
          "stop" : 1715567031644,
          "duration" : 2297
        }
      }, {
        "uid" : "24905d98ff48ef6c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/22//#testresult/24905d98ff48ef6c",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1715480583763,
          "stop" : 1715480586309,
          "duration" : 2546
        }
      }, {
        "uid" : "e0ab7cc77e305b9d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/21//#testresult/e0ab7cc77e305b9d",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1715393906142,
          "stop" : 1715393908215,
          "duration" : 2073
        }
      }, {
        "uid" : "5825249b84f650c1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/20//#testresult/5825249b84f650c1",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1715307902801,
          "stop" : 1715307905333,
          "duration" : 2532
        }
      }, {
        "uid" : "49320de1e312503c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/19//#testresult/49320de1e312503c",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1715221388898,
          "stop" : 1715221391072,
          "duration" : 2174
        }
      }, {
        "uid" : "c6c4052df65bea1e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/18//#testresult/c6c4052df65bea1e",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1715134087071,
          "stop" : 1715134088725,
          "duration" : 1654
        }
      }, {
        "uid" : "f49f10b0b4869628",
        "reportUrl" : "https://Nat754.github.io/PulseWave/17//#testresult/f49f10b0b4869628",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1715048735737,
          "stop" : 1715048737792,
          "duration" : 2055
        }
      }, {
        "uid" : "926df3e6eb1ab9b9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/16//#testresult/926df3e6eb1ab9b9",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1714962134294,
          "stop" : 1714962136730,
          "duration" : 2436
        }
      }, {
        "uid" : "94303bef6a945af",
        "reportUrl" : "https://Nat754.github.io/PulseWave/15//#testresult/94303bef6a945af",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1714875689423,
          "stop" : 1714875692336,
          "duration" : 2913
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e6c1821c09f9e578.json",
  "parameterValues" : [ ]
}