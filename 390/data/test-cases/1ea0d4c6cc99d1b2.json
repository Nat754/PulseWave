{
  "uid" : "1ea0d4c6cc99d1b2",
  "name" : "POST Регистрация пользователя без подтверждения подписки",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_create_user_no_subscriber",
  "historyId" : "65cde6c273276871256fcbcd8d2a7b23",
  "time" : {
    "start" : 1747332774375,
    "stop" : 1747332775229,
    "duration" : 854
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f74b299e8d0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f74b29dfef0>\n\n    @allure.title(\"POST Регистрация пользователя без подтверждения подписки\")\n    def test_post_create_user_no_subscriber(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER_NO_SUBSCRIBER)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1747332774375,
      "stop" : 1747332774375,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f74b299e8d0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f74b29dfef0>\n\n    @allure.title(\"POST Регистрация пользователя без подтверждения подписки\")\n    def test_post_create_user_no_subscriber(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER_NO_SUBSCRIBER)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1747332775229,
        "stop" : 1747332775229,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "pkrvmberfyhpb9w"
  }, {
    "name" : "thread",
    "value" : "2529-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 43,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 394,
        "unknown" : 0,
        "total" : 441
      },
      "items" : [ {
        "uid" : "f3c296ee28488eb0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/389//#testresult/f3c296ee28488eb0",
        "status" : "passed",
        "time" : {
          "start" : 1747260108765,
          "stop" : 1747260109734,
          "duration" : 969
        }
      }, {
        "uid" : "de9a8da226a8b760",
        "reportUrl" : "https://Nat754.github.io/PulseWave/386//#testresult/de9a8da226a8b760",
        "status" : "passed",
        "time" : {
          "start" : 1746987094215,
          "stop" : 1746987095248,
          "duration" : 1033
        }
      }, {
        "uid" : "63974ed2a561c273",
        "reportUrl" : "https://Nat754.github.io/PulseWave/385//#testresult/63974ed2a561c273",
        "status" : "passed",
        "time" : {
          "start" : 1746900668015,
          "stop" : 1746900668945,
          "duration" : 930
        }
      }, {
        "uid" : "296538a063346f5a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/384//#testresult/296538a063346f5a",
        "status" : "passed",
        "time" : {
          "start" : 1746814357282,
          "stop" : 1746814358164,
          "duration" : 882
        }
      }, {
        "uid" : "e57f533f8a8091f7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/383//#testresult/e57f533f8a8091f7",
        "status" : "passed",
        "time" : {
          "start" : 1746727973836,
          "stop" : 1746727974643,
          "duration" : 807
        }
      }, {
        "uid" : "aee647e19d9d66d9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/382//#testresult/aee647e19d9d66d9",
        "status" : "passed",
        "time" : {
          "start" : 1746641606442,
          "stop" : 1746641607334,
          "duration" : 892
        }
      }, {
        "uid" : "cf7c03ae03748d9f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/381//#testresult/cf7c03ae03748d9f",
        "status" : "passed",
        "time" : {
          "start" : 1746555178368,
          "stop" : 1746555179180,
          "duration" : 812
        }
      }, {
        "uid" : "6eddde801e9aa5c4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/380//#testresult/6eddde801e9aa5c4",
        "status" : "passed",
        "time" : {
          "start" : 1746468641724,
          "stop" : 1746468642613,
          "duration" : 889
        }
      }, {
        "uid" : "5cb9e6252516b48c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/379//#testresult/5cb9e6252516b48c",
        "status" : "passed",
        "time" : {
          "start" : 1746428420145,
          "stop" : 1746428421254,
          "duration" : 1109
        }
      }, {
        "uid" : "267570cf1e548e27",
        "reportUrl" : "https://Nat754.github.io/PulseWave/379//#testresult/267570cf1e548e27",
        "status" : "passed",
        "time" : {
          "start" : 1746422751348,
          "stop" : 1746422752376,
          "duration" : 1028
        }
      }, {
        "uid" : "9ed0ed1c9b166e39",
        "reportUrl" : "https://Nat754.github.io/PulseWave/379//#testresult/9ed0ed1c9b166e39",
        "status" : "passed",
        "time" : {
          "start" : 1746382262500,
          "stop" : 1746382263273,
          "duration" : 773
        }
      }, {
        "uid" : "9f61e6160e8036d8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/378//#testresult/9f61e6160e8036d8",
        "status" : "passed",
        "time" : {
          "start" : 1746295877631,
          "stop" : 1746295878584,
          "duration" : 953
        }
      }, {
        "uid" : "eb67d0d7a1cf7099",
        "reportUrl" : "https://Nat754.github.io/PulseWave/377//#testresult/eb67d0d7a1cf7099",
        "status" : "passed",
        "time" : {
          "start" : 1746209582845,
          "stop" : 1746209583830,
          "duration" : 985
        }
      }, {
        "uid" : "38497bc4904915fe",
        "reportUrl" : "https://Nat754.github.io/PulseWave/376//#testresult/38497bc4904915fe",
        "status" : "passed",
        "time" : {
          "start" : 1746123176474,
          "stop" : 1746123177481,
          "duration" : 1007
        }
      }, {
        "uid" : "538db23c0ce74248",
        "reportUrl" : "https://Nat754.github.io/PulseWave/375//#testresult/538db23c0ce74248",
        "status" : "passed",
        "time" : {
          "start" : 1746077855823,
          "stop" : 1746077856605,
          "duration" : 782
        }
      }, {
        "uid" : "43aba0c6ac6a1dc9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/374//#testresult/43aba0c6ac6a1dc9",
        "status" : "passed",
        "time" : {
          "start" : 1745950388581,
          "stop" : 1745950389496,
          "duration" : 915
        }
      }, {
        "uid" : "da87011a2997aa93",
        "reportUrl" : "https://Nat754.github.io/PulseWave/373//#testresult/da87011a2997aa93",
        "status" : "passed",
        "time" : {
          "start" : 1745864005752,
          "stop" : 1745864006833,
          "duration" : 1081
        }
      }, {
        "uid" : "8d01e83795d5de38",
        "reportUrl" : "https://Nat754.github.io/PulseWave/372//#testresult/8d01e83795d5de38",
        "status" : "passed",
        "time" : {
          "start" : 1745777442567,
          "stop" : 1745777443326,
          "duration" : 759
        }
      }, {
        "uid" : "cfa3a38e599b4563",
        "reportUrl" : "https://Nat754.github.io/PulseWave/371//#testresult/cfa3a38e599b4563",
        "status" : "passed",
        "time" : {
          "start" : 1745691049428,
          "stop" : 1745691050438,
          "duration" : 1010
        }
      }, {
        "uid" : "e7432952a7e9dc8a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/370//#testresult/e7432952a7e9dc8a",
        "status" : "passed",
        "time" : {
          "start" : 1745604780293,
          "stop" : 1745604781048,
          "duration" : 755
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1ea0d4c6cc99d1b2.json",
  "parameterValues" : [ ]
}