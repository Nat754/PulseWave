{
  "uid" : "87da1fa9d383d5c8",
  "name" : "2.2 POST Активация пользователя с корректными данными",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_users_activation",
  "historyId" : "41cff5be4c2a881c5826f33ddc93442d",
  "time" : {
    "start" : 1747505428641,
    "stop" : 1747526690562,
    "duration" : 21261921
  },
  "status" : "broken",
  "statusMessage" : "ConnectionResetError: [Errno 104] Connection reset by peer",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f04197049e0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f0419739d30>\n\n    @allure.title(\"2.2 POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/users/activation/'\n>       user_token = use_api_base.get_tokens_on_email(email1, password1, 'activate/')\n\ntests/test_api/test_api.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:69: in get_tokens_on_email\n    msg = self.read_email(e_mail, passwrd)\napi_testing/api_base.py:54: in read_email\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py:1315: in __init__\n    IMAP4.__init__(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py:205: in __init__\n    self.open(host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py:1328: in open\n    IMAP4.open(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py:315: in open\n    self.sock = self._create_socket(timeout)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py:1319: in _create_socket\n    return self.ssl_context.wrap_socket(sock,\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py:455: in wrap_socket\n    return self.sslsocket_class._create(\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py:1041: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=2, type=1, proto=6>, block = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ConnectionResetError: [Errno 104] Connection reset by peer\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py:1319: ConnectionResetError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1747505428641,
      "stop" : 1747505428641,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ConnectionResetError: [Errno 104] Connection reset by peer",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f04197049e0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f0419739d30>\n\n    @allure.title(\"2.2 POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/users/activation/'\n>       user_token = use_api_base.get_tokens_on_email(email1, password1, 'activate/')\n\ntests/test_api/test_api.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi_testing/api_base.py:69: in get_tokens_on_email\n    msg = self.read_email(e_mail, passwrd)\napi_testing/api_base.py:54: in read_email\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py:1315: in __init__\n    IMAP4.__init__(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py:205: in __init__\n    self.open(host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py:1328: in open\n    IMAP4.open(self, host, port, timeout)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py:315: in open\n    self.sock = self._create_socket(timeout)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py:1319: in _create_socket\n    return self.ssl_context.wrap_socket(sock,\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py:455: in wrap_socket\n    return self.sslsocket_class._create(\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py:1041: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=2, type=1, proto=6>, block = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ConnectionResetError: [Errno 104] Connection reset by peer\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py:1319: ConnectionResetError",
    "steps" : [ {
      "name" : "Получить токен активации пользователя на емайл",
      "time" : {
        "start" : 1747505428641,
        "stop" : 1747526690561,
        "duration" : 21261920
      },
      "status" : "broken",
      "statusMessage" : "ConnectionResetError: [Errno 104] Connection reset by peer\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 69, in get_tokens_on_email\n    msg = self.read_email(e_mail, passwrd)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 54, in read_email\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py\", line 1315, in __init__\n    IMAP4.__init__(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py\", line 205, in __init__\n    self.open(host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py\", line 1328, in open\n    IMAP4.open(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py\", line 315, in open\n    self.sock = self._create_socket(timeout)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py\", line 1319, in _create_socket\n    return self.ssl_context.wrap_socket(sock,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py\", line 455, in wrap_socket\n    return self.sslsocket_class._create(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py\", line 1041, in _create\n    self.do_handshake()\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py\", line 1319, in do_handshake\n    self._sslobj.do_handshake()\n",
      "steps" : [ {
        "name" : "Прочитать сообщение",
        "time" : {
          "start" : 1747505428641,
          "stop" : 1747526690545,
          "duration" : 21261904
        },
        "status" : "broken",
        "statusMessage" : "ConnectionResetError: [Errno 104] Connection reset by peer\n",
        "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 54, in read_email\n    mail = imaplib.IMAP4_SSL('imap.mail.ru')\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py\", line 1315, in __init__\n    IMAP4.__init__(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py\", line 205, in __init__\n    self.open(host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py\", line 1328, in open\n    IMAP4.open(self, host, port, timeout)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py\", line 315, in open\n    self.sock = self._create_socket(timeout)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/imaplib.py\", line 1319, in _create_socket\n    return self.ssl_context.wrap_socket(sock,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py\", line 455, in wrap_socket\n    return self.sslsocket_class._create(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py\", line 1041, in _create\n    self.do_handshake()\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/ssl.py\", line 1319, in do_handshake\n    self._sslobj.do_handshake()\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "e_mail",
          "value" : "'test_pulsewave0@mail.ru'"
        }, {
          "name" : "passwrd",
          "value" : "'5gA8g3cLYJxwPit07iRF'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "e_mail",
        "value" : "'test_pulsewave0@mail.ru'"
      }, {
        "name" : "passwrd",
        "value" : "'5gA8g3cLYJxwPit07iRF'"
      }, {
        "name" : "trigger",
        "value" : "'activate/'"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2675-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 13,
        "broken" : 30,
        "skipped" : 29,
        "passed" : 371,
        "unknown" : 0,
        "total" : 443
      },
      "items" : [ {
        "uid" : "9867cb7111bfd688",
        "reportUrl" : "https://Nat754.github.io/PulseWave/390//#testresult/9867cb7111bfd688",
        "status" : "passed",
        "time" : {
          "start" : 1747332718326,
          "stop" : 1747332721120,
          "duration" : 2794
        }
      }, {
        "uid" : "d9a2fd907c3485fd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/389//#testresult/d9a2fd907c3485fd",
        "status" : "broken",
        "statusDetails" : "ConnectionResetError: [Errno 104] Connection reset by peer",
        "time" : {
          "start" : 1747246278641,
          "stop" : 1747260045773,
          "duration" : 13767132
        }
      }, {
        "uid" : "f6df9d69ae9f256a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/388//#testresult/f6df9d69ae9f256a",
        "status" : "broken",
        "statusDetails" : "imaplib.IMAP4.error: b'Service temporarily unavailable'",
        "time" : {
          "start" : 1747159953313,
          "stop" : 1747172697327,
          "duration" : 12744014
        }
      }, {
        "uid" : "af6cedb6d810588b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/386//#testresult/af6cedb6d810588b",
        "status" : "passed",
        "time" : {
          "start" : 1746987018135,
          "stop" : 1746987022552,
          "duration" : 4417
        }
      }, {
        "uid" : "7c2edeee17735592",
        "reportUrl" : "https://Nat754.github.io/PulseWave/385//#testresult/7c2edeee17735592",
        "status" : "passed",
        "time" : {
          "start" : 1746900592230,
          "stop" : 1746900597061,
          "duration" : 4831
        }
      }, {
        "uid" : "db3a1f14aa4c098",
        "reportUrl" : "https://Nat754.github.io/PulseWave/384//#testresult/db3a1f14aa4c098",
        "status" : "passed",
        "time" : {
          "start" : 1746814288072,
          "stop" : 1746814292115,
          "duration" : 4043
        }
      }, {
        "uid" : "8ca571ceb7d101c2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/383//#testresult/8ca571ceb7d101c2",
        "status" : "passed",
        "time" : {
          "start" : 1746727916608,
          "stop" : 1746727919486,
          "duration" : 2878
        }
      }, {
        "uid" : "a948b28f9718bfd1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/382//#testresult/a948b28f9718bfd1",
        "status" : "passed",
        "time" : {
          "start" : 1746641539718,
          "stop" : 1746641542823,
          "duration" : 3105
        }
      }, {
        "uid" : "8401f321031555ac",
        "reportUrl" : "https://Nat754.github.io/PulseWave/381//#testresult/8401f321031555ac",
        "status" : "passed",
        "time" : {
          "start" : 1746555111461,
          "stop" : 1746555115162,
          "duration" : 3701
        }
      }, {
        "uid" : "5641d8813dfda3f8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/380//#testresult/5641d8813dfda3f8",
        "status" : "passed",
        "time" : {
          "start" : 1746468574288,
          "stop" : 1746468578212,
          "duration" : 3924
        }
      }, {
        "uid" : "bec35bd4cad6f4ed",
        "reportUrl" : "https://Nat754.github.io/PulseWave/379//#testresult/bec35bd4cad6f4ed",
        "status" : "passed",
        "time" : {
          "start" : 1746428323118,
          "stop" : 1746428326902,
          "duration" : 3784
        }
      }, {
        "uid" : "8410574926000cdc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/379//#testresult/8410574926000cdc",
        "status" : "passed",
        "time" : {
          "start" : 1746422672309,
          "stop" : 1746422676787,
          "duration" : 4478
        }
      }, {
        "uid" : "5ae0cff047cb3e58",
        "reportUrl" : "https://Nat754.github.io/PulseWave/379//#testresult/5ae0cff047cb3e58",
        "status" : "passed",
        "time" : {
          "start" : 1746382208385,
          "stop" : 1746382211135,
          "duration" : 2750
        }
      }, {
        "uid" : "83184a7d87fb426",
        "reportUrl" : "https://Nat754.github.io/PulseWave/378//#testresult/83184a7d87fb426",
        "status" : "passed",
        "time" : {
          "start" : 1746295807685,
          "stop" : 1746295811291,
          "duration" : 3606
        }
      }, {
        "uid" : "83f9d6e7d9fa78f5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/377//#testresult/83f9d6e7d9fa78f5",
        "status" : "passed",
        "time" : {
          "start" : 1746209495822,
          "stop" : 1746209502482,
          "duration" : 6660
        }
      }, {
        "uid" : "87e5dc43d47eab9d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/376//#testresult/87e5dc43d47eab9d",
        "status" : "passed",
        "time" : {
          "start" : 1746123098200,
          "stop" : 1746123102697,
          "duration" : 4497
        }
      }, {
        "uid" : "9e29fa709fcdc829",
        "reportUrl" : "https://Nat754.github.io/PulseWave/375//#testresult/9e29fa709fcdc829",
        "status" : "passed",
        "time" : {
          "start" : 1746077788329,
          "stop" : 1746077794948,
          "duration" : 6619
        }
      }, {
        "uid" : "d7d8b5815c01c1ff",
        "reportUrl" : "https://Nat754.github.io/PulseWave/374//#testresult/d7d8b5815c01c1ff",
        "status" : "passed",
        "time" : {
          "start" : 1745950326438,
          "stop" : 1745950329785,
          "duration" : 3347
        }
      }, {
        "uid" : "2b4fd83fde38758b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/373//#testresult/2b4fd83fde38758b",
        "status" : "passed",
        "time" : {
          "start" : 1745863939926,
          "stop" : 1745863943015,
          "duration" : 3089
        }
      }, {
        "uid" : "602ff0624ce70ac4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/372//#testresult/602ff0624ce70ac4",
        "status" : "passed",
        "time" : {
          "start" : 1745777383009,
          "stop" : 1745777386057,
          "duration" : 3048
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "87da1fa9d383d5c8.json",
  "parameterValues" : [ ]
}