{
  "uid" : "b127a796885765fc",
  "name" : "POST Регистрация ранее зарегистрированного пользователя",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_create_auth_user",
  "historyId" : "ce220593eb18c8976b98ac28948b279f",
  "time" : {
    "start" : 1749409882555,
    "stop" : 1749409883692,
    "duration" : 1137
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 400. Actual: 201",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f5192fe7d40>\n\n    @allure.title(\"POST Регистрация ранее зарегистрированного пользователя\")\n    def test_post_create_auth_user(self):\n        url = f'{self.link.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER)\n>       Assertions.assert_status_code(response, self.code.STATUS_400)\n\ntests/test_api/test_api.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [201]>, expected_status_code = 400\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 400. Actual: 201\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1749406210628,
      "stop" : 1749406210628,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1749406210613,
      "stop" : 1749406210628,
      "duration" : 15
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 400. Actual: 201",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f5192fe7d40>\n\n    @allure.title(\"POST Регистрация ранее зарегистрированного пользователя\")\n    def test_post_create_auth_user(self):\n        url = f'{self.link.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER)\n>       Assertions.assert_status_code(response, self.code.STATUS_400)\n\ntests/test_api/test_api.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [201]>, expected_status_code = 400\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 400. Actual: 201\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 400",
      "time" : {
        "start" : 1749409883692,
        "stop" : 1749409883692,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 400. Actual: 201\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 18,
        "skipped" : 0,
        "passed" : 449,
        "unknown" : 0,
        "total" : 468
      },
      "items" : [ {
        "uid" : "26a1de1770b588b7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/413//#testresult/26a1de1770b588b7",
        "status" : "passed",
        "time" : {
          "start" : 1749319848563,
          "stop" : 1749319849442,
          "duration" : 879
        }
      }, {
        "uid" : "6b6f363d27617102",
        "reportUrl" : "https://Nat754.github.io/PulseWave/412//#testresult/6b6f363d27617102",
        "status" : "passed",
        "time" : {
          "start" : 1749233548155,
          "stop" : 1749233549146,
          "duration" : 991
        }
      }, {
        "uid" : "f762c3ba4af11c88",
        "reportUrl" : "https://Nat754.github.io/PulseWave/410//#testresult/f762c3ba4af11c88",
        "status" : "passed",
        "time" : {
          "start" : 1749060734338,
          "stop" : 1749060734910,
          "duration" : 572
        }
      }, {
        "uid" : "8639e51fcb90049b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/409//#testresult/8639e51fcb90049b",
        "status" : "passed",
        "time" : {
          "start" : 1748974368866,
          "stop" : 1748974369656,
          "duration" : 790
        }
      }, {
        "uid" : "c3c7024bb1aa214f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/408//#testresult/c3c7024bb1aa214f",
        "status" : "passed",
        "time" : {
          "start" : 1748887941040,
          "stop" : 1748887942075,
          "duration" : 1035
        }
      }, {
        "uid" : "450af5182743cc13",
        "reportUrl" : "https://Nat754.github.io/PulseWave/233//#testresult/450af5182743cc13",
        "status" : "passed",
        "time" : {
          "start" : 1748802313519,
          "stop" : 1748802314130,
          "duration" : 611
        }
      }, {
        "uid" : "a991dbce7761d51e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/407//#testresult/a991dbce7761d51e",
        "status" : "passed",
        "time" : {
          "start" : 1748801463478,
          "stop" : 1748801464064,
          "duration" : 586
        }
      }, {
        "uid" : "1bbadf45ae8e2e32",
        "reportUrl" : "https://Nat754.github.io/PulseWave/232//#testresult/1bbadf45ae8e2e32",
        "status" : "passed",
        "time" : {
          "start" : 1748800089751,
          "stop" : 1748800090252,
          "duration" : 501
        }
      }, {
        "uid" : "db6344dd6d4c3a89",
        "reportUrl" : "https://Nat754.github.io/PulseWave/406//#testresult/db6344dd6d4c3a89",
        "status" : "passed",
        "time" : {
          "start" : 1748796624539,
          "stop" : 1748796625381,
          "duration" : 842
        }
      }, {
        "uid" : "6a2b51d72fddf197",
        "reportUrl" : "https://Nat754.github.io/PulseWave/406//#testresult/6a2b51d72fddf197",
        "status" : "passed",
        "time" : {
          "start" : 1748715045761,
          "stop" : 1748715046386,
          "duration" : 625
        }
      }, {
        "uid" : "faf117f37bcede5b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/405//#testresult/faf117f37bcede5b",
        "status" : "passed",
        "time" : {
          "start" : 1748628730241,
          "stop" : 1748628731391,
          "duration" : 1150
        }
      }, {
        "uid" : "ce903d3835239876",
        "reportUrl" : "https://Nat754.github.io/PulseWave/404//#testresult/ce903d3835239876",
        "status" : "passed",
        "time" : {
          "start" : 1748542340761,
          "stop" : 1748542341919,
          "duration" : 1158
        }
      }, {
        "uid" : "4861e57773f20ff9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/403//#testresult/4861e57773f20ff9",
        "status" : "passed",
        "time" : {
          "start" : 1748455898862,
          "stop" : 1748455899865,
          "duration" : 1003
        }
      }, {
        "uid" : "b8ca73a7db239227",
        "reportUrl" : "https://Nat754.github.io/PulseWave/402//#testresult/b8ca73a7db239227",
        "status" : "passed",
        "time" : {
          "start" : 1748369448573,
          "stop" : 1748369449338,
          "duration" : 765
        }
      }, {
        "uid" : "28f9b9d6396f1d6e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/401//#testresult/28f9b9d6396f1d6e",
        "status" : "passed",
        "time" : {
          "start" : 1748283101637,
          "stop" : 1748283102369,
          "duration" : 732
        }
      }, {
        "uid" : "3fa2e2d8e5aad79c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/400//#testresult/3fa2e2d8e5aad79c",
        "status" : "passed",
        "time" : {
          "start" : 1748196632171,
          "stop" : 1748196633250,
          "duration" : 1079
        }
      }, {
        "uid" : "1a256eff1fd1464f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/399//#testresult/1a256eff1fd1464f",
        "status" : "passed",
        "time" : {
          "start" : 1748110247440,
          "stop" : 1748110248066,
          "duration" : 626
        }
      }, {
        "uid" : "3f321777fcebdce8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/398//#testresult/3f321777fcebdce8",
        "status" : "passed",
        "time" : {
          "start" : 1748023882420,
          "stop" : 1748023883201,
          "duration" : 781
        }
      }, {
        "uid" : "ea2025e0193889cf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/397//#testresult/ea2025e0193889cf",
        "status" : "passed",
        "time" : {
          "start" : 1747937550167,
          "stop" : 1747937550917,
          "duration" : 750
        }
      }, {
        "uid" : "85ae4a85a83d7f0e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/396//#testresult/85ae4a85a83d7f0e",
        "status" : "passed",
        "time" : {
          "start" : 1747851135774,
          "stop" : 1747851137010,
          "duration" : 1236
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b127a796885765fc.json",
  "parameterValues" : [ ]
}