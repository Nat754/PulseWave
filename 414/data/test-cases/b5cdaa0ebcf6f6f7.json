{
  "uid" : "b5cdaa0ebcf6f6f7",
  "name" : "POST Регистрация пользователя без подтверждения подписки",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_create_user_no_subscriber",
  "historyId" : "65cde6c273276871256fcbcd8d2a7b23",
  "time" : {
    "start" : 1749409900244,
    "stop" : 1749409900751,
    "duration" : 507
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f5192fe9580>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f51930501a0>\n\n    @allure.title(\"POST Регистрация пользователя без подтверждения подписки\")\n    def test_post_create_user_no_subscriber(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER_NO_SUBSCRIBER)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1749409900243,
      "stop" : 1749409900243,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1749406210628,
      "stop" : 1749406210628,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1749406210613,
      "stop" : 1749406210628,
      "duration" : 15
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f5192fe9580>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f51930501a0>\n\n    @allure.title(\"POST Регистрация пользователя без подтверждения подписки\")\n    def test_post_create_user_no_subscriber(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER_NO_SUBSCRIBER)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/test_api/test_api.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1749409900751,
        "stop" : 1749409900751,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 44,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 418,
        "unknown" : 0,
        "total" : 466
      },
      "items" : [ {
        "uid" : "26b71dad35a5ba1b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/413//#testresult/26b71dad35a5ba1b",
        "status" : "passed",
        "time" : {
          "start" : 1749319892382,
          "stop" : 1749319893129,
          "duration" : 747
        }
      }, {
        "uid" : "f30e785dfa87a6f0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/412//#testresult/f30e785dfa87a6f0",
        "status" : "passed",
        "time" : {
          "start" : 1749233591865,
          "stop" : 1749233592851,
          "duration" : 986
        }
      }, {
        "uid" : "144ca65362054903",
        "reportUrl" : "https://Nat754.github.io/PulseWave/410//#testresult/144ca65362054903",
        "status" : "passed",
        "time" : {
          "start" : 1749060776851,
          "stop" : 1749060777704,
          "duration" : 853
        }
      }, {
        "uid" : "f9e610d46b2ff414",
        "reportUrl" : "https://Nat754.github.io/PulseWave/409//#testresult/f9e610d46b2ff414",
        "status" : "passed",
        "time" : {
          "start" : 1748974423839,
          "stop" : 1748974424866,
          "duration" : 1027
        }
      }, {
        "uid" : "4156f91990a8feb6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/408//#testresult/4156f91990a8feb6",
        "status" : "passed",
        "time" : {
          "start" : 1748887990161,
          "stop" : 1748887991033,
          "duration" : 872
        }
      }, {
        "uid" : "9850c09b85eaf829",
        "reportUrl" : "https://Nat754.github.io/PulseWave/233//#testresult/9850c09b85eaf829",
        "status" : "passed",
        "time" : {
          "start" : 1748802365254,
          "stop" : 1748802366099,
          "duration" : 845
        }
      }, {
        "uid" : "36c92f63a7f742d9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/407//#testresult/36c92f63a7f742d9",
        "status" : "passed",
        "time" : {
          "start" : 1748801505939,
          "stop" : 1748801506764,
          "duration" : 825
        }
      }, {
        "uid" : "cb2e22ba2437fdf6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/232//#testresult/cb2e22ba2437fdf6",
        "status" : "passed",
        "time" : {
          "start" : 1748800132068,
          "stop" : 1748800133158,
          "duration" : 1090
        }
      }, {
        "uid" : "94d79aa5c7bef7e1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/406//#testresult/94d79aa5c7bef7e1",
        "status" : "passed",
        "time" : {
          "start" : 1748796665714,
          "stop" : 1748796666542,
          "duration" : 828
        }
      }, {
        "uid" : "913fb7b47cf1dbaf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/406//#testresult/913fb7b47cf1dbaf",
        "status" : "passed",
        "time" : {
          "start" : 1748715089853,
          "stop" : 1748715090632,
          "duration" : 779
        }
      }, {
        "uid" : "2f25b316ae80e2a4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/405//#testresult/2f25b316ae80e2a4",
        "status" : "passed",
        "time" : {
          "start" : 1748628790771,
          "stop" : 1748628791833,
          "duration" : 1062
        }
      }, {
        "uid" : "e9925620875e8e3e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/404//#testresult/e9925620875e8e3e",
        "status" : "passed",
        "time" : {
          "start" : 1748542397497,
          "stop" : 1748542398561,
          "duration" : 1064
        }
      }, {
        "uid" : "9638459002f0007d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/403//#testresult/9638459002f0007d",
        "status" : "passed",
        "time" : {
          "start" : 1748455957744,
          "stop" : 1748455958589,
          "duration" : 845
        }
      }, {
        "uid" : "c6b1f786edd922aa",
        "reportUrl" : "https://Nat754.github.io/PulseWave/402//#testresult/c6b1f786edd922aa",
        "status" : "passed",
        "time" : {
          "start" : 1748369488984,
          "stop" : 1748369490781,
          "duration" : 1797
        }
      }, {
        "uid" : "a345e42a0e4752ac",
        "reportUrl" : "https://Nat754.github.io/PulseWave/401//#testresult/a345e42a0e4752ac",
        "status" : "passed",
        "time" : {
          "start" : 1748283145438,
          "stop" : 1748283146241,
          "duration" : 803
        }
      }, {
        "uid" : "5e24c445c79523d4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/400//#testresult/5e24c445c79523d4",
        "status" : "passed",
        "time" : {
          "start" : 1748196687484,
          "stop" : 1748196688370,
          "duration" : 886
        }
      }, {
        "uid" : "b7a6684803b938f0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/399//#testresult/b7a6684803b938f0",
        "status" : "passed",
        "time" : {
          "start" : 1748110297591,
          "stop" : 1748110298471,
          "duration" : 880
        }
      }, {
        "uid" : "e708326a00433a84",
        "reportUrl" : "https://Nat754.github.io/PulseWave/398//#testresult/e708326a00433a84",
        "status" : "passed",
        "time" : {
          "start" : 1748023945495,
          "stop" : 1748023946588,
          "duration" : 1093
        }
      }, {
        "uid" : "f49f4d6121feb1cf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/397//#testresult/f49f4d6121feb1cf",
        "status" : "passed",
        "time" : {
          "start" : 1747937609138,
          "stop" : 1747937610177,
          "duration" : 1039
        }
      }, {
        "uid" : "5ba4e62af1af8ecc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/396//#testresult/5ba4e62af1af8ecc",
        "status" : "passed",
        "time" : {
          "start" : 1747851177836,
          "stop" : 1747851178566,
          "duration" : 730
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b5cdaa0ebcf6f6f7.json",
  "parameterValues" : [ ]
}