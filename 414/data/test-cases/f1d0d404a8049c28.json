{
  "uid" : "f1d0d404a8049c28",
  "name" : "POST Создать пару токенов access и refresh",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_auth_jwt_create",
  "historyId" : "3a2538cb31301304b345f32dcb0f93b0",
  "time" : {
    "start" : 1749409883701,
    "stop" : 1749409884836,
    "duration" : 1135
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 401",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f5192fe5e80>\n\n    @allure.title(\"POST Создать пару токенов access и refresh\")\n    def test_post_auth_jwt_create(self):\n        url = f'{self.link.BASE_URL}auth/jwt/create/'\n        response = requests.post(url, json={\"email\": email1, \"password\": password0})\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 401\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1749406210628,
      "stop" : 1749406210628,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1749406210613,
      "stop" : 1749406210628,
      "duration" : 15
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 401",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f5192fe5e80>\n\n    @allure.title(\"POST Создать пару токенов access и refresh\")\n    def test_post_auth_jwt_create(self):\n        url = f'{self.link.BASE_URL}auth/jwt/create/'\n        response = requests.post(url, json={\"email\": email1, \"password\": password0})\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 401\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 200",
      "time" : {
        "start" : 1749409884835,
        "stop" : 1749409884835,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 401\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 16,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 448,
        "unknown" : 0,
        "total" : 468
      },
      "items" : [ {
        "uid" : "88f004adb8fb9951",
        "reportUrl" : "https://Nat754.github.io/PulseWave/413//#testresult/88f004adb8fb9951",
        "status" : "passed",
        "time" : {
          "start" : 1749319849443,
          "stop" : 1749319850201,
          "duration" : 758
        }
      }, {
        "uid" : "d935b6389176ae22",
        "reportUrl" : "https://Nat754.github.io/PulseWave/412//#testresult/d935b6389176ae22",
        "status" : "passed",
        "time" : {
          "start" : 1749233549147,
          "stop" : 1749233549976,
          "duration" : 829
        }
      }, {
        "uid" : "425ebe7567fd6932",
        "reportUrl" : "https://Nat754.github.io/PulseWave/410//#testresult/425ebe7567fd6932",
        "status" : "passed",
        "time" : {
          "start" : 1749060734911,
          "stop" : 1749060735749,
          "duration" : 838
        }
      }, {
        "uid" : "834a0fb8b9eb80dd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/409//#testresult/834a0fb8b9eb80dd",
        "status" : "passed",
        "time" : {
          "start" : 1748974369657,
          "stop" : 1748974370670,
          "duration" : 1013
        }
      }, {
        "uid" : "93152d8fa3a96bf9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/408//#testresult/93152d8fa3a96bf9",
        "status" : "passed",
        "time" : {
          "start" : 1748887942076,
          "stop" : 1748887942958,
          "duration" : 882
        }
      }, {
        "uid" : "3bb7709817fe00bd",
        "reportUrl" : "https://Nat754.github.io/PulseWave/233//#testresult/3bb7709817fe00bd",
        "status" : "passed",
        "time" : {
          "start" : 1748802314131,
          "stop" : 1748802314859,
          "duration" : 728
        }
      }, {
        "uid" : "e7812579fdec1859",
        "reportUrl" : "https://Nat754.github.io/PulseWave/407//#testresult/e7812579fdec1859",
        "status" : "passed",
        "time" : {
          "start" : 1748801464066,
          "stop" : 1748801465362,
          "duration" : 1296
        }
      }, {
        "uid" : "e28111b0b5a4a23f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/232//#testresult/e28111b0b5a4a23f",
        "status" : "passed",
        "time" : {
          "start" : 1748800090254,
          "stop" : 1748800091224,
          "duration" : 970
        }
      }, {
        "uid" : "900beb514b76689f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/406//#testresult/900beb514b76689f",
        "status" : "passed",
        "time" : {
          "start" : 1748796625383,
          "stop" : 1748796626565,
          "duration" : 1182
        }
      }, {
        "uid" : "1490e70260764396",
        "reportUrl" : "https://Nat754.github.io/PulseWave/406//#testresult/1490e70260764396",
        "status" : "passed",
        "time" : {
          "start" : 1748715046387,
          "stop" : 1748715047491,
          "duration" : 1104
        }
      }, {
        "uid" : "f638b763978c6f07",
        "reportUrl" : "https://Nat754.github.io/PulseWave/405//#testresult/f638b763978c6f07",
        "status" : "passed",
        "time" : {
          "start" : 1748628731393,
          "stop" : 1748628732966,
          "duration" : 1573
        }
      }, {
        "uid" : "af2fee4cb3ae4aff",
        "reportUrl" : "https://Nat754.github.io/PulseWave/404//#testresult/af2fee4cb3ae4aff",
        "status" : "passed",
        "time" : {
          "start" : 1748542341921,
          "stop" : 1748542343563,
          "duration" : 1642
        }
      }, {
        "uid" : "3b45ba8dc6ea0703",
        "reportUrl" : "https://Nat754.github.io/PulseWave/403//#testresult/3b45ba8dc6ea0703",
        "status" : "passed",
        "time" : {
          "start" : 1748455899867,
          "stop" : 1748455900727,
          "duration" : 860
        }
      }, {
        "uid" : "5862b280a300cd4d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/402//#testresult/5862b280a300cd4d",
        "status" : "passed",
        "time" : {
          "start" : 1748369449340,
          "stop" : 1748369450380,
          "duration" : 1040
        }
      }, {
        "uid" : "30ff7fb2f0e33088",
        "reportUrl" : "https://Nat754.github.io/PulseWave/401//#testresult/30ff7fb2f0e33088",
        "status" : "passed",
        "time" : {
          "start" : 1748283102371,
          "stop" : 1748283103122,
          "duration" : 751
        }
      }, {
        "uid" : "43a26b617fe02ba8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/400//#testresult/43a26b617fe02ba8",
        "status" : "passed",
        "time" : {
          "start" : 1748196633251,
          "stop" : 1748196634144,
          "duration" : 893
        }
      }, {
        "uid" : "5262dc146efa8d18",
        "reportUrl" : "https://Nat754.github.io/PulseWave/399//#testresult/5262dc146efa8d18",
        "status" : "passed",
        "time" : {
          "start" : 1748110248068,
          "stop" : 1748110249031,
          "duration" : 963
        }
      }, {
        "uid" : "13d7a446b71253cb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/398//#testresult/13d7a446b71253cb",
        "status" : "passed",
        "time" : {
          "start" : 1748023883202,
          "stop" : 1748023884815,
          "duration" : 1613
        }
      }, {
        "uid" : "a18045838df9a57b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/397//#testresult/a18045838df9a57b",
        "status" : "passed",
        "time" : {
          "start" : 1747937550918,
          "stop" : 1747937552026,
          "duration" : 1108
        }
      }, {
        "uid" : "c233acabed18c719",
        "reportUrl" : "https://Nat754.github.io/PulseWave/396//#testresult/c233acabed18c719",
        "status" : "passed",
        "time" : {
          "start" : 1747851137011,
          "stop" : 1747851138145,
          "duration" : 1134
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f1d0d404a8049c28.json",
  "parameterValues" : [ ]
}