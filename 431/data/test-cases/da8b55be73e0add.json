{
  "uid" : "da8b55be73e0add",
  "name" : "3.2, 3.2.1 Восстановить пароль на корректный емайл",
  "fullName" : "tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage#test_recovery_password_to_fill_correct_email",
  "historyId" : "3fbb91d2b204c3d1abb80d32ac377e08",
  "time" : {
    "start" : 1750875658044,
    "stop" : 1750875665620,
    "duration" : 7576
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.55); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x559527b7529a <unknown>\n#1 0x5595275e1040 <unknown>\n#2 0x5595275e7cd8 <unknown>\n#3 0x5595275ea847 <unknown>\n#4 0x55952767faae <unknown>\n#5 0x559527658692 <unknown>\n#6 0x55952767eace <unknown>\n#7 0x559527658463 <unknown>\n#8 0x559527624c55 <unknown>\n#9 0x5595276258c1 <unknown>\n#10 0x559527b3a1bb <unknown>\n#11 0x559527b3e0c9 <unknown>\n#12 0x559527b22a39 <unknown>\n#13 0x559527b3ec78 <unknown>\n#14 0x559527b076bf <unknown>\n#15 0x559527b62948 <unknown>\n#16 0x559527b62b26 <unknown>\n#17 0x559527b74176 <unknown>\n#18 0x7fb1aca9caa4 <unknown>\n#19 0x7fb1acb29c3c <unknown>",
  "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7f7fae07d7c0>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7f7fae0b5ee0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9ba3ef38c01e5a57cdb920acd964b8f0\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:41: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:61: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7fae0b71a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#17 0x559527b74176 \\\\u003Cunknown>\\\\n#18 0x7fb1aca9caa4 \\\\u003Cunknown>\\\\n#19 0x7fb1acb29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=137.0.7151.55); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x559527b7529a <unknown>\nE       #1 0x5595275e1040 <unknown>\nE       #2 0x5595275e7cd8 <unknown>\nE       #3 0x5595275ea847 <unknown>\nE       #4 0x55952767faae <unknown>\nE       #5 0x559527658692 <unknown>\nE       #6 0x55952767eace <unknown>\nE       #7 0x559527658463 <unknown>\nE       #8 0x559527624c55 <unknown>\nE       #9 0x5595276258c1 <unknown>\nE       #10 0x559527b3a1bb <unknown>\nE       #11 0x559527b3e0c9 <unknown>\nE       #12 0x559527b22a39 <unknown>\nE       #13 0x559527b3ec78 <unknown>\nE       #14 0x559527b076bf <unknown>\nE       #15 0x559527b62948 <unknown>\nE       #16 0x559527b62b26 <unknown>\nE       #17 0x559527b74176 <unknown>\nE       #18 0x7fb1aca9caa4 <unknown>\nE       #19 0x7fb1acb29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "recovery_page_open",
    "time" : {
      "start" : 1750875655633,
      "stop" : 1750875658044,
      "duration" : 2411
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1750875657939,
        "stop" : 1750875657971,
        "duration" : 32
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1750875163228,
      "stop" : 1750875163228,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1750875163213,
      "stop" : 1750875163228,
      "duration" : 15
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1750875655280,
      "stop" : 1750875655633,
      "duration" : 353
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.55); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x559527b7529a <unknown>\n#1 0x5595275e1040 <unknown>\n#2 0x5595275e7cd8 <unknown>\n#3 0x5595275ea847 <unknown>\n#4 0x55952767faae <unknown>\n#5 0x559527658692 <unknown>\n#6 0x55952767eace <unknown>\n#7 0x559527658463 <unknown>\n#8 0x559527624c55 <unknown>\n#9 0x5595276258c1 <unknown>\n#10 0x559527b3a1bb <unknown>\n#11 0x559527b3e0c9 <unknown>\n#12 0x559527b22a39 <unknown>\n#13 0x559527b3ec78 <unknown>\n#14 0x559527b076bf <unknown>\n#15 0x559527b62948 <unknown>\n#16 0x559527b62b26 <unknown>\n#17 0x559527b74176 <unknown>\n#18 0x7fb1aca9caa4 <unknown>\n#19 0x7fb1acb29c3c <unknown>",
    "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7f7fae07d7c0>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7f7fae0b5ee0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9ba3ef38c01e5a57cdb920acd964b8f0\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:41: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:61: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7fae0b71a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#17 0x559527b74176 \\\\u003Cunknown>\\\\n#18 0x7fb1aca9caa4 \\\\u003Cunknown>\\\\n#19 0x7fb1acb29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=137.0.7151.55); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x559527b7529a <unknown>\nE       #1 0x5595275e1040 <unknown>\nE       #2 0x5595275e7cd8 <unknown>\nE       #3 0x5595275ea847 <unknown>\nE       #4 0x55952767faae <unknown>\nE       #5 0x559527658692 <unknown>\nE       #6 0x55952767eace <unknown>\nE       #7 0x559527658463 <unknown>\nE       #8 0x559527624c55 <unknown>\nE       #9 0x5595276258c1 <unknown>\nE       #10 0x559527b3a1bb <unknown>\nE       #11 0x559527b3e0c9 <unknown>\nE       #12 0x559527b22a39 <unknown>\nE       #13 0x559527b3ec78 <unknown>\nE       #14 0x559527b076bf <unknown>\nE       #15 0x559527b62948 <unknown>\nE       #16 0x559527b62b26 <unknown>\nE       #17 0x559527b74176 <unknown>\nE       #18 0x7fb1aca9caa4 <unknown>\nE       #19 0x7fb1acb29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Заполнить поле емайл",
      "time" : {
        "start" : 1750875658045,
        "stop" : 1750875658141,
        "duration" : 96
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Продолжить'",
      "time" : {
        "start" : 1750875658141,
        "stop" : 1750875658239,
        "duration" : 98
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить ссылку для смены пароля на email",
      "time" : {
        "start" : 1750875658239,
        "stop" : 1750875664459,
        "duration" : 6220
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Прочитать сообщение",
        "time" : {
          "start" : 1750875658239,
          "stop" : 1750875664459,
          "duration" : 6220
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "e_mail",
          "value" : "'tester_pulsewave@mail.ru'"
        }, {
          "name" : "passwrd",
          "value" : "'xaM2xjxRLvrj71pDpSzL'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Ввести пароль в поле пароль",
      "time" : {
        "start" : 1750875664782,
        "stop" : 1750875664861,
        "duration" : 79
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ввести пароль в поле подтверждение пароля",
      "time" : {
        "start" : 1750875664861,
        "stop" : 1750875664927,
        "duration" : 66
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Сохранить пароль'",
      "time" : {
        "start" : 1750875664927,
        "stop" : 1750875665041,
        "duration" : 114
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации",
      "time" : {
        "start" : 1750875665042,
        "stop" : 1750875665618,
        "duration" : 576
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.55); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x559527b7529a <unknown>\n#1 0x5595275e1040 <unknown>\n#2 0x5595275e7cd8 <unknown>\n#3 0x5595275ea847 <unknown>\n#4 0x55952767faae <unknown>\n#5 0x559527658692 <unknown>\n#6 0x55952767eace <unknown>\n#7 0x559527658463 <unknown>\n#8 0x559527624c55 <unknown>\n#9 0x5595276258c1 <unknown>\n#10 0x559527b3a1bb <unknown>\n#11 0x559527b3e0c9 <unknown>\n#12 0x559527b22a39 <unknown>\n#13 0x559527b3ec78 <unknown>\n#14 0x559527b076bf <unknown>\n#15 0x559527b62948 <unknown>\n#16 0x559527b62b26 <unknown>\n#17 0x559527b74176 <unknown>\n#18 0x7fb1aca9caa4 <unknown>\n#19 0x7fb1acb29c3c <unknown>\n\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_password_recovery/test_password_recovery.py\", line 68, in test_recovery_password_to_fill_correct_email\n    recovery_page_open.click_resume_button()\n  File \"/home/runner/work/PulseWave/PulseWave/pages/password_recovery_page.py\", line 41, in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/pages/base_page.py\", line 61, in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 364, in _predicate\n    element = visibility_of(target)(driver)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 173, in _predicate\n    return _element_if_visible(element)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 179, in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n                      ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 252, in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 407, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "a21f53a58f526458",
      "name" : "Screenshot",
      "source" : "a21f53a58f526458.png",
      "type" : "image/png",
      "size" : 76022
    }, {
      "uid" : "1f3dba845bbeb3ef",
      "name" : "HTML source",
      "source" : "1f3dba845bbeb3ef.html",
      "type" : "text/html",
      "size" : 98268
    } ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1750875665832,
      "stop" : 1750875665895,
      "duration" : 63
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Восстановление пароля'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_password_recovery"
  }, {
    "name" : "suite",
    "value" : "test_password_recovery"
  }, {
    "name" : "subSuite",
    "value" : "TestPasswordRecoveryPage"
  }, {
    "name" : "host",
    "value" : "pkrvmxyh4eaekms"
  }, {
    "name" : "thread",
    "value" : "2524-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_password_recovery.test_password_recovery"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 24,
        "skipped" : 30,
        "passed" : 428,
        "unknown" : 0,
        "total" : 482
      },
      "items" : [ {
        "uid" : "83a166e1fd7ae454",
        "reportUrl" : "https://Nat754.github.io/PulseWave/430//#testresult/83a166e1fd7ae454",
        "status" : "passed",
        "time" : {
          "start" : 1750789230221,
          "stop" : 1750789240571,
          "duration" : 10350
        }
      }, {
        "uid" : "4b647c54bfafdf6c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/429//#testresult/4b647c54bfafdf6c",
        "status" : "passed",
        "time" : {
          "start" : 1750702880296,
          "stop" : 1750702902684,
          "duration" : 22388
        }
      }, {
        "uid" : "383056ed74797df5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/428//#testresult/383056ed74797df5",
        "status" : "passed",
        "time" : {
          "start" : 1750616314791,
          "stop" : 1750616321863,
          "duration" : 7072
        }
      }, {
        "uid" : "512440eca76f314b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/427//#testresult/512440eca76f314b",
        "status" : "passed",
        "time" : {
          "start" : 1750529874023,
          "stop" : 1750529889083,
          "duration" : 15060
        }
      }, {
        "uid" : "8da85e0bbaf3b625",
        "reportUrl" : "https://Nat754.github.io/PulseWave/426//#testresult/8da85e0bbaf3b625",
        "status" : "passed",
        "time" : {
          "start" : 1750443623948,
          "stop" : 1750443630343,
          "duration" : 6395
        }
      }, {
        "uid" : "4db2750878dd49d7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/425//#testresult/4db2750878dd49d7",
        "status" : "passed",
        "time" : {
          "start" : 1750393819535,
          "stop" : 1750393827054,
          "duration" : 7519
        }
      }, {
        "uid" : "a5f00457d419b9f9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/425//#testresult/a5f00457d419b9f9",
        "status" : "passed",
        "time" : {
          "start" : 1750376459311,
          "stop" : 1750376474952,
          "duration" : 15641
        }
      }, {
        "uid" : "7a2c03c8644f6a7d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/424//#testresult/7a2c03c8644f6a7d",
        "status" : "passed",
        "time" : {
          "start" : 1750284753398,
          "stop" : 1750284759912,
          "duration" : 6514
        }
      }, {
        "uid" : "2b19db7af3667c5e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/423//#testresult/2b19db7af3667c5e",
        "status" : "passed",
        "time" : {
          "start" : 1750184395702,
          "stop" : 1750184401362,
          "duration" : 5660
        }
      }, {
        "uid" : "347c2cddff13e27d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/422//#testresult/347c2cddff13e27d",
        "status" : "passed",
        "time" : {
          "start" : 1750098194767,
          "stop" : 1750098202230,
          "duration" : 7463
        }
      }, {
        "uid" : "b7fd64b25c184336",
        "reportUrl" : "https://Nat754.github.io/PulseWave/421//#testresult/b7fd64b25c184336",
        "status" : "passed",
        "time" : {
          "start" : 1750011703526,
          "stop" : 1750011723089,
          "duration" : 19563
        }
      }, {
        "uid" : "b615ea58911554d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/420//#testresult/b615ea58911554d",
        "status" : "passed",
        "time" : {
          "start" : 1749925243583,
          "stop" : 1749925251429,
          "duration" : 7846
        }
      }, {
        "uid" : "e6ffc08c7cd98175",
        "reportUrl" : "https://Nat754.github.io/PulseWave/419//#testresult/e6ffc08c7cd98175",
        "status" : "passed",
        "time" : {
          "start" : 1749839011984,
          "stop" : 1749839024057,
          "duration" : 12073
        }
      }, {
        "uid" : "7c2fe58dbd088c15",
        "reportUrl" : "https://Nat754.github.io/PulseWave/418//#testresult/7c2fe58dbd088c15",
        "status" : "passed",
        "time" : {
          "start" : 1749752428717,
          "stop" : 1749752434303,
          "duration" : 5586
        }
      }, {
        "uid" : "298891d4cb2f4871",
        "reportUrl" : "https://Nat754.github.io/PulseWave/417//#testresult/298891d4cb2f4871",
        "status" : "passed",
        "time" : {
          "start" : 1749666114487,
          "stop" : 1749666121754,
          "duration" : 7267
        }
      }, {
        "uid" : "1faecbce5cc10e12",
        "reportUrl" : "https://Nat754.github.io/PulseWave/416//#testresult/1faecbce5cc10e12",
        "status" : "passed",
        "time" : {
          "start" : 1749579629910,
          "stop" : 1749579640195,
          "duration" : 10285
        }
      }, {
        "uid" : "28f38c962ecb8558",
        "reportUrl" : "https://Nat754.github.io/PulseWave/415//#testresult/28f38c962ecb8558",
        "status" : "passed",
        "time" : {
          "start" : 1749493357115,
          "stop" : 1749493364647,
          "duration" : 7532
        }
      }, {
        "uid" : "65c8bb3829523a9a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/414//#testresult/65c8bb3829523a9a",
        "status" : "passed",
        "time" : {
          "start" : 1749410306705,
          "stop" : 1749410313815,
          "duration" : 7110
        }
      }, {
        "uid" : "6b2f1ce0926ed7e6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/413//#testresult/6b2f1ce0926ed7e6",
        "status" : "passed",
        "time" : {
          "start" : 1749320291727,
          "stop" : 1749320299474,
          "duration" : 7747
        }
      }, {
        "uid" : "1bb3ee688ffbd425",
        "reportUrl" : "https://Nat754.github.io/PulseWave/412//#testresult/1bb3ee688ffbd425",
        "status" : "passed",
        "time" : {
          "start" : 1749234042854,
          "stop" : 1749234049510,
          "duration" : 6656
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "da8b55be73e0add.json",
  "parameterValues" : [ "'chrome'" ]
}