{
  "uid" : "11c2588fed55f327",
  "name" : "POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке     auth/password/reset/confirm/{uid}/{token}",
  "fullName" : "tests.api_tests.api_test.TestAPI#test_post_auth_users_reset_password_confirm",
  "historyId" : "7ca9280baff05a7b68119ec812901370",
  "time" : {
    "start" : 1753812915474,
    "stop" : 1753812919026,
    "duration" : 3552
  },
  "status" : "broken",
  "statusMessage" : "IndexError: list index out of range",
  "statusTrace" : "self = <tests.api_tests.api_test.TestAPI object at 0x7fcdbe0bc5f0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fcdbe0f6510>\n\n    @allure.title(\"POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке \\\n    auth/password/reset/confirm/{uid}/{token}\")\n    def test_post_auth_users_reset_password_confirm(self, use_api_base):\n        jwt = use_api_base.create_tokens(email2, password0)[0]\n        page = ApiBase()\n        url = f'{self.link.BASE_URL}auth/users/reset_password_confirm/'\n>       tokens = page.get_tokens_on_email(email2, password2, 'confirm/')\n\ntests/api_tests/api_test.py:221: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api_testing.api_base.ApiBase object at 0x7fcdbe0f5d00>\ne_mail = 'test_stroyrem@mail.ru', passwrd = 'DUttcyseCyD3W5Tfj1ge'\ntrigger = 'confirm/'\n\n    @allure.step('Получить токен активации пользователя на емайл')\n    def get_tokens_on_email(self, e_mail, passwrd, trigger):\n        msg = self.read_email(e_mail, passwrd)\n        first = msg.find(trigger)\n        start = first + len(trigger)\n        end = msg[start:].find('\"')\n        link = msg[start:start + end].split('/')\n>       tokens = {\"uid\": link[0], \"token\": link[1]}\nE       IndexError: list index out of range\n\napi_testing/api_base.py:74: IndexError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1753812915474,
      "stop" : 1753812915474,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1753812842547,
      "stop" : 1753812842547,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1753812842533,
      "stop" : 1753812842547,
      "duration" : 14
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "IndexError: list index out of range",
    "statusTrace" : "self = <tests.api_tests.api_test.TestAPI object at 0x7fcdbe0bc5f0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7fcdbe0f6510>\n\n    @allure.title(\"POST Подтверждение сброса пароля. Когда пользователь переходит по ссылке \\\n    auth/password/reset/confirm/{uid}/{token}\")\n    def test_post_auth_users_reset_password_confirm(self, use_api_base):\n        jwt = use_api_base.create_tokens(email2, password0)[0]\n        page = ApiBase()\n        url = f'{self.link.BASE_URL}auth/users/reset_password_confirm/'\n>       tokens = page.get_tokens_on_email(email2, password2, 'confirm/')\n\ntests/api_tests/api_test.py:221: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api_testing.api_base.ApiBase object at 0x7fcdbe0f5d00>\ne_mail = 'test_stroyrem@mail.ru', passwrd = 'DUttcyseCyD3W5Tfj1ge'\ntrigger = 'confirm/'\n\n    @allure.step('Получить токен активации пользователя на емайл')\n    def get_tokens_on_email(self, e_mail, passwrd, trigger):\n        msg = self.read_email(e_mail, passwrd)\n        first = msg.find(trigger)\n        start = first + len(trigger)\n        end = msg[start:].find('\"')\n        link = msg[start:start + end].split('/')\n>       tokens = {\"uid\": link[0], \"token\": link[1]}\nE       IndexError: list index out of range\n\napi_testing/api_base.py:74: IndexError",
    "steps" : [ {
      "name" : "Получить access токен пользователя",
      "time" : {
        "start" : 1753812915474,
        "stop" : 1753812916326,
        "duration" : 852
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "Получить токен активации пользователя на емайл",
      "time" : {
        "start" : 1753812916326,
        "stop" : 1753812919026,
        "duration" : 2700
      },
      "status" : "broken",
      "statusMessage" : "IndexError: list index out of range\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/api_testing/api_base.py\", line 74, in get_tokens_on_email\n    tokens = {\"uid\": link[0], \"token\": link[1]}\n                                       ~~~~^^^\n",
      "steps" : [ {
        "name" : "Прочитать сообщение",
        "time" : {
          "start" : 1753812916326,
          "stop" : 1753812919026,
          "duration" : 2700
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "e_mail",
          "value" : "'test_stroyrem@mail.ru'"
        }, {
          "name" : "passwrd",
          "value" : "'DUttcyseCyD3W5Tfj1ge'"
        } ],
        "stepsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "attachmentsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "e_mail",
        "value" : "'test_stroyrem@mail.ru'"
      }, {
        "name" : "passwrd",
        "value" : "'DUttcyseCyD3W5Tfj1ge'"
      }, {
        "name" : "trigger",
        "value" : "'confirm/'"
      } ],
      "stepsCount" : 1,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "attachmentsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.api_tests"
  }, {
    "name" : "suite",
    "value" : "api_test"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "pkrvmpptgkbjq6m"
  }, {
    "name" : "thread",
    "value" : "2529-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.api_tests.api_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 37
      },
      "items" : [ {
        "uid" : "43d0e668baca1c96",
        "reportUrl" : "https://Nat754.github.io/PulseWave/464//#testresult/43d0e668baca1c96",
        "status" : "passed",
        "time" : {
          "start" : 1753726526795,
          "stop" : 1753726533513,
          "duration" : 6718
        }
      }, {
        "uid" : "5c6316f3e0e3852c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/463//#testresult/5c6316f3e0e3852c",
        "status" : "passed",
        "time" : {
          "start" : 1753639977504,
          "stop" : 1753639984843,
          "duration" : 7339
        }
      }, {
        "uid" : "35319ab9104bd14d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/462//#testresult/35319ab9104bd14d",
        "status" : "passed",
        "time" : {
          "start" : 1753553560486,
          "stop" : 1753553565483,
          "duration" : 4997
        }
      }, {
        "uid" : "866d8ce26c80d917",
        "reportUrl" : "https://Nat754.github.io/PulseWave/461//#testresult/866d8ce26c80d917",
        "status" : "passed",
        "time" : {
          "start" : 1753467223234,
          "stop" : 1753467227139,
          "duration" : 3905
        }
      }, {
        "uid" : "fb68306b369a5eee",
        "reportUrl" : "https://Nat754.github.io/PulseWave/460//#testresult/fb68306b369a5eee",
        "status" : "passed",
        "time" : {
          "start" : 1753380861572,
          "stop" : 1753380865929,
          "duration" : 4357
        }
      }, {
        "uid" : "dd83a835773a06e6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/459//#testresult/dd83a835773a06e6",
        "status" : "passed",
        "time" : {
          "start" : 1753294432631,
          "stop" : 1753294436241,
          "duration" : 3610
        }
      }, {
        "uid" : "ccf2d6a38033bde8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/458//#testresult/ccf2d6a38033bde8",
        "status" : "passed",
        "time" : {
          "start" : 1753208044972,
          "stop" : 1753208059877,
          "duration" : 14905
        }
      }, {
        "uid" : "67ea52a6fa201f44",
        "reportUrl" : "https://Nat754.github.io/PulseWave/457//#testresult/67ea52a6fa201f44",
        "status" : "passed",
        "time" : {
          "start" : 1753121663061,
          "stop" : 1753121668090,
          "duration" : 5029
        }
      }, {
        "uid" : "4821d3fefbcaca2b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/4821d3fefbcaca2b",
        "status" : "passed",
        "time" : {
          "start" : 1753075866187,
          "stop" : 1753075869827,
          "duration" : 3640
        }
      }, {
        "uid" : "37373da84c262776",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/37373da84c262776",
        "status" : "passed",
        "time" : {
          "start" : 1753042352401,
          "stop" : 1753042355580,
          "duration" : 3179
        }
      }, {
        "uid" : "da7756c2936617b9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/da7756c2936617b9",
        "status" : "passed",
        "time" : {
          "start" : 1753039510783,
          "stop" : 1753039519855,
          "duration" : 9072
        }
      }, {
        "uid" : "84ef3d0724a04352",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/84ef3d0724a04352",
        "status" : "passed",
        "time" : {
          "start" : 1753035145293,
          "stop" : 1753035148807,
          "duration" : 3514
        }
      }, {
        "uid" : "3916caa018bdc783",
        "reportUrl" : "https://Nat754.github.io/PulseWave/455//#testresult/3916caa018bdc783",
        "status" : "passed",
        "time" : {
          "start" : 1752948751858,
          "stop" : 1752948756141,
          "duration" : 4283
        }
      }, {
        "uid" : "bb82c2a97db5cd30",
        "reportUrl" : "https://Nat754.github.io/PulseWave/454//#testresult/bb82c2a97db5cd30",
        "status" : "passed",
        "time" : {
          "start" : 1752862446201,
          "stop" : 1752862450659,
          "duration" : 4458
        }
      }, {
        "uid" : "eba5c66ae9c1de5a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/453//#testresult/eba5c66ae9c1de5a",
        "status" : "passed",
        "time" : {
          "start" : 1752776037424,
          "stop" : 1752776046941,
          "duration" : 9517
        }
      }, {
        "uid" : "e9e0f1e898474359",
        "reportUrl" : "https://Nat754.github.io/PulseWave/452//#testresult/e9e0f1e898474359",
        "status" : "passed",
        "time" : {
          "start" : 1752689647761,
          "stop" : 1752689652786,
          "duration" : 5025
        }
      }, {
        "uid" : "a9c8767874655623",
        "reportUrl" : "https://Nat754.github.io/PulseWave/451//#testresult/a9c8767874655623",
        "status" : "passed",
        "time" : {
          "start" : 1752603271058,
          "stop" : 1752603275638,
          "duration" : 4580
        }
      }, {
        "uid" : "3babc93078a508d8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/450//#testresult/3babc93078a508d8",
        "status" : "passed",
        "time" : {
          "start" : 1752516856313,
          "stop" : 1752516860217,
          "duration" : 3904
        }
      }, {
        "uid" : "119074b831d870d7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/449//#testresult/119074b831d870d7",
        "status" : "passed",
        "time" : {
          "start" : 1752430332372,
          "stop" : 1752430335895,
          "duration" : 3523
        }
      }, {
        "uid" : "759f0b3b75f8b686",
        "reportUrl" : "https://Nat754.github.io/PulseWave/448//#testresult/759f0b3b75f8b686",
        "status" : "passed",
        "time" : {
          "start" : 1752346027007,
          "stop" : 1752346030800,
          "duration" : 3793
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "11c2588fed55f327.json",
  "parameterValues" : [ ]
}