{
  "uid" : "3866f28189b2614",
  "name" : "2.1 POST Создать пользователя с корректными данными",
  "fullName" : "tests.api_tests.api_test.TestAPI#test_post_auth_user",
  "historyId" : "a5f90e019ae143bf7a94a5de817c4584",
  "time" : {
    "start" : 1753899209701,
    "stop" : 1753899211055,
    "duration" : 1354
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
  "statusTrace" : "self = <tests.api_tests.api_test.TestAPI object at 0x7f85ecbc7980>\n\n    @allure.title(\"2.1 POST Создать пользователя с корректными данными\")\n    def test_post_auth_user(self):\n        url = f'{self.link.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/api_tests/api_test.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400",
    "statusTrace" : "self = <tests.api_tests.api_test.TestAPI object at 0x7f85ecbc7980>\n\n    @allure.title(\"2.1 POST Создать пользователя с корректными данными\")\n    def test_post_auth_user(self):\n        url = f'{self.link.BASE_URL}auth/users/'\n        response = requests.post(url, json=self.constant.CREATE_USER)\n>       Assertions.assert_status_code(response, self.code.STATUS_201)\n\ntests/api_tests/api_test.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 201. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Expected status 201",
      "time" : {
        "start" : 1753899211055,
        "stop" : 1753899211055,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 201. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.api_tests"
  }, {
    "name" : "suite",
    "value" : "api_test"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "pkrvmjbmru5nbw0"
  }, {
    "name" : "thread",
    "value" : "2553-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.api_tests.api_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 38,
        "unknown" : 0,
        "total" : 39
      },
      "items" : [ {
        "uid" : "780da6186ff625e4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/465//#testresult/780da6186ff625e4",
        "status" : "passed",
        "time" : {
          "start" : 1753822431581,
          "stop" : 1753822433224,
          "duration" : 1643
        }
      }, {
        "uid" : "2fb197bfc027c2b9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/465//#testresult/2fb197bfc027c2b9",
        "status" : "passed",
        "time" : {
          "start" : 1753812843600,
          "stop" : 1753812844956,
          "duration" : 1356
        }
      }, {
        "uid" : "7e08e2dec6ca422f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/464//#testresult/7e08e2dec6ca422f",
        "status" : "passed",
        "time" : {
          "start" : 1753726456826,
          "stop" : 1753726458012,
          "duration" : 1186
        }
      }, {
        "uid" : "303ac93b3fb41016",
        "reportUrl" : "https://Nat754.github.io/PulseWave/463//#testresult/303ac93b3fb41016",
        "status" : "passed",
        "time" : {
          "start" : 1753639900165,
          "stop" : 1753639901634,
          "duration" : 1469
        }
      }, {
        "uid" : "803d6bae32e4457e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/462//#testresult/803d6bae32e4457e",
        "status" : "passed",
        "time" : {
          "start" : 1753553490930,
          "stop" : 1753553492418,
          "duration" : 1488
        }
      }, {
        "uid" : "9b173e3a09154e97",
        "reportUrl" : "https://Nat754.github.io/PulseWave/461//#testresult/9b173e3a09154e97",
        "status" : "passed",
        "time" : {
          "start" : 1753467171066,
          "stop" : 1753467172006,
          "duration" : 940
        }
      }, {
        "uid" : "ce9cc2e2f20f495a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/460//#testresult/ce9cc2e2f20f495a",
        "status" : "passed",
        "time" : {
          "start" : 1753380797572,
          "stop" : 1753380798929,
          "duration" : 1357
        }
      }, {
        "uid" : "c513fa641956745f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/459//#testresult/c513fa641956745f",
        "status" : "passed",
        "time" : {
          "start" : 1753294366773,
          "stop" : 1753294368356,
          "duration" : 1583
        }
      }, {
        "uid" : "e20fba3b5c7edcdf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/458//#testresult/e20fba3b5c7edcdf",
        "status" : "passed",
        "time" : {
          "start" : 1753207989763,
          "stop" : 1753207990978,
          "duration" : 1215
        }
      }, {
        "uid" : "c7a3d03a10e28643",
        "reportUrl" : "https://Nat754.github.io/PulseWave/457//#testresult/c7a3d03a10e28643",
        "status" : "passed",
        "time" : {
          "start" : 1753121596335,
          "stop" : 1753121597586,
          "duration" : 1251
        }
      }, {
        "uid" : "842c0217e278fd14",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/842c0217e278fd14",
        "status" : "passed",
        "time" : {
          "start" : 1753075812381,
          "stop" : 1753075813712,
          "duration" : 1331
        }
      }, {
        "uid" : "107e7e9ea246402b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/107e7e9ea246402b",
        "status" : "passed",
        "time" : {
          "start" : 1753042297782,
          "stop" : 1753042298945,
          "duration" : 1163
        }
      }, {
        "uid" : "f949408ab81f13f1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/f949408ab81f13f1",
        "status" : "passed",
        "time" : {
          "start" : 1753039445041,
          "stop" : 1753039446414,
          "duration" : 1373
        }
      }, {
        "uid" : "c93e25d09b04d28e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/c93e25d09b04d28e",
        "status" : "passed",
        "time" : {
          "start" : 1753035088203,
          "stop" : 1753035089554,
          "duration" : 1351
        }
      }, {
        "uid" : "902b8a2e5279768a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/455//#testresult/902b8a2e5279768a",
        "status" : "passed",
        "time" : {
          "start" : 1752948690068,
          "stop" : 1752948692015,
          "duration" : 1947
        }
      }, {
        "uid" : "6b16decbf1fe1135",
        "reportUrl" : "https://Nat754.github.io/PulseWave/454//#testresult/6b16decbf1fe1135",
        "status" : "passed",
        "time" : {
          "start" : 1752862368098,
          "stop" : 1752862369249,
          "duration" : 1151
        }
      }, {
        "uid" : "e4bed843833885e5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/453//#testresult/e4bed843833885e5",
        "status" : "passed",
        "time" : {
          "start" : 1752775980365,
          "stop" : 1752775982026,
          "duration" : 1661
        }
      }, {
        "uid" : "8564d55ae882c7d7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/452//#testresult/8564d55ae882c7d7",
        "status" : "passed",
        "time" : {
          "start" : 1752689582380,
          "stop" : 1752689583887,
          "duration" : 1507
        }
      }, {
        "uid" : "7f5b91d1c33ca01c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/451//#testresult/7f5b91d1c33ca01c",
        "status" : "passed",
        "time" : {
          "start" : 1752603204398,
          "stop" : 1752603205795,
          "duration" : 1397
        }
      }, {
        "uid" : "b4e3e4be6b3db48e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/450//#testresult/b4e3e4be6b3db48e",
        "status" : "passed",
        "time" : {
          "start" : 1752516805249,
          "stop" : 1752516806491,
          "duration" : 1242
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3866f28189b2614.json",
  "parameterValues" : [ ]
}