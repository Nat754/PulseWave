{
  "uid" : "d3b054dca1da335f",
  "name" : "POST Повторная отправка ссылки с приглашением пользователя",
  "fullName" : "tests.api_tests.api_test.TestAPI#test_post_api_workspace_id_resend_invite",
  "historyId" : "3f211864ea35345d8a075f62d0187415",
  "time" : {
    "start" : 1753900433771,
    "stop" : 1753900437303,
    "duration" : 3532
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400",
  "statusTrace" : "self = <tests.api_tests.api_test.TestAPI object at 0x7f85ec532a80>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f85ec582960>\n\n    @allure.title(\"POST Повторная отправка ссылки с приглашением пользователя\")\n    def test_post_api_workspace_id_resend_invite(self, use_api_base):\n        jwt = use_api_base.create_tokens(email1, password0)[0]\n        url = f'{self.link.BASE_URL}api/workspace/'\n        response = requests.get(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"})\n        workspaces_id = [item['id'] for item in response.json()]\n        workspace_id = random.choice(workspaces_id)\n        invite_user_id = response.json()[0]['invited'][0]['id']\n        url = f'{self.link.BASE_URL}api/workspace/{workspace_id}/resend_invite/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                                 json={\"user_id\": invite_user_id})\n>       Assertions.assert_status_code(response, self.code.STATUS_204)\n\ntests/api_tests/api_test.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 204\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 204. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "use_api_base",
    "time" : {
      "start" : 1753900433771,
      "stop" : 1753900433771,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400",
    "statusTrace" : "self = <tests.api_tests.api_test.TestAPI object at 0x7f85ec532a80>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f85ec582960>\n\n    @allure.title(\"POST Повторная отправка ссылки с приглашением пользователя\")\n    def test_post_api_workspace_id_resend_invite(self, use_api_base):\n        jwt = use_api_base.create_tokens(email1, password0)[0]\n        url = f'{self.link.BASE_URL}api/workspace/'\n        response = requests.get(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"})\n        workspaces_id = [item['id'] for item in response.json()]\n        workspace_id = random.choice(workspaces_id)\n        invite_user_id = response.json()[0]['invited'][0]['id']\n        url = f'{self.link.BASE_URL}api/workspace/{workspace_id}/resend_invite/'\n        response = requests.post(url, headers={'accept': 'application/json', 'Authorization': f\"{jwt}\"},\n                                 json={\"user_id\": invite_user_id})\n>       Assertions.assert_status_code(response, self.code.STATUS_204)\n\ntests/api_tests/api_test.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, expected_status_code = 204\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 204. Actual: 400\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить access токен пользователя",
      "time" : {
        "start" : 1753900433771,
        "stop" : 1753900435364,
        "duration" : 1593
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 204",
      "time" : {
        "start" : 1753900437302,
        "stop" : 1753900437302,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 204. Actual: 400\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "parentSuite",
    "value" : "tests.api_tests"
  }, {
    "name" : "suite",
    "value" : "api_test"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "pkrvmjbmru5nbw0"
  }, {
    "name" : "thread",
    "value" : "2553-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.api_tests.api_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 38,
        "unknown" : 0,
        "total" : 39
      },
      "items" : [ {
        "uid" : "dcc3fc0ee0ae90ef",
        "reportUrl" : "https://Nat754.github.io/PulseWave/465//#testresult/dcc3fc0ee0ae90ef",
        "status" : "passed",
        "time" : {
          "start" : 1753822460982,
          "stop" : 1753822470087,
          "duration" : 9105
        }
      }, {
        "uid" : "195dcd1592b8ca4d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/465//#testresult/195dcd1592b8ca4d",
        "status" : "passed",
        "time" : {
          "start" : 1753812866062,
          "stop" : 1753812871482,
          "duration" : 5420
        }
      }, {
        "uid" : "fb25e6eb468a369f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/464//#testresult/fb25e6eb468a369f",
        "status" : "passed",
        "time" : {
          "start" : 1753726474652,
          "stop" : 1753726483405,
          "duration" : 8753
        }
      }, {
        "uid" : "53bf7d66bc6a9010",
        "reportUrl" : "https://Nat754.github.io/PulseWave/463//#testresult/53bf7d66bc6a9010",
        "status" : "passed",
        "time" : {
          "start" : 1753639915653,
          "stop" : 1753639926893,
          "duration" : 11240
        }
      }, {
        "uid" : "d7a4bedb17af6192",
        "reportUrl" : "https://Nat754.github.io/PulseWave/462//#testresult/d7a4bedb17af6192",
        "status" : "passed",
        "time" : {
          "start" : 1753553503508,
          "stop" : 1753553509787,
          "duration" : 6279
        }
      }, {
        "uid" : "65d17e56795346a7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/461//#testresult/65d17e56795346a7",
        "status" : "passed",
        "time" : {
          "start" : 1753467180496,
          "stop" : 1753467185257,
          "duration" : 4761
        }
      }, {
        "uid" : "7518cbd7b8588592",
        "reportUrl" : "https://Nat754.github.io/PulseWave/460//#testresult/7518cbd7b8588592",
        "status" : "passed",
        "time" : {
          "start" : 1753380808596,
          "stop" : 1753380817961,
          "duration" : 9365
        }
      }, {
        "uid" : "c25da9299c82c24c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/459//#testresult/c25da9299c82c24c",
        "status" : "passed",
        "time" : {
          "start" : 1753294378072,
          "stop" : 1753294387943,
          "duration" : 9871
        }
      }, {
        "uid" : "672f7093de59a643",
        "reportUrl" : "https://Nat754.github.io/PulseWave/458//#testresult/672f7093de59a643",
        "status" : "passed",
        "time" : {
          "start" : 1753208002893,
          "stop" : 1753208007781,
          "duration" : 4888
        }
      }, {
        "uid" : "53b546accd4f0415",
        "reportUrl" : "https://Nat754.github.io/PulseWave/457//#testresult/53b546accd4f0415",
        "status" : "passed",
        "time" : {
          "start" : 1753121608564,
          "stop" : 1753121614905,
          "duration" : 6341
        }
      }, {
        "uid" : "766e6d83a4e10bfc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/766e6d83a4e10bfc",
        "status" : "passed",
        "time" : {
          "start" : 1753075821454,
          "stop" : 1753075826230,
          "duration" : 4776
        }
      }, {
        "uid" : "ee38b982218e9740",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/ee38b982218e9740",
        "status" : "passed",
        "time" : {
          "start" : 1753042307690,
          "stop" : 1753042312089,
          "duration" : 4399
        }
      }, {
        "uid" : "eb4933ed0705deb5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/eb4933ed0705deb5",
        "status" : "passed",
        "time" : {
          "start" : 1753039456667,
          "stop" : 1753039461716,
          "duration" : 5049
        }
      }, {
        "uid" : "425cef87002d62d8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/456//#testresult/425cef87002d62d8",
        "status" : "passed",
        "time" : {
          "start" : 1753035102175,
          "stop" : 1753035107026,
          "duration" : 4851
        }
      }, {
        "uid" : "b962d7e478be7567",
        "reportUrl" : "https://Nat754.github.io/PulseWave/455//#testresult/b962d7e478be7567",
        "status" : "passed",
        "time" : {
          "start" : 1752948702532,
          "stop" : 1752948708105,
          "duration" : 5573
        }
      }, {
        "uid" : "f62ef9ae0d28d11b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/454//#testresult/f62ef9ae0d28d11b",
        "status" : "passed",
        "time" : {
          "start" : 1752862378335,
          "stop" : 1752862403881,
          "duration" : 25546
        }
      }, {
        "uid" : "3ff6c675981ef29e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/453//#testresult/3ff6c675981ef29e",
        "status" : "passed",
        "time" : {
          "start" : 1752775990613,
          "stop" : 1752775999078,
          "duration" : 8465
        }
      }, {
        "uid" : "9a2b4d8089b84fdc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/452//#testresult/9a2b4d8089b84fdc",
        "status" : "passed",
        "time" : {
          "start" : 1752689597298,
          "stop" : 1752689603528,
          "duration" : 6230
        }
      }, {
        "uid" : "34e8b5198940bb0f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/451//#testresult/34e8b5198940bb0f",
        "status" : "passed",
        "time" : {
          "start" : 1752603216918,
          "stop" : 1752603223256,
          "duration" : 6338
        }
      }, {
        "uid" : "b6b6580725a09e19",
        "reportUrl" : "https://Nat754.github.io/PulseWave/450//#testresult/b6b6580725a09e19",
        "status" : "passed",
        "time" : {
          "start" : 1752516814217,
          "stop" : 1752516818944,
          "duration" : 4727
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d3b054dca1da335f.json",
  "parameterValues" : [ ]
}