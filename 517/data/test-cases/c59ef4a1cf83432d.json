{
  "uid" : "c59ef4a1cf83432d",
  "name" : "A.3 POST Активация пользователя с корректными данными",
  "fullName" : "tests.api_tests.api_test.TestAPI#test_post_users_activation",
  "historyId" : "5a2302130630be4068373af1d0242588",
  "time" : {
    "start" : 1758338681474,
    "stop" : 1758356217530,
    "duration" : 17536056
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 500",
  "statusTrace" : "self = <tests.api_tests.api_test.TestAPI object at 0x7f23f1a207a0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f23f1a54ad0>\n\n    @allure.title(\"A.3 POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/users/activation/'\n        user_token = use_api_base.get_tokens_on_email(email1, password1, 'activate/')\n        response = requests.post(url, json=user_token)\n>       Assertions.assert_status_code(response, self.code.STATUS_OK)\n\ntests/api_tests/api_test.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1758338679128,
      "stop" : 1758338679142,
      "duration" : 14
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_result_folder",
    "time" : {
      "start" : 1758338679142,
      "stop" : 1758338679142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1758338681473,
      "stop" : 1758338681473,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 500",
    "statusTrace" : "self = <tests.api_tests.api_test.TestAPI object at 0x7f23f1a207a0>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f23f1a54ad0>\n\n    @allure.title(\"A.3 POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.link.BASE_URL}auth/users/activation/'\n        user_token = use_api_base.get_tokens_on_email(email1, password1, 'activate/')\n        response = requests.post(url, json=user_token)\n>       Assertions.assert_status_code(response, self.code.STATUS_OK)\n\ntests/api_tests/api_test.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить токен активации пользователя на емайл",
      "time" : {
        "start" : 1758338681474,
        "stop" : 1758356215536,
        "duration" : 17534062
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Прочитать сообщение",
        "time" : {
          "start" : 1758338681474,
          "stop" : 1758356215536,
          "duration" : 17534062
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "e_mail",
          "value" : "'test_pulsewave0@mail.ru'"
        }, {
          "name" : "passwrd",
          "value" : "'5gA8g3cLYJxwPit07iRF'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "e_mail",
        "value" : "'test_pulsewave0@mail.ru'"
      }, {
        "name" : "passwrd",
        "value" : "'5gA8g3cLYJxwPit07iRF'"
      }, {
        "name" : "trigger",
        "value" : "'activate/'"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Expected status 200",
      "time" : {
        "start" : 1758356217529,
        "stop" : 1758356217529,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 500\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests.api_tests"
  }, {
    "name" : "suite",
    "value" : "api_test"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "runnervmf4ws1"
  }, {
    "name" : "thread",
    "value" : "2553-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.api_tests.api_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 108,
        "unknown" : 0,
        "total" : 112
      },
      "items" : [ {
        "uid" : "9e70c4e9da02c245",
        "reportUrl" : "https://Nat754.github.io/PulseWave/516//#testresult/9e70c4e9da02c245",
        "status" : "failed",
        "statusDetails" : "AssertionError: Unexpected status code. Expected: 200. Actual: 500",
        "time" : {
          "start" : 1758252637769,
          "stop" : 1758252668362,
          "duration" : 30593
        }
      }, {
        "uid" : "f7f70a8fcbe1f885",
        "reportUrl" : "https://Nat754.github.io/PulseWave/515//#testresult/f7f70a8fcbe1f885",
        "status" : "passed",
        "time" : {
          "start" : 1758166054693,
          "stop" : 1758166059756,
          "duration" : 5063
        }
      }, {
        "uid" : "9b3d4f8a4c4ace7c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/514//#testresult/9b3d4f8a4c4ace7c",
        "status" : "passed",
        "time" : {
          "start" : 1758079496169,
          "stop" : 1758079499466,
          "duration" : 3297
        }
      }, {
        "uid" : "812c2a1d803cbfb2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/513//#testresult/812c2a1d803cbfb2",
        "status" : "passed",
        "time" : {
          "start" : 1757993169214,
          "stop" : 1757993172508,
          "duration" : 3294
        }
      }, {
        "uid" : "96e81884a806a9a8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/512//#testresult/96e81884a806a9a8",
        "status" : "passed",
        "time" : {
          "start" : 1757907435539,
          "stop" : 1757907439066,
          "duration" : 3527
        }
      }, {
        "uid" : "3e13ee6d2d856317",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/3e13ee6d2d856317",
        "status" : "passed",
        "time" : {
          "start" : 1757840060482,
          "stop" : 1757840064493,
          "duration" : 4011
        }
      }, {
        "uid" : "ab9d7a89c27f4c65",
        "reportUrl" : "https://Nat754.github.io/PulseWave/511//#testresult/ab9d7a89c27f4c65",
        "status" : "passed",
        "time" : {
          "start" : 1757820638087,
          "stop" : 1757820640904,
          "duration" : 2817
        }
      }, {
        "uid" : "c97cc63e56b9a90a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/510//#testresult/c97cc63e56b9a90a",
        "status" : "passed",
        "time" : {
          "start" : 1757733491588,
          "stop" : 1757733501476,
          "duration" : 9888
        }
      }, {
        "uid" : "b1d43badb03c685",
        "reportUrl" : "https://Nat754.github.io/PulseWave/509//#testresult/b1d43badb03c685",
        "status" : "passed",
        "time" : {
          "start" : 1757647460337,
          "stop" : 1757647465374,
          "duration" : 5037
        }
      }, {
        "uid" : "bc5d668ae5220d2d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/508//#testresult/bc5d668ae5220d2d",
        "status" : "passed",
        "time" : {
          "start" : 1757561392856,
          "stop" : 1757561396291,
          "duration" : 3435
        }
      }, {
        "uid" : "21b2f3722b71ffe6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/507//#testresult/21b2f3722b71ffe6",
        "status" : "passed",
        "time" : {
          "start" : 1757474668290,
          "stop" : 1757474673285,
          "duration" : 4995
        }
      }, {
        "uid" : "f7964a1ad4303ff4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/506//#testresult/f7964a1ad4303ff4",
        "status" : "passed",
        "time" : {
          "start" : 1757388671492,
          "stop" : 1757388676163,
          "duration" : 4671
        }
      }, {
        "uid" : "779341868da72dcb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/505//#testresult/779341868da72dcb",
        "status" : "passed",
        "time" : {
          "start" : 1757302605258,
          "stop" : 1757302613494,
          "duration" : 8236
        }
      }, {
        "uid" : "7a7d9ca965630fe1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/504//#testresult/7a7d9ca965630fe1",
        "status" : "passed",
        "time" : {
          "start" : 1757215853362,
          "stop" : 1757215864169,
          "duration" : 10807
        }
      }, {
        "uid" : "2ea9b585c3aa8fe6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/2ea9b585c3aa8fe6",
        "status" : "passed",
        "time" : {
          "start" : 1757162672251,
          "stop" : 1757162675015,
          "duration" : 2764
        }
      }, {
        "uid" : "73946c74955675a3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/73946c74955675a3",
        "status" : "passed",
        "time" : {
          "start" : 1757158748805,
          "stop" : 1757158753658,
          "duration" : 4853
        }
      }, {
        "uid" : "159a8ee0274f6ae8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/159a8ee0274f6ae8",
        "status" : "passed",
        "time" : {
          "start" : 1757156742091,
          "stop" : 1757156745353,
          "duration" : 3262
        }
      }, {
        "uid" : "c314ccb8aa392a4f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/c314ccb8aa392a4f",
        "status" : "passed",
        "time" : {
          "start" : 1757134026398,
          "stop" : 1757134031412,
          "duration" : 5014
        }
      }, {
        "uid" : "6739c658cbd867a5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/503//#testresult/6739c658cbd867a5",
        "status" : "passed",
        "time" : {
          "start" : 1757129014614,
          "stop" : 1757129019078,
          "duration" : 4464
        }
      }, {
        "uid" : "44d9a2f888b072a9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/502//#testresult/44d9a2f888b072a9",
        "status" : "passed",
        "time" : {
          "start" : 1757120140545,
          "stop" : 1757120145275,
          "duration" : 4730
        }
      } ]
    },
    "tags" : [ "smoke" ]
  },
  "source" : "c59ef4a1cf83432d.json",
  "parameterValues" : [ ]
}