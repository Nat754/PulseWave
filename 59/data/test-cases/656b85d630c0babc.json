{
  "uid" : "656b85d630c0babc",
  "name" : "3.2, 3.2.1 Восстановить пароль на корректный емайл",
  "fullName" : "tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage#test_recovery_password_to_fill_correct_email",
  "historyId" : "3fbb91d2b204c3d1abb80d32ac377e08",
  "time" : {
    "start" : 1718678472889,
    "stop" : 1718678486849,
    "duration" : 13960
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b6921ed6aa <unknown>\n#1 0x55b691ed00dc <unknown>\n#2 0x55b691ed57e9 <unknown>\n#3 0x55b691ed7595 <unknown>\n#4 0x55b691ed761c <unknown>\n#5 0x55b691f17124 <unknown>\n#6 0x55b691f3f872 <unknown>\n#7 0x55b691f10d89 <unknown>\n#8 0x55b691f3fa3e <unknown>\n#9 0x55b691f5e5c3 <unknown>\n#10 0x55b691f3f613 <unknown>\n#11 0x55b691f0f4f7 <unknown>\n#12 0x55b691f0fe4e <unknown>\n#13 0x55b6921b387b <unknown>\n#14 0x55b6921b7921 <unknown>\n#15 0x55b69219f36e <unknown>\n#16 0x55b6921b8482 <unknown>\n#17 0x55b692183ccf <unknown>\n#18 0x55b6921dd0a8 <unknown>\n#19 0x55b6921dd280 <unknown>\n#20 0x55b6921ec7dc <unknown>\n#21 0x7f0ef1494ac3 <unknown>",
  "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7f1b354a8d40>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7f1b354d39b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"96ffa104687fc69d3c57545756c39030\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        time.sleep(10)  # Получить ссылку на емайл\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:48: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:60: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:365: in _predicate\n    if element and element.is_enabled():\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1b354d0aa0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x55b6921dd280 \\\\u003Cunknown>\\\\n#20 0x55b6921ec7dc \\\\u003Cunknown>\\\\n#21 0x7f0ef1494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55b6921ed6aa <unknown>\nE       #1 0x55b691ed00dc <unknown>\nE       #2 0x55b691ed57e9 <unknown>\nE       #3 0x55b691ed7595 <unknown>\nE       #4 0x55b691ed761c <unknown>\nE       #5 0x55b691f17124 <unknown>\nE       #6 0x55b691f3f872 <unknown>\nE       #7 0x55b691f10d89 <unknown>\nE       #8 0x55b691f3fa3e <unknown>\nE       #9 0x55b691f5e5c3 <unknown>\nE       #10 0x55b691f3f613 <unknown>\nE       #11 0x55b691f0f4f7 <unknown>\nE       #12 0x55b691f0fe4e <unknown>\nE       #13 0x55b6921b387b <unknown>\nE       #14 0x55b6921b7921 <unknown>\nE       #15 0x55b69219f36e <unknown>\nE       #16 0x55b6921b8482 <unknown>\nE       #17 0x55b692183ccf <unknown>\nE       #18 0x55b6921dd0a8 <unknown>\nE       #19 0x55b6921dd280 <unknown>\nE       #20 0x55b6921ec7dc <unknown>\nE       #21 0x7f0ef1494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "recovery_page_open",
    "time" : {
      "start" : 1718678470106,
      "stop" : 1718678472888,
      "duration" : 2782
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1718678472830,
        "stop" : 1718678472859,
        "duration" : 29
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1718677587087,
      "stop" : 1718677587105,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1718678469909,
      "stop" : 1718678470106,
      "duration" : 197
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1718677587105,
      "stop" : 1718677587105,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b6921ed6aa <unknown>\n#1 0x55b691ed00dc <unknown>\n#2 0x55b691ed57e9 <unknown>\n#3 0x55b691ed7595 <unknown>\n#4 0x55b691ed761c <unknown>\n#5 0x55b691f17124 <unknown>\n#6 0x55b691f3f872 <unknown>\n#7 0x55b691f10d89 <unknown>\n#8 0x55b691f3fa3e <unknown>\n#9 0x55b691f5e5c3 <unknown>\n#10 0x55b691f3f613 <unknown>\n#11 0x55b691f0f4f7 <unknown>\n#12 0x55b691f0fe4e <unknown>\n#13 0x55b6921b387b <unknown>\n#14 0x55b6921b7921 <unknown>\n#15 0x55b69219f36e <unknown>\n#16 0x55b6921b8482 <unknown>\n#17 0x55b692183ccf <unknown>\n#18 0x55b6921dd0a8 <unknown>\n#19 0x55b6921dd280 <unknown>\n#20 0x55b6921ec7dc <unknown>\n#21 0x7f0ef1494ac3 <unknown>",
    "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7f1b354a8d40>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7f1b354d39b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"96ffa104687fc69d3c57545756c39030\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        time.sleep(10)  # Получить ссылку на емайл\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:48: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:60: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:365: in _predicate\n    if element and element.is_enabled():\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1b354d0aa0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x55b6921dd280 \\\\u003Cunknown>\\\\n#20 0x55b6921ec7dc \\\\u003Cunknown>\\\\n#21 0x7f0ef1494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55b6921ed6aa <unknown>\nE       #1 0x55b691ed00dc <unknown>\nE       #2 0x55b691ed57e9 <unknown>\nE       #3 0x55b691ed7595 <unknown>\nE       #4 0x55b691ed761c <unknown>\nE       #5 0x55b691f17124 <unknown>\nE       #6 0x55b691f3f872 <unknown>\nE       #7 0x55b691f10d89 <unknown>\nE       #8 0x55b691f3fa3e <unknown>\nE       #9 0x55b691f5e5c3 <unknown>\nE       #10 0x55b691f3f613 <unknown>\nE       #11 0x55b691f0f4f7 <unknown>\nE       #12 0x55b691f0fe4e <unknown>\nE       #13 0x55b6921b387b <unknown>\nE       #14 0x55b6921b7921 <unknown>\nE       #15 0x55b69219f36e <unknown>\nE       #16 0x55b6921b8482 <unknown>\nE       #17 0x55b692183ccf <unknown>\nE       #18 0x55b6921dd0a8 <unknown>\nE       #19 0x55b6921dd280 <unknown>\nE       #20 0x55b6921ec7dc <unknown>\nE       #21 0x7f0ef1494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Заполнить поле емайл",
      "time" : {
        "start" : 1718678472889,
        "stop" : 1718678472963,
        "duration" : 74
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Продолжить'",
      "time" : {
        "start" : 1718678472963,
        "stop" : 1718678473011,
        "duration" : 48
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить ссылку для смены пароля на email",
      "time" : {
        "start" : 1718678483011,
        "stop" : 1718678485387,
        "duration" : 2376
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ввести пароль в поле пароль",
      "time" : {
        "start" : 1718678485616,
        "stop" : 1718678485680,
        "duration" : 64
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Ввести пароль в поле подтверждение пароля",
      "time" : {
        "start" : 1718678485680,
        "stop" : 1718678485735,
        "duration" : 55
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Сохранить пароль'",
      "time" : {
        "start" : 1718678485735,
        "stop" : 1718678485776,
        "duration" : 41
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации",
      "time" : {
        "start" : 1718678485776,
        "stop" : 1718678486847,
        "duration" : 1071
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b6921ed6aa <unknown>\n#1 0x55b691ed00dc <unknown>\n#2 0x55b691ed57e9 <unknown>\n#3 0x55b691ed7595 <unknown>\n#4 0x55b691ed761c <unknown>\n#5 0x55b691f17124 <unknown>\n#6 0x55b691f3f872 <unknown>\n#7 0x55b691f10d89 <unknown>\n#8 0x55b691f3fa3e <unknown>\n#9 0x55b691f5e5c3 <unknown>\n#10 0x55b691f3f613 <unknown>\n#11 0x55b691f0f4f7 <unknown>\n#12 0x55b691f0fe4e <unknown>\n#13 0x55b6921b387b <unknown>\n#14 0x55b6921b7921 <unknown>\n#15 0x55b69219f36e <unknown>\n#16 0x55b6921b8482 <unknown>\n#17 0x55b692183ccf <unknown>\n#18 0x55b6921dd0a8 <unknown>\n#19 0x55b6921dd280 <unknown>\n#20 0x55b6921ec7dc <unknown>\n#21 0x7f0ef1494ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_password_recovery/test_password_recovery.py\", line 67, in test_recovery_password_to_fill_correct_email\n    recovery_page_open.click_resume_button()\n  File \"/home/runner/work/PulseWave/PulseWave/pages/password_recovery_page.py\", line 48, in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/pages/base_page.py\", line 60, in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 365, in _predicate\n    if element and element.is_enabled():\n                   ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 192, in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "30a4d2be885b4c78",
      "name" : "Screenshot",
      "source" : "30a4d2be885b4c78.png",
      "type" : "image/png",
      "size" : 81319
    }, {
      "uid" : "b0684166871e0112",
      "name" : "HTML source",
      "source" : "b0684166871e0112.html",
      "type" : "text/html",
      "size" : 96223
    } ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1718678487040,
      "stop" : 1718678487101,
      "duration" : 61
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Восстановление пароля'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_password_recovery"
  }, {
    "name" : "suite",
    "value" : "test_password_recovery"
  }, {
    "name" : "subSuite",
    "value" : "TestPasswordRecoveryPage"
  }, {
    "name" : "host",
    "value" : "fv-az883-206"
  }, {
    "name" : "thread",
    "value" : "2339-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_password_recovery.test_password_recovery"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 30,
        "passed" : 33,
        "unknown" : 0,
        "total" : 66
      },
      "items" : [ {
        "uid" : "8b658d5f7a49aaaf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/58//#testresult/8b658d5f7a49aaaf",
        "status" : "passed",
        "time" : {
          "start" : 1718592214005,
          "stop" : 1718592230668,
          "duration" : 16663
        }
      }, {
        "uid" : "78e22a5cf1f2342",
        "reportUrl" : "https://Nat754.github.io/PulseWave/57//#testresult/78e22a5cf1f2342",
        "status" : "passed",
        "time" : {
          "start" : 1718505742720,
          "stop" : 1718505757856,
          "duration" : 15136
        }
      }, {
        "uid" : "23f7fac78e86fb97",
        "reportUrl" : "https://Nat754.github.io/PulseWave/56//#testresult/23f7fac78e86fb97",
        "status" : "passed",
        "time" : {
          "start" : 1718419095327,
          "stop" : 1718419110269,
          "duration" : 14942
        }
      }, {
        "uid" : "21b36d6fe5bec250",
        "reportUrl" : "https://Nat754.github.io/PulseWave/55//#testresult/21b36d6fe5bec250",
        "status" : "passed",
        "time" : {
          "start" : 1718332811795,
          "stop" : 1718332826851,
          "duration" : 15056
        }
      }, {
        "uid" : "5a24c8a82a6a2b58",
        "reportUrl" : "https://Nat754.github.io/PulseWave/54//#testresult/5a24c8a82a6a2b58",
        "status" : "passed",
        "time" : {
          "start" : 1718246605590,
          "stop" : 1718246622643,
          "duration" : 17053
        }
      }, {
        "uid" : "137caf38d97d8c0f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/53//#testresult/137caf38d97d8c0f",
        "status" : "passed",
        "time" : {
          "start" : 1718160273026,
          "stop" : 1718160289906,
          "duration" : 16880
        }
      }, {
        "uid" : "6ee2e486c0d9dadf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/52//#testresult/6ee2e486c0d9dadf",
        "status" : "passed",
        "time" : {
          "start" : 1718073653613,
          "stop" : 1718073669169,
          "duration" : 15556
        }
      }, {
        "uid" : "3dc06458a704fc91",
        "reportUrl" : "https://Nat754.github.io/PulseWave/51//#testresult/3dc06458a704fc91",
        "status" : "passed",
        "time" : {
          "start" : 1717987290403,
          "stop" : 1717987305688,
          "duration" : 15285
        }
      }, {
        "uid" : "a8222f3aeaa04e59",
        "reportUrl" : "https://Nat754.github.io/PulseWave/50//#testresult/a8222f3aeaa04e59",
        "status" : "passed",
        "time" : {
          "start" : 1717901193807,
          "stop" : 1717901210307,
          "duration" : 16500
        }
      }, {
        "uid" : "627a651277fb294b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/49//#testresult/627a651277fb294b",
        "status" : "passed",
        "time" : {
          "start" : 1717814319286,
          "stop" : 1717814335822,
          "duration" : 16536
        }
      }, {
        "uid" : "4bb412c4dab899fe",
        "reportUrl" : "https://Nat754.github.io/PulseWave/48//#testresult/4bb412c4dab899fe",
        "status" : "passed",
        "time" : {
          "start" : 1717728179695,
          "stop" : 1717728196606,
          "duration" : 16911
        }
      }, {
        "uid" : "128cc5a4b28f56e4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/47//#testresult/128cc5a4b28f56e4",
        "status" : "passed",
        "time" : {
          "start" : 1717641655642,
          "stop" : 1717641672806,
          "duration" : 17164
        }
      }, {
        "uid" : "fea1aec533ae4a2d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/46//#testresult/fea1aec533ae4a2d",
        "status" : "passed",
        "time" : {
          "start" : 1717555073421,
          "stop" : 1717555088741,
          "duration" : 15320
        }
      }, {
        "uid" : "85c36175751b079d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/45//#testresult/85c36175751b079d",
        "status" : "passed",
        "time" : {
          "start" : 1717468717199,
          "stop" : 1717468733798,
          "duration" : 16599
        }
      }, {
        "uid" : "6745c8d10f101dbb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/44//#testresult/6745c8d10f101dbb",
        "status" : "passed",
        "time" : {
          "start" : 1717382586827,
          "stop" : 1717382603714,
          "duration" : 16887
        }
      }, {
        "uid" : "3fcebf77f5dc045d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/43//#testresult/3fcebf77f5dc045d",
        "status" : "passed",
        "time" : {
          "start" : 1717296071485,
          "stop" : 1717296086813,
          "duration" : 15328
        }
      }, {
        "uid" : "e2857f9163c89379",
        "reportUrl" : "https://Nat754.github.io/PulseWave/42//#testresult/e2857f9163c89379",
        "status" : "passed",
        "time" : {
          "start" : 1717209836583,
          "stop" : 1717209853387,
          "duration" : 16804
        }
      }, {
        "uid" : "3afeb6f8ccc2c7ee",
        "reportUrl" : "https://Nat754.github.io/PulseWave/41//#testresult/3afeb6f8ccc2c7ee",
        "status" : "passed",
        "time" : {
          "start" : 1717123272906,
          "stop" : 1717123289646,
          "duration" : 16740
        }
      }, {
        "uid" : "1dd4fdb3dc4514f2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/40//#testresult/1dd4fdb3dc4514f2",
        "status" : "passed",
        "time" : {
          "start" : 1717036646684,
          "stop" : 1717036661592,
          "duration" : 14908
        }
      }, {
        "uid" : "e0ec7e26bf17cc54",
        "reportUrl" : "https://Nat754.github.io/PulseWave/39//#testresult/e0ec7e26bf17cc54",
        "status" : "passed",
        "time" : {
          "start" : 1716950296688,
          "stop" : 1716950311707,
          "duration" : 15019
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "656b85d630c0babc.json",
  "parameterValues" : [ "'chrome'" ]
}