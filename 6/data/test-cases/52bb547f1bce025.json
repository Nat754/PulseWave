{
  "uid" : "52bb547f1bce025",
  "name" : "POST Активация пользователя с корректными данными",
  "fullName" : "tests.test_api.test_api.TestAPI#test_post_users_activation",
  "historyId" : "41cff5be4c2a881c5826f33ddc93442d",
  "time" : {
    "start" : 1714147833624,
    "stop" : 1714147837956,
    "duration" : 4332
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 200. Actual: 500",
  "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f88adc88620>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f88adc53740>\n\n    @pytest.mark.xfail\n    @allure.title(\"POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/activation/'\n        user_token = use_api_base.get_activate_email_tokens(email1, password1)\n        response = requests.post(url, json=user_token)\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714147821202,
      "stop" : 1714147821202,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "use_api_base",
    "time" : {
      "start" : 1714147833624,
      "stop" : 1714147833624,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714147821185,
      "stop" : 1714147821202,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Unexpected status code. Expected: 200. Actual: 500",
    "statusTrace" : "self = <tests.test_api.test_api.TestAPI object at 0x7f88adc88620>\nuse_api_base = <api_testing.api_base.ApiBase object at 0x7f88adc53740>\n\n    @pytest.mark.xfail\n    @allure.title(\"POST Активация пользователя с корректными данными\")\n    def test_post_users_activation(self, use_api_base):\n        url = f'{self.constant.BASE_URL}auth/users/activation/'\n        user_token = use_api_base.get_activate_email_tokens(email1, password1)\n        response = requests.post(url, json=user_token)\n>       Assertions.assert_status_code(response, self.code.STATUS_200)\n\ntests/test_api/test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int):\n        actual_status_code = response.status_code\n        with allure.step(f\"Expected status {expected_status_code}\"):\n>           assert actual_status_code == expected_status_code, \\\n                f\"Unexpected status code. Expected: {expected_status_code}. Actual: {actual_status_code}\"\nE           AssertionError: Unexpected status code. Expected: 200. Actual: 500\n\napi_testing/assertions.py:11: AssertionError",
    "steps" : [ {
      "name" : "Получить токен активации пользователя на емайл",
      "time" : {
        "start" : 1714147833624,
        "stop" : 1714147836125,
        "duration" : 2501
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Expected status 200",
      "time" : {
        "start" : 1714147837956,
        "stop" : 1714147837956,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Unexpected status code. Expected: 200. Actual: 500\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/api_testing/assertions.py\", line 11, in assert_status_code\n    assert actual_status_code == expected_status_code, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование API"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_api"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestAPI"
  }, {
    "name" : "host",
    "value" : "fv-az1380-734"
  }, {
    "name" : "thread",
    "value" : "2418-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 10,
        "passed" : 0,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "28ff6304808f6f8d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/28ff6304808f6f8d",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1714097893212,
          "stop" : 1714097895510,
          "duration" : 2298
        }
      }, {
        "uid" : "706f78c2dcf38a4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/706f78c2dcf38a4",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1714013819066,
          "stop" : 1714013820872,
          "duration" : 1806
        }
      }, {
        "uid" : "7eb3138e7a23ee80",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/7eb3138e7a23ee80",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1713945258880,
          "stop" : 1713945260612,
          "duration" : 1732
        }
      }, {
        "uid" : "6885177a0d17a41",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/6885177a0d17a41",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1713925084851,
          "stop" : 1713925086582,
          "duration" : 1731
        }
      }, {
        "uid" : "e58e95e1fad1a5d8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/e58e95e1fad1a5d8",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1713900889612,
          "stop" : 1713900891528,
          "duration" : 1916
        }
      }, {
        "uid" : "37dfa85c96bef8a1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/37dfa85c96bef8a1",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1713884986161,
          "stop" : 1713884989108,
          "duration" : 2947
        }
      }, {
        "uid" : "7348fa4251c9072b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/7348fa4251c9072b",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1713882928654,
          "stop" : 1713882931049,
          "duration" : 2395
        }
      }, {
        "uid" : "fc4eb5f2a159af58",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/fc4eb5f2a159af58",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1713881404126,
          "stop" : 1713881406500,
          "duration" : 2374
        }
      }, {
        "uid" : "4d7d3b75fc6ef542",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/4d7d3b75fc6ef542",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1713878582511,
          "stop" : 1713878584819,
          "duration" : 2308
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "52bb547f1bce025.json",
  "parameterValues" : [ ]
}