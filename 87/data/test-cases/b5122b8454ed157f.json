{
  "uid" : "b5122b8454ed157f",
  "name" : "3.2, 3.2.1 Восстановить пароль на корректный емайл",
  "fullName" : "tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage#test_recovery_password_to_fill_correct_email",
  "historyId" : "3fbb91d2b204c3d1abb80d32ac377e08",
  "time" : {
    "start" : 1721097500680,
    "stop" : 1721097514955,
    "duration" : 14275
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x559f41e2bc7a <unknown>\n#1 0x559f41b0ee2c <unknown>\n#2 0x559f41b14539 <unknown>\n#3 0x559f41b162e5 <unknown>\n#4 0x559f41b1636c <unknown>\n#5 0x559f41b55e64 <unknown>\n#6 0x559f41b7e5c2 <unknown>\n#7 0x559f41b4fad9 <unknown>\n#8 0x559f41b7e78e <unknown>\n#9 0x559f41b9d303 <unknown>\n#10 0x559f41b7e363 <unknown>\n#11 0x559f41b4e247 <unknown>\n#12 0x559f41b4eb9e <unknown>\n#13 0x559f41df224b <unknown>\n#14 0x559f41df62f1 <unknown>\n#15 0x559f41dddafe <unknown>\n#16 0x559f41df6e52 <unknown>\n#17 0x559f41dc279f <unknown>\n#18 0x559f41e1b638 <unknown>\n#19 0x559f41e1b810 <unknown>\n#20 0x559f41e2adac <unknown>\n#21 0x7fe3a3e94ac3 <unknown>",
  "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7f29783fbe60>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7f297841b6e0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6eccab73a4049e05dc28ea1f49c1e76a\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        time.sleep(10)  # Получить ссылку на емайл\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:48: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:60: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:365: in _predicate\n    if element and element.is_enabled():\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f29784348f0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x559f41e1b810 \\\\u003Cunknown>\\\\n#20 0x559f41e2adac \\\\u003Cunknown>\\\\n#21 0x7fe3a3e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x559f41e2bc7a <unknown>\nE       #1 0x559f41b0ee2c <unknown>\nE       #2 0x559f41b14539 <unknown>\nE       #3 0x559f41b162e5 <unknown>\nE       #4 0x559f41b1636c <unknown>\nE       #5 0x559f41b55e64 <unknown>\nE       #6 0x559f41b7e5c2 <unknown>\nE       #7 0x559f41b4fad9 <unknown>\nE       #8 0x559f41b7e78e <unknown>\nE       #9 0x559f41b9d303 <unknown>\nE       #10 0x559f41b7e363 <unknown>\nE       #11 0x559f41b4e247 <unknown>\nE       #12 0x559f41b4eb9e <unknown>\nE       #13 0x559f41df224b <unknown>\nE       #14 0x559f41df62f1 <unknown>\nE       #15 0x559f41dddafe <unknown>\nE       #16 0x559f41df6e52 <unknown>\nE       #17 0x559f41dc279f <unknown>\nE       #18 0x559f41e1b638 <unknown>\nE       #19 0x559f41e1b810 <unknown>\nE       #20 0x559f41e2adac <unknown>\nE       #21 0x7fe3a3e94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "recovery_page_open",
    "time" : {
      "start" : 1721097497939,
      "stop" : 1721097500680,
      "duration" : 2741
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1721097500620,
        "stop" : 1721097500646,
        "duration" : 26
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 1
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1721096968249,
      "stop" : 1721096968249,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1721096968232,
      "stop" : 1721096968249,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1721097497740,
      "stop" : 1721097497939,
      "duration" : 199
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x559f41e2bc7a <unknown>\n#1 0x559f41b0ee2c <unknown>\n#2 0x559f41b14539 <unknown>\n#3 0x559f41b162e5 <unknown>\n#4 0x559f41b1636c <unknown>\n#5 0x559f41b55e64 <unknown>\n#6 0x559f41b7e5c2 <unknown>\n#7 0x559f41b4fad9 <unknown>\n#8 0x559f41b7e78e <unknown>\n#9 0x559f41b9d303 <unknown>\n#10 0x559f41b7e363 <unknown>\n#11 0x559f41b4e247 <unknown>\n#12 0x559f41b4eb9e <unknown>\n#13 0x559f41df224b <unknown>\n#14 0x559f41df62f1 <unknown>\n#15 0x559f41dddafe <unknown>\n#16 0x559f41df6e52 <unknown>\n#17 0x559f41dc279f <unknown>\n#18 0x559f41e1b638 <unknown>\n#19 0x559f41e1b810 <unknown>\n#20 0x559f41e2adac <unknown>\n#21 0x7fe3a3e94ac3 <unknown>",
    "statusTrace" : "self = <tests.test_password_recovery.test_password_recovery.TestPasswordRecoveryPage object at 0x7f29783fbe60>\nrecovery_page_open = <pages.password_recovery_page.PasswordRecoveryPage object at 0x7f297841b6e0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6eccab73a4049e05dc28ea1f49c1e76a\")>\n\n    @allure.title(\"3.2, 3.2.1 Восстановить пароль на корректный емайл\")\n    @pytest.mark.regress\n    def test_recovery_password_to_fill_correct_email(self, recovery_page_open, driver):\n        with allure.step('Заполнить поле емайл'):\n            recovery_page_open.fill_email_to_recovery_password(email_auth)\n        with allure.step(\"Нажать кнопку 'Продолжить'\"):\n            recovery_page_open.click_resume_button()\n        time.sleep(10)  # Получить ссылку на емайл\n        link = self.page.get_link_recovery_password_by_email()\n        driver.get(link)\n        with allure.step('Ввести пароль в поле пароль'):\n            recovery_page_open.fill_password_recovery(password0)\n        with allure.step('Ввести пароль в поле подтверждение пароля'):\n            recovery_page_open.fill_confirm_password_recovery(password0)\n        with allure.step(\"Нажать кнопку 'Сохранить пароль'\"):\n            recovery_page_open.click_resume_button()\n        with allure.step(\"Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации\"):\n>           recovery_page_open.click_resume_button()\n\ntests/test_password_recovery/test_password_recovery.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:48: in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\npages/base_page.py:60: in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:365: in _predicate\n    if element and element.is_enabled():\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:192: in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f29784348f0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#19 0x559f41e1b810 \\\\u003Cunknown>\\\\n#20 0x559f41e2adac \\\\u003Cunknown>\\\\n#21 0x7fe3a3e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x559f41e2bc7a <unknown>\nE       #1 0x559f41b0ee2c <unknown>\nE       #2 0x559f41b14539 <unknown>\nE       #3 0x559f41b162e5 <unknown>\nE       #4 0x559f41b1636c <unknown>\nE       #5 0x559f41b55e64 <unknown>\nE       #6 0x559f41b7e5c2 <unknown>\nE       #7 0x559f41b4fad9 <unknown>\nE       #8 0x559f41b7e78e <unknown>\nE       #9 0x559f41b9d303 <unknown>\nE       #10 0x559f41b7e363 <unknown>\nE       #11 0x559f41b4e247 <unknown>\nE       #12 0x559f41b4eb9e <unknown>\nE       #13 0x559f41df224b <unknown>\nE       #14 0x559f41df62f1 <unknown>\nE       #15 0x559f41dddafe <unknown>\nE       #16 0x559f41df6e52 <unknown>\nE       #17 0x559f41dc279f <unknown>\nE       #18 0x559f41e1b638 <unknown>\nE       #19 0x559f41e1b810 <unknown>\nE       #20 0x559f41e2adac <unknown>\nE       #21 0x7fe3a3e94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Заполнить поле емайл",
      "time" : {
        "start" : 1721097500680,
        "stop" : 1721097500756,
        "duration" : 76
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Нажать кнопку 'Продолжить'",
      "time" : {
        "start" : 1721097500756,
        "stop" : 1721097500806,
        "duration" : 50
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Получить ссылку для смены пароля на email",
      "time" : {
        "start" : 1721097510806,
        "stop" : 1721097513498,
        "duration" : 2692
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Ввести пароль в поле пароль",
      "time" : {
        "start" : 1721097513722,
        "stop" : 1721097513784,
        "duration" : 62
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Ввести пароль в поле подтверждение пароля",
      "time" : {
        "start" : 1721097513784,
        "stop" : 1721097513840,
        "duration" : 56
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Нажать кнопку 'Сохранить пароль'",
      "time" : {
        "start" : 1721097513840,
        "stop" : 1721097513888,
        "duration" : 48
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Нажать кнопку 'Ок' - подтвердить переход на страницу авторизации",
      "time" : {
        "start" : 1721097513888,
        "stop" : 1721097514954,
        "duration" : 1066
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x559f41e2bc7a <unknown>\n#1 0x559f41b0ee2c <unknown>\n#2 0x559f41b14539 <unknown>\n#3 0x559f41b162e5 <unknown>\n#4 0x559f41b1636c <unknown>\n#5 0x559f41b55e64 <unknown>\n#6 0x559f41b7e5c2 <unknown>\n#7 0x559f41b4fad9 <unknown>\n#8 0x559f41b7e78e <unknown>\n#9 0x559f41b9d303 <unknown>\n#10 0x559f41b7e363 <unknown>\n#11 0x559f41b4e247 <unknown>\n#12 0x559f41b4eb9e <unknown>\n#13 0x559f41df224b <unknown>\n#14 0x559f41df62f1 <unknown>\n#15 0x559f41dddafe <unknown>\n#16 0x559f41df6e52 <unknown>\n#17 0x559f41dc279f <unknown>\n#18 0x559f41e1b638 <unknown>\n#19 0x559f41e1b810 <unknown>\n#20 0x559f41e2adac <unknown>\n#21 0x7fe3a3e94ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_password_recovery/test_password_recovery.py\", line 67, in test_recovery_password_to_fill_correct_email\n    recovery_page_open.click_resume_button()\n  File \"/home/runner/work/PulseWave/PulseWave/pages/password_recovery_page.py\", line 48, in click_resume_button\n    return self.element_is_clickable(self.locator.SUBMIT_BUTTON).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/pages/base_page.py\", line 60, in element_is_clickable\n    return Wait(self.driver, self.timeout).until(es.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 365, in _predicate\n    if element and element.is_enabled():\n                   ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 192, in is_enabled\n    return self._execute(Command.IS_ELEMENT_ENABLED)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "a33ecac17b13c244",
      "name" : "Screenshot",
      "source" : "a33ecac17b13c244.png",
      "type" : "image/png",
      "size" : 81319
    }, {
      "uid" : "b88cd854d23e7a34",
      "name" : "HTML source",
      "source" : "b88cd854d23e7a34.html",
      "type" : "text/html",
      "size" : 96223
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 7
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1721097515130,
      "stop" : 1721097515193,
      "duration" : 63
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Восстановление пароля'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_password_recovery"
  }, {
    "name" : "suite",
    "value" : "test_password_recovery"
  }, {
    "name" : "subSuite",
    "value" : "TestPasswordRecoveryPage"
  }, {
    "name" : "host",
    "value" : "fv-az768-641"
  }, {
    "name" : "thread",
    "value" : "2260-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_password_recovery.test_password_recovery"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 4,
        "skipped" : 30,
        "passed" : 60,
        "unknown" : 0,
        "total" : 94
      },
      "items" : [ {
        "uid" : "e779b3a3c1b751e3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/86//#testresult/e779b3a3c1b751e3",
        "status" : "passed",
        "time" : {
          "start" : 1721011238699,
          "stop" : 1721011254183,
          "duration" : 15484
        }
      }, {
        "uid" : "95d2e23f06aa0e64",
        "reportUrl" : "https://Nat754.github.io/PulseWave/85//#testresult/95d2e23f06aa0e64",
        "status" : "passed",
        "time" : {
          "start" : 1720925053461,
          "stop" : 1720925069423,
          "duration" : 15962
        }
      }, {
        "uid" : "141497cee1720a3d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/84//#testresult/141497cee1720a3d",
        "status" : "passed",
        "time" : {
          "start" : 1720838201775,
          "stop" : 1720838218618,
          "duration" : 16843
        }
      }, {
        "uid" : "d7f0a38e9eedf8a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/83//#testresult/d7f0a38e9eedf8a",
        "status" : "passed",
        "time" : {
          "start" : 1720751759896,
          "stop" : 1720751776076,
          "duration" : 16180
        }
      }, {
        "uid" : "6e662666c3bbc162",
        "reportUrl" : "https://Nat754.github.io/PulseWave/82//#testresult/6e662666c3bbc162",
        "status" : "passed",
        "time" : {
          "start" : 1720665818107,
          "stop" : 1720665832896,
          "duration" : 14789
        }
      }, {
        "uid" : "57324a3e8c3df98b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/81//#testresult/57324a3e8c3df98b",
        "status" : "passed",
        "time" : {
          "start" : 1720579336092,
          "stop" : 1720579352289,
          "duration" : 16197
        }
      }, {
        "uid" : "9a6d78dc2b8975f9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/80//#testresult/9a6d78dc2b8975f9",
        "status" : "passed",
        "time" : {
          "start" : 1720492895320,
          "stop" : 1720492911504,
          "duration" : 16184
        }
      }, {
        "uid" : "72396f34d68ebc34",
        "reportUrl" : "https://Nat754.github.io/PulseWave/79//#testresult/72396f34d68ebc34",
        "status" : "passed",
        "time" : {
          "start" : 1720406757103,
          "stop" : 1720406773859,
          "duration" : 16756
        }
      }, {
        "uid" : "a041b8fbe9e3f7ef",
        "reportUrl" : "https://Nat754.github.io/PulseWave/78//#testresult/a041b8fbe9e3f7ef",
        "status" : "passed",
        "time" : {
          "start" : 1720320235828,
          "stop" : 1720320251847,
          "duration" : 16019
        }
      }, {
        "uid" : "752beaeb50310725",
        "reportUrl" : "https://Nat754.github.io/PulseWave/77//#testresult/752beaeb50310725",
        "status" : "passed",
        "time" : {
          "start" : 1720233451229,
          "stop" : 1720233466660,
          "duration" : 15431
        }
      }, {
        "uid" : "378864be6536c36a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/76//#testresult/378864be6536c36a",
        "status" : "passed",
        "time" : {
          "start" : 1720147158627,
          "stop" : 1720147173890,
          "duration" : 15263
        }
      }, {
        "uid" : "e4a1da1ea5763398",
        "reportUrl" : "https://Nat754.github.io/PulseWave/75//#testresult/e4a1da1ea5763398",
        "status" : "passed",
        "time" : {
          "start" : 1720060842390,
          "stop" : 1720060857828,
          "duration" : 15438
        }
      }, {
        "uid" : "80ad079e5ee5547a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/74//#testresult/80ad079e5ee5547a",
        "status" : "passed",
        "time" : {
          "start" : 1719974343509,
          "stop" : 1719974358651,
          "duration" : 15142
        }
      }, {
        "uid" : "c49a6f5179d9f47a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/73//#testresult/c49a6f5179d9f47a",
        "status" : "passed",
        "time" : {
          "start" : 1719888005472,
          "stop" : 1719888020231,
          "duration" : 14759
        }
      }, {
        "uid" : "2be2f4bc5a7b0ded",
        "reportUrl" : "https://Nat754.github.io/PulseWave/72//#testresult/2be2f4bc5a7b0ded",
        "status" : "passed",
        "time" : {
          "start" : 1719802021204,
          "stop" : 1719802036491,
          "duration" : 15287
        }
      }, {
        "uid" : "4001fa85a35b4c18",
        "reportUrl" : "https://Nat754.github.io/PulseWave/71//#testresult/4001fa85a35b4c18",
        "status" : "passed",
        "time" : {
          "start" : 1719715452301,
          "stop" : 1719715467439,
          "duration" : 15138
        }
      }, {
        "uid" : "8d0bba98f0832dad",
        "reportUrl" : "https://Nat754.github.io/PulseWave/70//#testresult/8d0bba98f0832dad",
        "status" : "passed",
        "time" : {
          "start" : 1719628947962,
          "stop" : 1719628965099,
          "duration" : 17137
        }
      }, {
        "uid" : "22dfe6324b45e6d9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/69//#testresult/22dfe6324b45e6d9",
        "status" : "passed",
        "time" : {
          "start" : 1719542601654,
          "stop" : 1719542617298,
          "duration" : 15644
        }
      }, {
        "uid" : "c95412096a76007f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/68//#testresult/c95412096a76007f",
        "status" : "passed",
        "time" : {
          "start" : 1719455938422,
          "stop" : 1719455954505,
          "duration" : 16083
        }
      }, {
        "uid" : "d81e211d49e974b5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/67//#testresult/d81e211d49e974b5",
        "status" : "passed",
        "time" : {
          "start" : 1719369758826,
          "stop" : 1719369775487,
          "duration" : 16661
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "b5122b8454ed157f.json",
  "parameterValues" : [ "'chrome'" ]
}