{
  "uid" : "14ce7f9eb372fe44",
  "name" : "1.31- 1.34 Регистрация с корректным email и слабым паролем и подтверждением пароля",
  "fullName" : "tests.test_signup_page.test_signup_page.TestSignupPage#test_signup_with_weak_password",
  "historyId" : "5ac9f9e163e2cfff37a0ef13ee82f6ed",
  "time" : {
    "start" : 1714357272009,
    "stop" : 1714357272009,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x563feb183e33 <unknown>\n#1 0x563feae73567 <unknown>\n#2 0x563feae6b879 <unknown>\n#3 0x563feae5b852 <unknown>\n#4 0x563feae5ce44 <unknown>\n#5 0x563feae5bbbe <unknown>\n#6 0x563feae5b2e0 <unknown>\n#7 0x563feae5b181 <unknown>\n#8 0x563feae590ec <unknown>\n#9 0x563feae5960a <unknown>\n#10 0x563feae75eef <unknown>\n#11 0x563feaeff695 <unknown>\n#12 0x563feaee0362 <unknown>\n#13 0x563feaefeae2 <unknown>\n#14 0x563feaee0103 <unknown>\n#15 0x563feaeb11ba <unknown>\n#16 0x563feaeb1b8e <unknown>\n#17 0x563feb14859b <unknown>\n#18 0x563feb14c34b <unknown>\n#19 0x563feb134681 <unknown>\n#20 0x563feb14ceb2 <unknown>\n#21 0x563feb1196af <unknown>\n#22 0x563feb173428 <unknown>\n#23 0x563feb173600 <unknown>\n#24 0x563feb182f84 <unknown>\n#25 0x7f9c87294ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e180d0f097c65b1a4655ac35e0dccf96\")>\n\n    @pytest.fixture(scope='function')\n    def signup_page_open(driver):\n        signup_page = SignUpPage(driver)\n>       driver.get(Constant.SIGNUP_PAGE)\n\ntests/test_signup_page/conftest.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7971c68dd0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x563feb173600 \\\\u003Cunknown>\\\\n#24 0x563feb182f84 \\\\u003Cunknown>\\\\n#25 0x7f9c87294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x563feb183e33 <unknown>\nE       #1 0x563feae73567 <unknown>\nE       #2 0x563feae6b879 <unknown>\nE       #3 0x563feae5b852 <unknown>\nE       #4 0x563feae5ce44 <unknown>\nE       #5 0x563feae5bbbe <unknown>\nE       #6 0x563feae5b2e0 <unknown>\nE       #7 0x563feae5b181 <unknown>\nE       #8 0x563feae590ec <unknown>\nE       #9 0x563feae5960a <unknown>\nE       #10 0x563feae75eef <unknown>\nE       #11 0x563feaeff695 <unknown>\nE       #12 0x563feaee0362 <unknown>\nE       #13 0x563feaefeae2 <unknown>\nE       #14 0x563feaee0103 <unknown>\nE       #15 0x563feaeb11ba <unknown>\nE       #16 0x563feaeb1b8e <unknown>\nE       #17 0x563feb14859b <unknown>\nE       #18 0x563feb14c34b <unknown>\nE       #19 0x563feb134681 <unknown>\nE       #20 0x563feb14ceb2 <unknown>\nE       #21 0x563feb1196af <unknown>\nE       #22 0x563feb173428 <unknown>\nE       #23 0x563feb173600 <unknown>\nE       #24 0x563feb182f84 <unknown>\nE       #25 0x7f9c87294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "signup_page_open",
    "time" : {
      "start" : 1714357272208,
      "stop" : 1714357272361,
      "duration" : 153
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x563feb183e33 <unknown>\n#1 0x563feae73567 <unknown>\n#2 0x563feae6b879 <unknown>\n#3 0x563feae5b852 <unknown>\n#4 0x563feae5ce44 <unknown>\n#5 0x563feae5bbbe <unknown>\n#6 0x563feae5b2e0 <unknown>\n#7 0x563feae5b181 <unknown>\n#8 0x563feae590ec <unknown>\n#9 0x563feae5960a <unknown>\n#10 0x563feae75eef <unknown>\n#11 0x563feaeff695 <unknown>\n#12 0x563feaee0362 <unknown>\n#13 0x563feaefeae2 <unknown>\n#14 0x563feaee0103 <unknown>\n#15 0x563feaeb11ba <unknown>\n#16 0x563feaeb1b8e <unknown>\n#17 0x563feb14859b <unknown>\n#18 0x563feb14c34b <unknown>\n#19 0x563feb134681 <unknown>\n#20 0x563feb14ceb2 <unknown>\n#21 0x563feb1196af <unknown>\n#22 0x563feb173428 <unknown>\n#23 0x563feb173600 <unknown>\n#24 0x563feb182f84 <unknown>\n#25 0x7f9c87294ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/tests/test_signup_page/conftest.py\", line 9, in signup_page_open\n    driver.get(Constant.SIGNUP_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714357159972,
      "stop" : 1714357159973,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714357159955,
      "stop" : 1714357159972,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1714357272009,
      "stop" : 1714357272208,
      "duration" : 199
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1714357272421,
      "stop" : 1714357272478,
      "duration" : 57
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Регистрация'"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_signup_page"
  }, {
    "name" : "suite",
    "value" : "test_signup_page"
  }, {
    "name" : "subSuite",
    "value" : "TestSignupPage"
  }, {
    "name" : "host",
    "value" : "fv-az842-111"
  }, {
    "name" : "thread",
    "value" : "2300-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_signup_page.test_signup_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  }, {
    "name" : "data_password",
    "value" : "'!1password'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "423c3a4afcc7b51a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/423c3a4afcc7b51a",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x563a02610e33 <unknown>\n#1 0x563a02300567 <unknown>\n#2 0x563a0234b27d <unknown>\n#3 0x563a0234b331 <unknown>\n#4 0x563a0238e624 <unknown>\n#5 0x563a0236d38d <unknown>\n#6 0x563a0238bae2 <unknown>\n#7 0x563a0236d103 <unknown>\n#8 0x563a0233e1ba <unknown>\n#9 0x563a0233eb8e <unknown>\n#10 0x563a025d559b <unknown>\n#11 0x563a025d934b <unknown>\n#12 0x563a025c1681 <unknown>\n#13 0x563a025d9eb2 <unknown>\n#14 0x563a025a66af <unknown>\n#15 0x563a02600428 <unknown>\n#16 0x563a02600600 <unknown>\n#17 0x563a0260ff84 <unknown>\n#18 0x7fd79b094ac3 <unknown>",
        "time" : {
          "start" : 1714274336563,
          "stop" : 1714274336563,
          "duration" : 0
        }
      }, {
        "uid" : "1802e595e1705dec",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/1802e595e1705dec",
        "status" : "passed",
        "time" : {
          "start" : 1714185393579,
          "stop" : 1714185393855,
          "duration" : 276
        }
      }, {
        "uid" : "1929df701183e1c9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/1929df701183e1c9",
        "status" : "passed",
        "time" : {
          "start" : 1714148807774,
          "stop" : 1714148808057,
          "duration" : 283
        }
      }, {
        "uid" : "6edfde00cb9b580f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/6edfde00cb9b580f",
        "status" : "passed",
        "time" : {
          "start" : 1714098857608,
          "stop" : 1714098857877,
          "duration" : 269
        }
      }, {
        "uid" : "d88fc3a7c2f72d1a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/d88fc3a7c2f72d1a",
        "status" : "passed",
        "time" : {
          "start" : 1714014700678,
          "stop" : 1714014700996,
          "duration" : 318
        }
      }, {
        "uid" : "aa922866157251f4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/aa922866157251f4",
        "status" : "passed",
        "time" : {
          "start" : 1713946212536,
          "stop" : 1713946212816,
          "duration" : 280
        }
      }, {
        "uid" : "b7414282047e1e26",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/b7414282047e1e26",
        "status" : "passed",
        "time" : {
          "start" : 1713926004388,
          "stop" : 1713926004704,
          "duration" : 316
        }
      }, {
        "uid" : "3a1cf542eb4529d8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/3a1cf542eb4529d8",
        "status" : "passed",
        "time" : {
          "start" : 1713901886972,
          "stop" : 1713901887291,
          "duration" : 319
        }
      }, {
        "uid" : "eed9e15d245c54be",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/eed9e15d245c54be",
        "status" : "passed",
        "time" : {
          "start" : 1713886134918,
          "stop" : 1713886135201,
          "duration" : 283
        }
      }, {
        "uid" : "9387626b186c4cba",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/9387626b186c4cba",
        "status" : "passed",
        "time" : {
          "start" : 1713884020692,
          "stop" : 1713884020962,
          "duration" : 270
        }
      }, {
        "uid" : "3c17377afe080fa7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/3c17377afe080fa7",
        "status" : "passed",
        "time" : {
          "start" : 1713882553198,
          "stop" : 1713882553478,
          "duration" : 280
        }
      }, {
        "uid" : "20231f33736af612",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/20231f33736af612",
        "status" : "passed",
        "time" : {
          "start" : 1713879730577,
          "stop" : 1713879730863,
          "duration" : 286
        }
      } ]
    },
    "tags" : [ "smoke" ]
  },
  "source" : "14ce7f9eb372fe44.json",
  "parameterValues" : [ "'chrome'", "'!1password'" ]
}