{
  "uid" : "46f10db1a8c679c5",
  "name" : "Проверка текста кнопки 'Войти'",
  "fullName" : "tests.test_header.test_header.TestHeader#test_get_text_header_auth_login",
  "historyId" : "96464695b5a6072f027cb003d18a5575",
  "time" : {
    "start" : 1714357226904,
    "stop" : 1714357226904,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x561641d99e33 <unknown>\n#1 0x561641a89567 <unknown>\n#2 0x561641a81879 <unknown>\n#3 0x561641a71852 <unknown>\n#4 0x561641a72e44 <unknown>\n#5 0x561641a71bbe <unknown>\n#6 0x561641a712e0 <unknown>\n#7 0x561641a71181 <unknown>\n#8 0x561641a6f0ec <unknown>\n#9 0x561641a6f60a <unknown>\n#10 0x561641a8beef <unknown>\n#11 0x561641b15695 <unknown>\n#12 0x561641af6362 <unknown>\n#13 0x561641b14ae2 <unknown>\n#14 0x561641af6103 <unknown>\n#15 0x561641ac71ba <unknown>\n#16 0x561641ac7b8e <unknown>\n#17 0x561641d5e59b <unknown>\n#18 0x561641d6234b <unknown>\n#19 0x561641d4a681 <unknown>\n#20 0x561641d62eb2 <unknown>\n#21 0x561641d2f6af <unknown>\n#22 0x561641d89428 <unknown>\n#23 0x561641d89600 <unknown>\n#24 0x561641d98f84 <unknown>\n#25 0x7fb72e694ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"93ceb62ae8d80e8f77bf1c72af30f5d2\")>\nurl = 'https://pulsewave.ru/auth/signup'\n\n    @pytest.fixture()\n    def header_open(driver, url):\n        page = HeaderPage(driver)\n>       driver.get(url)\n\ntests/test_header/conftest.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7971c3b4a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x561641d89600 \\\\u003Cunknown>\\\\n#24 0x561641d98f84 \\\\u003Cunknown>\\\\n#25 0x7fb72e694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x561641d99e33 <unknown>\nE       #1 0x561641a89567 <unknown>\nE       #2 0x561641a81879 <unknown>\nE       #3 0x561641a71852 <unknown>\nE       #4 0x561641a72e44 <unknown>\nE       #5 0x561641a71bbe <unknown>\nE       #6 0x561641a712e0 <unknown>\nE       #7 0x561641a71181 <unknown>\nE       #8 0x561641a6f0ec <unknown>\nE       #9 0x561641a6f60a <unknown>\nE       #10 0x561641a8beef <unknown>\nE       #11 0x561641b15695 <unknown>\nE       #12 0x561641af6362 <unknown>\nE       #13 0x561641b14ae2 <unknown>\nE       #14 0x561641af6103 <unknown>\nE       #15 0x561641ac71ba <unknown>\nE       #16 0x561641ac7b8e <unknown>\nE       #17 0x561641d5e59b <unknown>\nE       #18 0x561641d6234b <unknown>\nE       #19 0x561641d4a681 <unknown>\nE       #20 0x561641d62eb2 <unknown>\nE       #21 0x561641d2f6af <unknown>\nE       #22 0x561641d89428 <unknown>\nE       #23 0x561641d89600 <unknown>\nE       #24 0x561641d98f84 <unknown>\nE       #25 0x7fb72e694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714357159972,
      "stop" : 1714357159973,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "header_open",
    "time" : {
      "start" : 1714357227102,
      "stop" : 1714357227258,
      "duration" : 156
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x561641d99e33 <unknown>\n#1 0x561641a89567 <unknown>\n#2 0x561641a81879 <unknown>\n#3 0x561641a71852 <unknown>\n#4 0x561641a72e44 <unknown>\n#5 0x561641a71bbe <unknown>\n#6 0x561641a712e0 <unknown>\n#7 0x561641a71181 <unknown>\n#8 0x561641a6f0ec <unknown>\n#9 0x561641a6f60a <unknown>\n#10 0x561641a8beef <unknown>\n#11 0x561641b15695 <unknown>\n#12 0x561641af6362 <unknown>\n#13 0x561641b14ae2 <unknown>\n#14 0x561641af6103 <unknown>\n#15 0x561641ac71ba <unknown>\n#16 0x561641ac7b8e <unknown>\n#17 0x561641d5e59b <unknown>\n#18 0x561641d6234b <unknown>\n#19 0x561641d4a681 <unknown>\n#20 0x561641d62eb2 <unknown>\n#21 0x561641d2f6af <unknown>\n#22 0x561641d89428 <unknown>\n#23 0x561641d89600 <unknown>\n#24 0x561641d98f84 <unknown>\n#25 0x7fb72e694ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/tests/test_header/conftest.py\", line 8, in header_open\n    driver.get(url)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714357159955,
      "stop" : 1714357159972,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1714357226904,
      "stop" : 1714357227102,
      "duration" : 198
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1714357227288,
      "stop" : 1714357227346,
      "duration" : 58
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование Хедера"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_header"
  }, {
    "name" : "suite",
    "value" : "test_header"
  }, {
    "name" : "subSuite",
    "value" : "TestHeader"
  }, {
    "name" : "host",
    "value" : "fv-az842-111"
  }, {
    "name" : "thread",
    "value" : "2300-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_header.test_header"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  }, {
    "name" : "url",
    "value" : "'https://pulsewave.ru/auth/signup'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "1ac6c7ccec365ace",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/1ac6c7ccec365ace",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557dd1523e33 <unknown>\n#1 0x557dd1213567 <unknown>\n#2 0x557dd125e27d <unknown>\n#3 0x557dd125e331 <unknown>\n#4 0x557dd12a1624 <unknown>\n#5 0x557dd128038d <unknown>\n#6 0x557dd129eae2 <unknown>\n#7 0x557dd1280103 <unknown>\n#8 0x557dd12511ba <unknown>\n#9 0x557dd1251b8e <unknown>\n#10 0x557dd14e859b <unknown>\n#11 0x557dd14ec34b <unknown>\n#12 0x557dd14d4681 <unknown>\n#13 0x557dd14eceb2 <unknown>\n#14 0x557dd14b96af <unknown>\n#15 0x557dd1513428 <unknown>\n#16 0x557dd1513600 <unknown>\n#17 0x557dd1522f84 <unknown>\n#18 0x7f8edc094ac3 <unknown>",
        "time" : {
          "start" : 1714272191610,
          "stop" : 1714272191610,
          "duration" : 0
        }
      }, {
        "uid" : "28f43f026009aae",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/28f43f026009aae",
        "status" : "passed",
        "time" : {
          "start" : 1714184900724,
          "stop" : 1714184900763,
          "duration" : 39
        }
      }, {
        "uid" : "ea44c03a341b5076",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/ea44c03a341b5076",
        "status" : "passed",
        "time" : {
          "start" : 1714148384565,
          "stop" : 1714148384604,
          "duration" : 39
        }
      }, {
        "uid" : "66464170aafb6212",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/66464170aafb6212",
        "status" : "passed",
        "time" : {
          "start" : 1714098432552,
          "stop" : 1714098432590,
          "duration" : 38
        }
      }, {
        "uid" : "5e13b83f8f391d04",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/5e13b83f8f391d04",
        "status" : "passed",
        "time" : {
          "start" : 1714014325598,
          "stop" : 1714014325635,
          "duration" : 37
        }
      }, {
        "uid" : "650d7180b0b094f7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/650d7180b0b094f7",
        "status" : "passed",
        "time" : {
          "start" : 1713945816592,
          "stop" : 1713945816628,
          "duration" : 36
        }
      }, {
        "uid" : "dc6760f04b1419ee",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/dc6760f04b1419ee",
        "status" : "passed",
        "time" : {
          "start" : 1713925609420,
          "stop" : 1713925609458,
          "duration" : 38
        }
      }, {
        "uid" : "31e0727fccd361a8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/31e0727fccd361a8",
        "status" : "passed",
        "time" : {
          "start" : 1713901454022,
          "stop" : 1713901454062,
          "duration" : 40
        }
      }, {
        "uid" : "ea1a157ad5c33ec5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/ea1a157ad5c33ec5",
        "status" : "passed",
        "time" : {
          "start" : 1713885635751,
          "stop" : 1713885635790,
          "duration" : 39
        }
      }, {
        "uid" : "26cc405cd4bee4ec",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/26cc405cd4bee4ec",
        "status" : "passed",
        "time" : {
          "start" : 1713883538496,
          "stop" : 1713883538534,
          "duration" : 38
        }
      }, {
        "uid" : "d4d24cf3f71db639",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/d4d24cf3f71db639",
        "status" : "passed",
        "time" : {
          "start" : 1713882051474,
          "stop" : 1713882051514,
          "duration" : 40
        }
      }, {
        "uid" : "79987122f398c3db",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/79987122f398c3db",
        "status" : "passed",
        "time" : {
          "start" : 1713879226583,
          "stop" : 1713879226623,
          "duration" : 40
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "46f10db1a8c679c5.json",
  "parameterValues" : [ "'chrome'", "'https://pulsewave.ru/auth/signup'" ]
}