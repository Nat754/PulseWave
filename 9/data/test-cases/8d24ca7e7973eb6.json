{
  "uid" : "8d24ca7e7973eb6",
  "name" : "test_get_css_property_footer_cooperation[font-size-16px-\\u0440\\u0430\\u0437\\u043c\\u0435\\u0440\\u0430 \\u0448\\u0440\\u0438\\u0444\\u0442\\u0430-https://pulsewave.ru/auth/login-chrome]",
  "fullName" : "tests.test_footer.test_footer.TestFooter#test_get_css_property_footer_cooperation",
  "historyId" : "d87592b0e58d8a472ddf84a8180ec557",
  "time" : {
    "start" : 1714357219834,
    "stop" : 1714357219834,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x562c789efe33 <unknown>\n#1 0x562c786df567 <unknown>\n#2 0x562c786d7879 <unknown>\n#3 0x562c786c7852 <unknown>\n#4 0x562c786c8e44 <unknown>\n#5 0x562c786c7bbe <unknown>\n#6 0x562c786c72e0 <unknown>\n#7 0x562c786c7181 <unknown>\n#8 0x562c786c50ec <unknown>\n#9 0x562c786c560a <unknown>\n#10 0x562c786e1eef <unknown>\n#11 0x562c7876b695 <unknown>\n#12 0x562c7874c362 <unknown>\n#13 0x562c7876aae2 <unknown>\n#14 0x562c7874c103 <unknown>\n#15 0x562c7871d1ba <unknown>\n#16 0x562c7871db8e <unknown>\n#17 0x562c789b459b <unknown>\n#18 0x562c789b834b <unknown>\n#19 0x562c789a0681 <unknown>\n#20 0x562c789b8eb2 <unknown>\n#21 0x562c789856af <unknown>\n#22 0x562c789df428 <unknown>\n#23 0x562c789df600 <unknown>\n#24 0x562c789eef84 <unknown>\n#25 0x7fef1f494ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b51ff1776e43219c20ea89be0db0a124\")>\nurl = 'https://pulsewave.ru/auth/login'\n\n    @pytest.fixture()\n    def footer_open(driver, url):\n        page = FooterPage(driver)\n>       driver.get(url)\n\ntests/test_footer/conftest.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7971c2d0a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x562c789df600 \\\\u003Cunknown>\\\\n#24 0x562c789eef84 \\\\u003Cunknown>\\\\n#25 0x7fef1f494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x562c789efe33 <unknown>\nE       #1 0x562c786df567 <unknown>\nE       #2 0x562c786d7879 <unknown>\nE       #3 0x562c786c7852 <unknown>\nE       #4 0x562c786c8e44 <unknown>\nE       #5 0x562c786c7bbe <unknown>\nE       #6 0x562c786c72e0 <unknown>\nE       #7 0x562c786c7181 <unknown>\nE       #8 0x562c786c50ec <unknown>\nE       #9 0x562c786c560a <unknown>\nE       #10 0x562c786e1eef <unknown>\nE       #11 0x562c7876b695 <unknown>\nE       #12 0x562c7874c362 <unknown>\nE       #13 0x562c7876aae2 <unknown>\nE       #14 0x562c7874c103 <unknown>\nE       #15 0x562c7871d1ba <unknown>\nE       #16 0x562c7871db8e <unknown>\nE       #17 0x562c789b459b <unknown>\nE       #18 0x562c789b834b <unknown>\nE       #19 0x562c789a0681 <unknown>\nE       #20 0x562c789b8eb2 <unknown>\nE       #21 0x562c789856af <unknown>\nE       #22 0x562c789df428 <unknown>\nE       #23 0x562c789df600 <unknown>\nE       #24 0x562c789eef84 <unknown>\nE       #25 0x7fef1f494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1714357219834,
      "stop" : 1714357220031,
      "duration" : 197
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "footer_open",
    "time" : {
      "start" : 1714357220031,
      "stop" : 1714357220184,
      "duration" : 153
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x562c789efe33 <unknown>\n#1 0x562c786df567 <unknown>\n#2 0x562c786d7879 <unknown>\n#3 0x562c786c7852 <unknown>\n#4 0x562c786c8e44 <unknown>\n#5 0x562c786c7bbe <unknown>\n#6 0x562c786c72e0 <unknown>\n#7 0x562c786c7181 <unknown>\n#8 0x562c786c50ec <unknown>\n#9 0x562c786c560a <unknown>\n#10 0x562c786e1eef <unknown>\n#11 0x562c7876b695 <unknown>\n#12 0x562c7874c362 <unknown>\n#13 0x562c7876aae2 <unknown>\n#14 0x562c7874c103 <unknown>\n#15 0x562c7871d1ba <unknown>\n#16 0x562c7871db8e <unknown>\n#17 0x562c789b459b <unknown>\n#18 0x562c789b834b <unknown>\n#19 0x562c789a0681 <unknown>\n#20 0x562c789b8eb2 <unknown>\n#21 0x562c789856af <unknown>\n#22 0x562c789df428 <unknown>\n#23 0x562c789df600 <unknown>\n#24 0x562c789eef84 <unknown>\n#25 0x7fef1f494ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/tests/test_footer/conftest.py\", line 8, in footer_open\n    driver.get(url)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714357159972,
      "stop" : 1714357159973,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714357159955,
      "stop" : 1714357159972,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1714357220215,
      "stop" : 1714357220273,
      "duration" : 58
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование Футера"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_footer"
  }, {
    "name" : "suite",
    "value" : "test_footer"
  }, {
    "name" : "subSuite",
    "value" : "TestFooter"
  }, {
    "name" : "host",
    "value" : "fv-az842-111"
  }, {
    "name" : "thread",
    "value" : "2300-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_footer.test_footer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  }, {
    "name" : "css_property",
    "value" : "'font-size'"
  }, {
    "name" : "figma",
    "value" : "'16px'"
  }, {
    "name" : "name",
    "value" : "'размера шрифта'"
  }, {
    "name" : "url",
    "value" : "'https://pulsewave.ru/auth/login'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "e986134120e1ec19",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/e986134120e1ec19",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559cd29f7e33 <unknown>\n#1 0x559cd26e7567 <unknown>\n#2 0x559cd273227d <unknown>\n#3 0x559cd2732331 <unknown>\n#4 0x559cd2775624 <unknown>\n#5 0x559cd275438d <unknown>\n#6 0x559cd2772ae2 <unknown>\n#7 0x559cd2754103 <unknown>\n#8 0x559cd27251ba <unknown>\n#9 0x559cd2725b8e <unknown>\n#10 0x559cd29bc59b <unknown>\n#11 0x559cd29c034b <unknown>\n#12 0x559cd29a8681 <unknown>\n#13 0x559cd29c0eb2 <unknown>\n#14 0x559cd298d6af <unknown>\n#15 0x559cd29e7428 <unknown>\n#16 0x559cd29e7600 <unknown>\n#17 0x559cd29f6f84 <unknown>\n#18 0x7f2f77894ac3 <unknown>",
        "time" : {
          "start" : 1714271855587,
          "stop" : 1714271855587,
          "duration" : 0
        }
      }, {
        "uid" : "5606398e1fcf5fe9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/5606398e1fcf5fe9",
        "status" : "passed",
        "time" : {
          "start" : 1714184841773,
          "stop" : 1714184841808,
          "duration" : 35
        }
      }, {
        "uid" : "9a855e76202f8120",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/9a855e76202f8120",
        "status" : "passed",
        "time" : {
          "start" : 1714148336585,
          "stop" : 1714148336620,
          "duration" : 35
        }
      }, {
        "uid" : "3e7ad9fc3798bff4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/3e7ad9fc3798bff4",
        "status" : "passed",
        "time" : {
          "start" : 1714098384602,
          "stop" : 1714098384637,
          "duration" : 35
        }
      }, {
        "uid" : "6462c8ddcc1b9b0d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/6462c8ddcc1b9b0d",
        "status" : "passed",
        "time" : {
          "start" : 1714014284564,
          "stop" : 1714014284599,
          "duration" : 35
        }
      }, {
        "uid" : "cca60843c82c26a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/cca60843c82c26a",
        "status" : "passed",
        "time" : {
          "start" : 1713945771706,
          "stop" : 1713945771739,
          "duration" : 33
        }
      }, {
        "uid" : "ac0a6f497c2c56dc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/ac0a6f497c2c56dc",
        "status" : "passed",
        "time" : {
          "start" : 1713925565793,
          "stop" : 1713925565826,
          "duration" : 33
        }
      }, {
        "uid" : "ba6b753102e05cb4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/ba6b753102e05cb4",
        "status" : "passed",
        "time" : {
          "start" : 1713901404578,
          "stop" : 1713901404611,
          "duration" : 33
        }
      }, {
        "uid" : "cbbd5a4fbe0d5030",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/cbbd5a4fbe0d5030",
        "status" : "passed",
        "time" : {
          "start" : 1713885575626,
          "stop" : 1713885575658,
          "duration" : 32
        }
      }, {
        "uid" : "89ffcc5edd5b14c2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/89ffcc5edd5b14c2",
        "status" : "passed",
        "time" : {
          "start" : 1713883481701,
          "stop" : 1713883481734,
          "duration" : 33
        }
      }, {
        "uid" : "4fce7b1d1470a0f0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/4fce7b1d1470a0f0",
        "status" : "passed",
        "time" : {
          "start" : 1713881990553,
          "stop" : 1713881990587,
          "duration" : 34
        }
      }, {
        "uid" : "ef5bd18187765666",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/ef5bd18187765666",
        "status" : "passed",
        "time" : {
          "start" : 1713879166613,
          "stop" : 1713879166650,
          "duration" : 37
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "8d24ca7e7973eb6.json",
  "parameterValues" : [ "'chrome'", "'font-size'", "'16px'", "'размера шрифта'", "'https://pulsewave.ru/auth/login'" ]
}