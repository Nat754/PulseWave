{
  "uid" : "c115af936f6ba4b4",
  "name" : "Проверка что авторизованный пользователь попадает в Рабочие пространства",
  "fullName" : "tests.test_workspace_page.test_workspace_page.TestWorkspacePage#test_auth_user_into_workspace",
  "historyId" : "4dcb26f69450402ec07808d5140ebb6c",
  "time" : {
    "start" : 1714357275139,
    "stop" : 1714357275139,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55f6c9cafe33 <unknown>\n#1 0x55f6c999f567 <unknown>\n#2 0x55f6c9997879 <unknown>\n#3 0x55f6c9987852 <unknown>\n#4 0x55f6c9988e44 <unknown>\n#5 0x55f6c9987bbe <unknown>\n#6 0x55f6c99872e0 <unknown>\n#7 0x55f6c9987181 <unknown>\n#8 0x55f6c99850ec <unknown>\n#9 0x55f6c998560a <unknown>\n#10 0x55f6c99a1eef <unknown>\n#11 0x55f6c9a2b695 <unknown>\n#12 0x55f6c9a0c362 <unknown>\n#13 0x55f6c9a2aae2 <unknown>\n#14 0x55f6c9a0c103 <unknown>\n#15 0x55f6c99dd1ba <unknown>\n#16 0x55f6c99ddb8e <unknown>\n#17 0x55f6c9c7459b <unknown>\n#18 0x55f6c9c7834b <unknown>\n#19 0x55f6c9c60681 <unknown>\n#20 0x55f6c9c78eb2 <unknown>\n#21 0x55f6c9c456af <unknown>\n#22 0x55f6c9c9f428 <unknown>\n#23 0x55f6c9c9f600 <unknown>\n#24 0x55f6c9caef84 <unknown>\n#25 0x7fdf9ba94ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"74727c9c04d94bee1eb69dcd7fafa9a5\")>\n\n    @pytest.fixture(scope='function')\n    def auth_user(driver):\n        page_auth_user = LoginPage(driver)\n>       driver.get(Constant.LOGIN_PAGE)\n\ntests/conftest.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7971c61370>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x55f6c9c9f600 \\\\u003Cunknown>\\\\n#24 0x55f6c9caef84 \\\\u003Cunknown>\\\\n#25 0x7fdf9ba94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome-headless-shell=124.0.6367.60)\nE       Stacktrace:\nE       #0 0x55f6c9cafe33 <unknown>\nE       #1 0x55f6c999f567 <unknown>\nE       #2 0x55f6c9997879 <unknown>\nE       #3 0x55f6c9987852 <unknown>\nE       #4 0x55f6c9988e44 <unknown>\nE       #5 0x55f6c9987bbe <unknown>\nE       #6 0x55f6c99872e0 <unknown>\nE       #7 0x55f6c9987181 <unknown>\nE       #8 0x55f6c99850ec <unknown>\nE       #9 0x55f6c998560a <unknown>\nE       #10 0x55f6c99a1eef <unknown>\nE       #11 0x55f6c9a2b695 <unknown>\nE       #12 0x55f6c9a0c362 <unknown>\nE       #13 0x55f6c9a2aae2 <unknown>\nE       #14 0x55f6c9a0c103 <unknown>\nE       #15 0x55f6c99dd1ba <unknown>\nE       #16 0x55f6c99ddb8e <unknown>\nE       #17 0x55f6c9c7459b <unknown>\nE       #18 0x55f6c9c7834b <unknown>\nE       #19 0x55f6c9c60681 <unknown>\nE       #20 0x55f6c9c78eb2 <unknown>\nE       #21 0x55f6c9c456af <unknown>\nE       #22 0x55f6c9c9f428 <unknown>\nE       #23 0x55f6c9c9f600 <unknown>\nE       #24 0x55f6c9caef84 <unknown>\nE       #25 0x7fdf9ba94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1714357159972,
      "stop" : 1714357159973,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1714357275140,
      "stop" : 1714357275341,
      "duration" : 201
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_user",
    "time" : {
      "start" : 1714357275341,
      "stop" : 1714357275494,
      "duration" : 153
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome-headless-shell=124.0.6367.60)\nStacktrace:\n#0 0x55f6c9cafe33 <unknown>\n#1 0x55f6c999f567 <unknown>\n#2 0x55f6c9997879 <unknown>\n#3 0x55f6c9987852 <unknown>\n#4 0x55f6c9988e44 <unknown>\n#5 0x55f6c9987bbe <unknown>\n#6 0x55f6c99872e0 <unknown>\n#7 0x55f6c9987181 <unknown>\n#8 0x55f6c99850ec <unknown>\n#9 0x55f6c998560a <unknown>\n#10 0x55f6c99a1eef <unknown>\n#11 0x55f6c9a2b695 <unknown>\n#12 0x55f6c9a0c362 <unknown>\n#13 0x55f6c9a2aae2 <unknown>\n#14 0x55f6c9a0c103 <unknown>\n#15 0x55f6c99dd1ba <unknown>\n#16 0x55f6c99ddb8e <unknown>\n#17 0x55f6c9c7459b <unknown>\n#18 0x55f6c9c7834b <unknown>\n#19 0x55f6c9c60681 <unknown>\n#20 0x55f6c9c78eb2 <unknown>\n#21 0x55f6c9c456af <unknown>\n#22 0x55f6c9c9f428 <unknown>\n#23 0x55f6c9c9f600 <unknown>\n#24 0x55f6c9caef84 <unknown>\n#25 0x7fdf9ba94ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/tests/conftest.py\", line 10, in auth_user\n    driver.get(Constant.LOGIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1714357159955,
      "stop" : 1714357159972,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1714357275526,
      "stop" : 1714357275583,
      "duration" : 57
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Рабочие пространства'"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_workspace_page"
  }, {
    "name" : "suite",
    "value" : "test_workspace_page"
  }, {
    "name" : "subSuite",
    "value" : "TestWorkspacePage"
  }, {
    "name" : "host",
    "value" : "fv-az842-111"
  }, {
    "name" : "thread",
    "value" : "2300-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_workspace_page.test_workspace_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "7bff35922ad1d20c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/8//#testresult/7bff35922ad1d20c",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5613fa868e33 <unknown>\n#1 0x5613fa558567 <unknown>\n#2 0x5613fa5a327d <unknown>\n#3 0x5613fa5a3331 <unknown>\n#4 0x5613fa5e6624 <unknown>\n#5 0x5613fa5c538d <unknown>\n#6 0x5613fa5e3ae2 <unknown>\n#7 0x5613fa5c5103 <unknown>\n#8 0x5613fa5961ba <unknown>\n#9 0x5613fa596b8e <unknown>\n#10 0x5613fa82d59b <unknown>\n#11 0x5613fa83134b <unknown>\n#12 0x5613fa819681 <unknown>\n#13 0x5613fa831eb2 <unknown>\n#14 0x5613fa7fe6af <unknown>\n#15 0x5613fa858428 <unknown>\n#16 0x5613fa858600 <unknown>\n#17 0x5613fa867f84 <unknown>\n#18 0x7f8ea5694ac3 <unknown>",
        "time" : {
          "start" : 1714274483582,
          "stop" : 1714274483582,
          "duration" : 0
        }
      }, {
        "uid" : "dbfb3b153d744988",
        "reportUrl" : "https://Nat754.github.io/PulseWave/7//#testresult/dbfb3b153d744988",
        "status" : "passed",
        "time" : {
          "start" : 1714185427470,
          "stop" : 1714185427472,
          "duration" : 2
        }
      }, {
        "uid" : "4b9da54b9d30ef3c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/4b9da54b9d30ef3c",
        "status" : "passed",
        "time" : {
          "start" : 1714148837002,
          "stop" : 1714148837005,
          "duration" : 3
        }
      }, {
        "uid" : "624bf2738e1c6cd1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/6//#testresult/624bf2738e1c6cd1",
        "status" : "passed",
        "time" : {
          "start" : 1714098887260,
          "stop" : 1714098887262,
          "duration" : 2
        }
      }, {
        "uid" : "7906c29cbf22ea66",
        "reportUrl" : "https://Nat754.github.io/PulseWave/5//#testresult/7906c29cbf22ea66",
        "status" : "passed",
        "time" : {
          "start" : 1714014727333,
          "stop" : 1714014727335,
          "duration" : 2
        }
      }, {
        "uid" : "70164d64ef14e204",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/70164d64ef14e204",
        "status" : "passed",
        "time" : {
          "start" : 1713946239289,
          "stop" : 1713946239292,
          "duration" : 3
        }
      }, {
        "uid" : "ce66da5132df26bc",
        "reportUrl" : "https://Nat754.github.io/PulseWave/4//#testresult/ce66da5132df26bc",
        "status" : "passed",
        "time" : {
          "start" : 1713926032062,
          "stop" : 1713926032065,
          "duration" : 3
        }
      }, {
        "uid" : "58ed0b409204f774",
        "reportUrl" : "https://Nat754.github.io/PulseWave/211//#testresult/58ed0b409204f774",
        "status" : "passed",
        "time" : {
          "start" : 1713901917135,
          "stop" : 1713901917137,
          "duration" : 2
        }
      }, {
        "uid" : "64ea21168cf0f386",
        "reportUrl" : "https://Nat754.github.io/PulseWave/210//#testresult/64ea21168cf0f386",
        "status" : "passed",
        "time" : {
          "start" : 1713886169616,
          "stop" : 1713886169634,
          "duration" : 18
        }
      }, {
        "uid" : "18b8bcef242ea5f5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/18b8bcef242ea5f5",
        "status" : "passed",
        "time" : {
          "start" : 1713884054052,
          "stop" : 1713884054055,
          "duration" : 3
        }
      }, {
        "uid" : "5f34a5f47df14b61",
        "reportUrl" : "https://Nat754.github.io/PulseWave/209//#testresult/5f34a5f47df14b61",
        "status" : "passed",
        "time" : {
          "start" : 1713882588298,
          "stop" : 1713882588300,
          "duration" : 2
        }
      }, {
        "uid" : "69d6d6ffc0b26435",
        "reportUrl" : "https://Nat754.github.io/PulseWave/208//#testresult/69d6d6ffc0b26435",
        "status" : "passed",
        "time" : {
          "start" : 1713879765868,
          "stop" : 1713879765871,
          "duration" : 3
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "c115af936f6ba4b4.json",
  "parameterValues" : [ "'chrome'" ]
}