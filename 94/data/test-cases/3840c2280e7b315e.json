{
  "uid" : "3840c2280e7b315e",
  "name" : "Проверка цвета кнопки 'Войти' в хедере https://pulsewave.ru/auth/password?email=",
  "fullName" : "tests.test_header.test_header.TestHeader#test_get_css_property_header_auth_login",
  "historyId" : "3a889fccea8946900afb04d07149416c",
  "time" : {
    "start" : 1721717400391,
    "stop" : 1721717400425,
    "duration" : 34
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Не прошла проверка соответствия цвета кнопки 'Войти' макету\nassert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\n  \n  - rgba(252, 224, 88, 1)\n  ?             ^  ^^\n  + rgba(252, 225, 90, 1)\n  ?             ^  ^^",
  "statusTrace" : "self = <tests.test_header.test_header.TestHeader object at 0x7f6861045190>\nheader_open = <pages.header.HeaderPage object at 0x7f68610a0f20>\ncss_property = 'background-color', figma = 'rgba(252, 224, 88, 1)'\nname = 'цвета', url = 'https://pulsewave.ru/auth/password?email='\n\n    @pytest.mark.parametrize('url', [const.MAIN_PAGE, const.SIGNUP_PAGE, const.PASSWORD_RECOVERY])\n    @pytest.mark.parametrize('css_property, figma, name', header.CHECK_BUTTON)\n    @pytest.mark.regress\n    def test_get_css_property_header_auth_login(self, header_open, css_property, figma, name, url):\n        allure.dynamic.title(f\"Проверка {name} кнопки '{self.header.TEXT_LOGIN}' в хедере {url}\")\n        element = header_open.get_header_auth_login()\n        mean_css = element.value_of_css_property(css_property)\n        with allure.step(f\"Прошла проверка соответствия {name} кнопки '{self.header.TEXT_LOGIN}' макету\"):\n>           assert mean_css == figma, f\"Не прошла проверка соответствия {name} кнопки '{self.header.TEXT_LOGIN}' макету\"\nE           AssertionError: Не прошла проверка соответствия цвета кнопки 'Войти' макету\nE           assert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\nE             \nE             - rgba(252, 224, 88, 1)\nE             ?             ^  ^^\nE             + rgba(252, 225, 90, 1)\nE             ?             ^  ^^\n\ntests/test_header/test_header.py:72: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1721717005132,
      "stop" : 1721717005132,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1721717397450,
      "stop" : 1721717397648,
      "duration" : 198
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "header_open",
    "time" : {
      "start" : 1721717397648,
      "stop" : 1721717400390,
      "duration" : 2742
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю всё' в сообщении о принятии файлов cookie на Главной странице",
      "time" : {
        "start" : 1721717400329,
        "stop" : 1721717400361,
        "duration" : 32
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1721717005114,
      "stop" : 1721717005131,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Не прошла проверка соответствия цвета кнопки 'Войти' макету\nassert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\n  \n  - rgba(252, 224, 88, 1)\n  ?             ^  ^^\n  + rgba(252, 225, 90, 1)\n  ?             ^  ^^",
    "statusTrace" : "self = <tests.test_header.test_header.TestHeader object at 0x7f6861045190>\nheader_open = <pages.header.HeaderPage object at 0x7f68610a0f20>\ncss_property = 'background-color', figma = 'rgba(252, 224, 88, 1)'\nname = 'цвета', url = 'https://pulsewave.ru/auth/password?email='\n\n    @pytest.mark.parametrize('url', [const.MAIN_PAGE, const.SIGNUP_PAGE, const.PASSWORD_RECOVERY])\n    @pytest.mark.parametrize('css_property, figma, name', header.CHECK_BUTTON)\n    @pytest.mark.regress\n    def test_get_css_property_header_auth_login(self, header_open, css_property, figma, name, url):\n        allure.dynamic.title(f\"Проверка {name} кнопки '{self.header.TEXT_LOGIN}' в хедере {url}\")\n        element = header_open.get_header_auth_login()\n        mean_css = element.value_of_css_property(css_property)\n        with allure.step(f\"Прошла проверка соответствия {name} кнопки '{self.header.TEXT_LOGIN}' макету\"):\n>           assert mean_css == figma, f\"Не прошла проверка соответствия {name} кнопки '{self.header.TEXT_LOGIN}' макету\"\nE           AssertionError: Не прошла проверка соответствия цвета кнопки 'Войти' макету\nE           assert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\nE             \nE             - rgba(252, 224, 88, 1)\nE             ?             ^  ^^\nE             + rgba(252, 225, 90, 1)\nE             ?             ^  ^^\n\ntests/test_header/test_header.py:72: AssertionError",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Войти' в хэдере",
      "time" : {
        "start" : 1721717400391,
        "stop" : 1721717400418,
        "duration" : 27
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Прошла проверка соответствия цвета кнопки 'Войти' макету",
      "time" : {
        "start" : 1721717400424,
        "stop" : 1721717400425,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Не прошла проверка соответствия цвета кнопки 'Войти' макету\nassert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\n  \n  - rgba(252, 224, 88, 1)\n  ?             ^  ^^\n  + rgba(252, 225, 90, 1)\n  ?             ^  ^^\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_header/test_header.py\", line 72, in test_get_css_property_header_auth_login\n    assert mean_css == figma, f\"Не прошла проверка соответствия {name} кнопки '{self.header.TEXT_LOGIN}' макету\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "2ef053c1be0a0a2d",
      "name" : "Screenshot",
      "source" : "2ef053c1be0a0a2d.png",
      "type" : "image/png",
      "size" : 80042
    }, {
      "uid" : "c55efa0aeb4a6f2",
      "name" : "HTML source",
      "source" : "c55efa0aeb4a6f2.html",
      "type" : "text/html",
      "size" : 95546
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1721717400535,
      "stop" : 1721717400595,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование Хедера"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_header"
  }, {
    "name" : "suite",
    "value" : "test_header"
  }, {
    "name" : "subSuite",
    "value" : "TestHeader"
  }, {
    "name" : "host",
    "value" : "fv-az525-468"
  }, {
    "name" : "thread",
    "value" : "2268-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_header.test_header"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  }, {
    "name" : "css_property",
    "value" : "'background-color'"
  }, {
    "name" : "figma",
    "value" : "'rgba(252, 224, 88, 1)'"
  }, {
    "name" : "name",
    "value" : "'цвета'"
  }, {
    "name" : "url",
    "value" : "'https://pulsewave.ru/auth/password?email='"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 98,
        "unknown" : 0,
        "total" : 102
      },
      "items" : [ {
        "uid" : "35eef009d897d215",
        "reportUrl" : "https://Nat754.github.io/PulseWave/94//#testresult/35eef009d897d215",
        "status" : "passed",
        "time" : {
          "start" : 1721702045927,
          "stop" : 1721702045960,
          "duration" : 33
        }
      }, {
        "uid" : "1f115652a9483de2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/93//#testresult/1f115652a9483de2",
        "status" : "passed",
        "time" : {
          "start" : 1721615938628,
          "stop" : 1721615938662,
          "duration" : 34
        }
      }, {
        "uid" : "3ad4de1c3e2bfd72",
        "reportUrl" : "https://Nat754.github.io/PulseWave/92//#testresult/3ad4de1c3e2bfd72",
        "status" : "passed",
        "time" : {
          "start" : 1721529368161,
          "stop" : 1721529368194,
          "duration" : 33
        }
      }, {
        "uid" : "e57e0afd7ca9ac19",
        "reportUrl" : "https://Nat754.github.io/PulseWave/91//#testresult/e57e0afd7ca9ac19",
        "status" : "passed",
        "time" : {
          "start" : 1721442656665,
          "stop" : 1721442656698,
          "duration" : 33
        }
      }, {
        "uid" : "be59f64523de9274",
        "reportUrl" : "https://Nat754.github.io/PulseWave/90//#testresult/be59f64523de9274",
        "status" : "passed",
        "time" : {
          "start" : 1721356501739,
          "stop" : 1721356501775,
          "duration" : 36
        }
      }, {
        "uid" : "a1cd211c46740ca7",
        "reportUrl" : "https://Nat754.github.io/PulseWave/89//#testresult/a1cd211c46740ca7",
        "status" : "passed",
        "time" : {
          "start" : 1721269981093,
          "stop" : 1721269981126,
          "duration" : 33
        }
      }, {
        "uid" : "88750c288daa3ef4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/88//#testresult/88750c288daa3ef4",
        "status" : "passed",
        "time" : {
          "start" : 1721183648743,
          "stop" : 1721183648778,
          "duration" : 35
        }
      }, {
        "uid" : "efe42e18c0656bb3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/87//#testresult/efe42e18c0656bb3",
        "status" : "passed",
        "time" : {
          "start" : 1721097295950,
          "stop" : 1721097295986,
          "duration" : 36
        }
      }, {
        "uid" : "cc43bc1ffd311077",
        "reportUrl" : "https://Nat754.github.io/PulseWave/86//#testresult/cc43bc1ffd311077",
        "status" : "passed",
        "time" : {
          "start" : 1721011070093,
          "stop" : 1721011070126,
          "duration" : 33
        }
      }, {
        "uid" : "68e7896ba1722386",
        "reportUrl" : "https://Nat754.github.io/PulseWave/85//#testresult/68e7896ba1722386",
        "status" : "passed",
        "time" : {
          "start" : 1720924880734,
          "stop" : 1720924880767,
          "duration" : 33
        }
      }, {
        "uid" : "26b868bc78386500",
        "reportUrl" : "https://Nat754.github.io/PulseWave/84//#testresult/26b868bc78386500",
        "status" : "passed",
        "time" : {
          "start" : 1720837972643,
          "stop" : 1720837972677,
          "duration" : 34
        }
      }, {
        "uid" : "71c5ea47baa87527",
        "reportUrl" : "https://Nat754.github.io/PulseWave/83//#testresult/71c5ea47baa87527",
        "status" : "passed",
        "time" : {
          "start" : 1720751565764,
          "stop" : 1720751565798,
          "duration" : 34
        }
      }, {
        "uid" : "e9f531152b7bee0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/82//#testresult/e9f531152b7bee0",
        "status" : "passed",
        "time" : {
          "start" : 1720665646795,
          "stop" : 1720665646828,
          "duration" : 33
        }
      }, {
        "uid" : "58fe1696e71ee4d9",
        "reportUrl" : "https://Nat754.github.io/PulseWave/81//#testresult/58fe1696e71ee4d9",
        "status" : "passed",
        "time" : {
          "start" : 1720579137782,
          "stop" : 1720579137815,
          "duration" : 33
        }
      }, {
        "uid" : "b37e6d1933a8ff94",
        "reportUrl" : "https://Nat754.github.io/PulseWave/80//#testresult/b37e6d1933a8ff94",
        "status" : "passed",
        "time" : {
          "start" : 1720492725362,
          "stop" : 1720492725397,
          "duration" : 35
        }
      }, {
        "uid" : "66fb2effd9f0161d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/79//#testresult/66fb2effd9f0161d",
        "status" : "passed",
        "time" : {
          "start" : 1720406517837,
          "stop" : 1720406517871,
          "duration" : 34
        }
      }, {
        "uid" : "432e3d8d8a362d08",
        "reportUrl" : "https://Nat754.github.io/PulseWave/78//#testresult/432e3d8d8a362d08",
        "status" : "passed",
        "time" : {
          "start" : 1720320065125,
          "stop" : 1720320065160,
          "duration" : 35
        }
      }, {
        "uid" : "1b8466db59b8e80d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/77//#testresult/1b8466db59b8e80d",
        "status" : "passed",
        "time" : {
          "start" : 1720233257710,
          "stop" : 1720233257744,
          "duration" : 34
        }
      }, {
        "uid" : "ed4d6511353dec7e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/76//#testresult/ed4d6511353dec7e",
        "status" : "passed",
        "time" : {
          "start" : 1720146989594,
          "stop" : 1720146989628,
          "duration" : 34
        }
      }, {
        "uid" : "3325a4b571574d0e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/75//#testresult/3325a4b571574d0e",
        "status" : "passed",
        "time" : {
          "start" : 1720060670435,
          "stop" : 1720060670468,
          "duration" : 33
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "3840c2280e7b315e.json",
  "parameterValues" : [ "'chrome'", "'background-color'", "'rgba(252, 224, 88, 1)'", "'цвета'", "'https://pulsewave.ru/auth/password?email='" ]
}