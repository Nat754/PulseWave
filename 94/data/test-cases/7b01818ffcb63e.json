{
  "uid" : "7b01818ffcb63e",
  "name" : "1.23 Регистрация с корректными email и паролем без согласия на подписку",
  "fullName" : "tests.test_signup_page.test_signup_page.TestSignupPage#test_signup_with_correct_email_and_password",
  "historyId" : "a88141a3f07444f200b9b46dcc4041fe",
  "time" : {
    "start" : 1721717697055,
    "stop" : 1721717714820,
    "duration" : 17765
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <svg data-v-1d5f154c=\"\" width=\"45\" height=\"45\" viewBox=\"0 0 45 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"avatar__icon\">...</svg> is not clickable at point (1800, 32). Other element would receive the click: <div data-v-91c04aa2=\"\" data-v-72c59a66=\"\" class=\"loader\">...</div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x5567453ddc7a <unknown>\n#1 0x5567450c0e2c <unknown>\n#2 0x556745114406 <unknown>\n#3 0x556745112246 <unknown>\n#4 0x55674510fc27 <unknown>\n#5 0x55674510ea60 <unknown>\n#6 0x55674510215f <unknown>\n#7 0x5567451305c2 <unknown>\n#8 0x556745101ad9 <unknown>\n#9 0x55674513078e <unknown>\n#10 0x55674514f303 <unknown>\n#11 0x556745130363 <unknown>\n#12 0x556745100247 <unknown>\n#13 0x556745100b9e <unknown>\n#14 0x5567453a424b <unknown>\n#15 0x5567453a82f1 <unknown>\n#16 0x55674538fafe <unknown>\n#17 0x5567453a8e52 <unknown>\n#18 0x55674537479f <unknown>\n#19 0x5567453cd638 <unknown>\n#20 0x5567453cd810 <unknown>\n#21 0x5567453dcdac <unknown>\n#22 0x7f039fe94ac3 <unknown>",
  "statusTrace" : "self = <tests.test_signup_page.test_signup_page.TestSignupPage object at 0x7f686105c1d0>\nsignup_page_open = <pages.signup_page.SignUpPage object at 0x7f68610984a0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d837eb3ab94c104916ef0a4440a9fdf7\")>\n\n    @allure.title(\"1.23 Регистрация с корректными email и паролем без согласия на подписку\")\n    @pytest.mark.smoke\n    def test_signup_with_correct_email_and_password(self, signup_page_open, driver):\n        with allure.step('Заполнить поле email корректными данными'):\n            signup_page_open.put_data_to_email_field(email1)\n        with allure.step('Заполнить поле пароль сильным паролем'):\n            signup_page_open.put_data_to_password_field(password0)\n        with allure.step('Заполнить поле подтверждение пароля сильным паролем'):\n            signup_page_open.put_data_to_confirm_password_field(password0)\n        signup_page_open.click_button_submit()\n        element = signup_page_open.get_send_invite_message()\n        with allure.step(f'Получено сообщение необходимости подтвердить регистрацию: \"{self.signup.INVITE_MSG}\"'):\n            assert element.text == self.signup.INVITE_MSG, 'Нет сообщения успеха'\n        time.sleep(10)\n        link = signup_page_open.get_confirm_signup_to_email(email1, password1)\n        driver.get(link)\n        signup_page_open.click_button_submit()\n>       signup_page_open.click_button_avatar()\n\ntests/test_signup_page/test_signup_page.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/signup_page.py:93: in click_button_avatar\n    self.element_is_clickable(self.locator.BUTTON_AVATAR).click()\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f68610791c0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5567453cd810 \\\\u003Cunknown>\\\\n#21 0x5567453dcdac \\\\u003Cunknown>\\\\n#22 0x7f039fe94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <svg data-v-1d5f154c=\"\" width=\"45\" height=\"45\" viewBox=\"0 0 45 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"avatar__icon\">...</svg> is not clickable at point (1800, 32). Other element would receive the click: <div data-v-91c04aa2=\"\" data-v-72c59a66=\"\" class=\"loader\">...</div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x5567453ddc7a <unknown>\nE       #1 0x5567450c0e2c <unknown>\nE       #2 0x556745114406 <unknown>\nE       #3 0x556745112246 <unknown>\nE       #4 0x55674510fc27 <unknown>\nE       #5 0x55674510ea60 <unknown>\nE       #6 0x55674510215f <unknown>\nE       #7 0x5567451305c2 <unknown>\nE       #8 0x556745101ad9 <unknown>\nE       #9 0x55674513078e <unknown>\nE       #10 0x55674514f303 <unknown>\nE       #11 0x556745130363 <unknown>\nE       #12 0x556745100247 <unknown>\nE       #13 0x556745100b9e <unknown>\nE       #14 0x5567453a424b <unknown>\nE       #15 0x5567453a82f1 <unknown>\nE       #16 0x55674538fafe <unknown>\nE       #17 0x5567453a8e52 <unknown>\nE       #18 0x55674537479f <unknown>\nE       #19 0x5567453cd638 <unknown>\nE       #20 0x5567453cd810 <unknown>\nE       #21 0x5567453dcdac <unknown>\nE       #22 0x7f039fe94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1721717005132,
      "stop" : 1721717005132,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "signup_page_open",
    "time" : {
      "start" : 1721717694310,
      "stop" : 1721717697054,
      "duration" : 2744
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1721717696992,
        "stop" : 1721717697026,
        "duration" : 34
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1721717694112,
      "stop" : 1721717694310,
      "duration" : 198
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1721717005114,
      "stop" : 1721717005131,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <svg data-v-1d5f154c=\"\" width=\"45\" height=\"45\" viewBox=\"0 0 45 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"avatar__icon\">...</svg> is not clickable at point (1800, 32). Other element would receive the click: <div data-v-91c04aa2=\"\" data-v-72c59a66=\"\" class=\"loader\">...</div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x5567453ddc7a <unknown>\n#1 0x5567450c0e2c <unknown>\n#2 0x556745114406 <unknown>\n#3 0x556745112246 <unknown>\n#4 0x55674510fc27 <unknown>\n#5 0x55674510ea60 <unknown>\n#6 0x55674510215f <unknown>\n#7 0x5567451305c2 <unknown>\n#8 0x556745101ad9 <unknown>\n#9 0x55674513078e <unknown>\n#10 0x55674514f303 <unknown>\n#11 0x556745130363 <unknown>\n#12 0x556745100247 <unknown>\n#13 0x556745100b9e <unknown>\n#14 0x5567453a424b <unknown>\n#15 0x5567453a82f1 <unknown>\n#16 0x55674538fafe <unknown>\n#17 0x5567453a8e52 <unknown>\n#18 0x55674537479f <unknown>\n#19 0x5567453cd638 <unknown>\n#20 0x5567453cd810 <unknown>\n#21 0x5567453dcdac <unknown>\n#22 0x7f039fe94ac3 <unknown>",
    "statusTrace" : "self = <tests.test_signup_page.test_signup_page.TestSignupPage object at 0x7f686105c1d0>\nsignup_page_open = <pages.signup_page.SignUpPage object at 0x7f68610984a0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d837eb3ab94c104916ef0a4440a9fdf7\")>\n\n    @allure.title(\"1.23 Регистрация с корректными email и паролем без согласия на подписку\")\n    @pytest.mark.smoke\n    def test_signup_with_correct_email_and_password(self, signup_page_open, driver):\n        with allure.step('Заполнить поле email корректными данными'):\n            signup_page_open.put_data_to_email_field(email1)\n        with allure.step('Заполнить поле пароль сильным паролем'):\n            signup_page_open.put_data_to_password_field(password0)\n        with allure.step('Заполнить поле подтверждение пароля сильным паролем'):\n            signup_page_open.put_data_to_confirm_password_field(password0)\n        signup_page_open.click_button_submit()\n        element = signup_page_open.get_send_invite_message()\n        with allure.step(f'Получено сообщение необходимости подтвердить регистрацию: \"{self.signup.INVITE_MSG}\"'):\n            assert element.text == self.signup.INVITE_MSG, 'Нет сообщения успеха'\n        time.sleep(10)\n        link = signup_page_open.get_confirm_signup_to_email(email1, password1)\n        driver.get(link)\n        signup_page_open.click_button_submit()\n>       signup_page_open.click_button_avatar()\n\ntests/test_signup_page/test_signup_page.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/signup_page.py:93: in click_button_avatar\n    self.element_is_clickable(self.locator.BUTTON_AVATAR).click()\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f68610791c0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5567453cd810 \\\\u003Cunknown>\\\\n#21 0x5567453dcdac \\\\u003Cunknown>\\\\n#22 0x7f039fe94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <svg data-v-1d5f154c=\"\" width=\"45\" height=\"45\" viewBox=\"0 0 45 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"avatar__icon\">...</svg> is not clickable at point (1800, 32). Other element would receive the click: <div data-v-91c04aa2=\"\" data-v-72c59a66=\"\" class=\"loader\">...</div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x5567453ddc7a <unknown>\nE       #1 0x5567450c0e2c <unknown>\nE       #2 0x556745114406 <unknown>\nE       #3 0x556745112246 <unknown>\nE       #4 0x55674510fc27 <unknown>\nE       #5 0x55674510ea60 <unknown>\nE       #6 0x55674510215f <unknown>\nE       #7 0x5567451305c2 <unknown>\nE       #8 0x556745101ad9 <unknown>\nE       #9 0x55674513078e <unknown>\nE       #10 0x55674514f303 <unknown>\nE       #11 0x556745130363 <unknown>\nE       #12 0x556745100247 <unknown>\nE       #13 0x556745100b9e <unknown>\nE       #14 0x5567453a424b <unknown>\nE       #15 0x5567453a82f1 <unknown>\nE       #16 0x55674538fafe <unknown>\nE       #17 0x5567453a8e52 <unknown>\nE       #18 0x55674537479f <unknown>\nE       #19 0x5567453cd638 <unknown>\nE       #20 0x5567453cd810 <unknown>\nE       #21 0x5567453dcdac <unknown>\nE       #22 0x7f039fe94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException",
    "steps" : [ {
      "name" : "Заполнить поле email корректными данными",
      "time" : {
        "start" : 1721717697055,
        "stop" : 1721717697128,
        "duration" : 73
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Заполнить поле пароль сильным паролем",
      "time" : {
        "start" : 1721717697129,
        "stop" : 1721717697184,
        "duration" : 55
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Заполнить поле подтверждение пароля сильным паролем",
      "time" : {
        "start" : 1721717697184,
        "stop" : 1721717697239,
        "duration" : 55
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Подтвердить изменения'",
      "time" : {
        "start" : 1721717697239,
        "stop" : 1721717697287,
        "duration" : 48
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получено сообщения о подтверждении регистрации",
      "time" : {
        "start" : 1721717697287,
        "stop" : 1721717699358,
        "duration" : 2071
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получено сообщение необходимости подтвердить регистрацию: \"Регистрация\nМы отправили вам письмо на test_pulsewave0@mail.ru.\nДля подтверждения регистрации и активации учётной записи пройдите по ссылке в письме.\nПисьмо не пришло?\nПроверьте папку Спам и нажмите кнопку «Отправить повторно».\"",
      "time" : {
        "start" : 1721717699359,
        "stop" : 1721717699369,
        "duration" : 10
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить ссылку подтверждения регистрации пользователя на емайл",
      "time" : {
        "start" : 1721717709369,
        "stop" : 1721717712598,
        "duration" : 3229
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Подтвердить изменения'",
      "time" : {
        "start" : 1721717712853,
        "stop" : 1721717713430,
        "duration" : 577
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать на иконку аватара",
      "time" : {
        "start" : 1721717713430,
        "stop" : 1721717714819,
        "duration" : 1389
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <svg data-v-1d5f154c=\"\" width=\"45\" height=\"45\" viewBox=\"0 0 45 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"avatar__icon\">...</svg> is not clickable at point (1800, 32). Other element would receive the click: <div data-v-91c04aa2=\"\" data-v-72c59a66=\"\" class=\"loader\">...</div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x5567453ddc7a <unknown>\n#1 0x5567450c0e2c <unknown>\n#2 0x556745114406 <unknown>\n#3 0x556745112246 <unknown>\n#4 0x55674510fc27 <unknown>\n#5 0x55674510ea60 <unknown>\n#6 0x55674510215f <unknown>\n#7 0x5567451305c2 <unknown>\n#8 0x556745101ad9 <unknown>\n#9 0x55674513078e <unknown>\n#10 0x55674514f303 <unknown>\n#11 0x556745130363 <unknown>\n#12 0x556745100247 <unknown>\n#13 0x556745100b9e <unknown>\n#14 0x5567453a424b <unknown>\n#15 0x5567453a82f1 <unknown>\n#16 0x55674538fafe <unknown>\n#17 0x5567453a8e52 <unknown>\n#18 0x55674537479f <unknown>\n#19 0x5567453cd638 <unknown>\n#20 0x5567453cd810 <unknown>\n#21 0x5567453dcdac <unknown>\n#22 0x7f039fe94ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/PulseWave/PulseWave/pages/signup_page.py\", line 93, in click_button_avatar\n    self.element_is_clickable(self.locator.BUTTON_AVATAR).click()\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "32918e22ddd86afa",
      "name" : "Screenshot",
      "source" : "32918e22ddd86afa.png",
      "type" : "image/png",
      "size" : 49697
    }, {
      "uid" : "be6531f61451aa",
      "name" : "HTML source",
      "source" : "be6531f61451aa.html",
      "type" : "text/html",
      "size" : 77753
    } ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1721717715047,
      "stop" : 1721717715107,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Регистрация'"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_signup_page"
  }, {
    "name" : "suite",
    "value" : "test_signup_page"
  }, {
    "name" : "subSuite",
    "value" : "TestSignupPage"
  }, {
    "name" : "host",
    "value" : "fv-az525-468"
  }, {
    "name" : "thread",
    "value" : "2268-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_signup_page.test_signup_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 30,
        "passed" : 69,
        "unknown" : 0,
        "total" : 102
      },
      "items" : [ {
        "uid" : "9042d9c2c3029c12",
        "reportUrl" : "https://Nat754.github.io/PulseWave/94//#testresult/9042d9c2c3029c12",
        "status" : "passed",
        "time" : {
          "start" : 1721702316819,
          "stop" : 1721702333872,
          "duration" : 17053
        }
      }, {
        "uid" : "b559c6af0a2da162",
        "reportUrl" : "https://Nat754.github.io/PulseWave/93//#testresult/b559c6af0a2da162",
        "status" : "passed",
        "time" : {
          "start" : 1721616243672,
          "stop" : 1721616261383,
          "duration" : 17711
        }
      }, {
        "uid" : "e7f4768991793e65",
        "reportUrl" : "https://Nat754.github.io/PulseWave/92//#testresult/e7f4768991793e65",
        "status" : "passed",
        "time" : {
          "start" : 1721529610473,
          "stop" : 1721529627302,
          "duration" : 16829
        }
      }, {
        "uid" : "382f9ad867ff4930",
        "reportUrl" : "https://Nat754.github.io/PulseWave/91//#testresult/382f9ad867ff4930",
        "status" : "passed",
        "time" : {
          "start" : 1721442924614,
          "stop" : 1721442942798,
          "duration" : 18184
        }
      }, {
        "uid" : "9550de976582be7a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/90//#testresult/9550de976582be7a",
        "status" : "passed",
        "time" : {
          "start" : 1721356827004,
          "stop" : 1721356845676,
          "duration" : 18672
        }
      }, {
        "uid" : "6fbb24b3773ea534",
        "reportUrl" : "https://Nat754.github.io/PulseWave/89//#testresult/6fbb24b3773ea534",
        "status" : "passed",
        "time" : {
          "start" : 1721270215426,
          "stop" : 1721270232335,
          "duration" : 16909
        }
      }, {
        "uid" : "2330515dbed19624",
        "reportUrl" : "https://Nat754.github.io/PulseWave/88//#testresult/2330515dbed19624",
        "status" : "passed",
        "time" : {
          "start" : 1721183918137,
          "stop" : 1721183935194,
          "duration" : 17057
        }
      }, {
        "uid" : "24acdb38fe262964",
        "reportUrl" : "https://Nat754.github.io/PulseWave/87//#testresult/24acdb38fe262964",
        "status" : "passed",
        "time" : {
          "start" : 1721097571610,
          "stop" : 1721097588716,
          "duration" : 17106
        }
      }, {
        "uid" : "317d353f897f6ae8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/86//#testresult/317d353f897f6ae8",
        "status" : "passed",
        "time" : {
          "start" : 1721011308384,
          "stop" : 1721011325462,
          "duration" : 17078
        }
      }, {
        "uid" : "cfcf5bf262081a51",
        "reportUrl" : "https://Nat754.github.io/PulseWave/85//#testresult/cfcf5bf262081a51",
        "status" : "passed",
        "time" : {
          "start" : 1720925135441,
          "stop" : 1720925156575,
          "duration" : 21134
        }
      }, {
        "uid" : "4153544dac049bdf",
        "reportUrl" : "https://Nat754.github.io/PulseWave/84//#testresult/4153544dac049bdf",
        "status" : "passed",
        "time" : {
          "start" : 1720838281573,
          "stop" : 1720838300551,
          "duration" : 18978
        }
      }, {
        "uid" : "e7d43fe20d6a193b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/83//#testresult/e7d43fe20d6a193b",
        "status" : "passed",
        "time" : {
          "start" : 1720751837057,
          "stop" : 1720751854794,
          "duration" : 17737
        }
      }, {
        "uid" : "7998caa7ad0a6f01",
        "reportUrl" : "https://Nat754.github.io/PulseWave/82//#testresult/7998caa7ad0a6f01",
        "status" : "passed",
        "time" : {
          "start" : 1720665883311,
          "stop" : 1720665900657,
          "duration" : 17346
        }
      }, {
        "uid" : "d5793972228a27ce",
        "reportUrl" : "https://Nat754.github.io/PulseWave/81//#testresult/d5793972228a27ce",
        "status" : "passed",
        "time" : {
          "start" : 1720579409907,
          "stop" : 1720579427822,
          "duration" : 17915
        }
      }, {
        "uid" : "8bf35078de5dee0a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/80//#testresult/8bf35078de5dee0a",
        "status" : "passed",
        "time" : {
          "start" : 1720492979455,
          "stop" : 1720492996401,
          "duration" : 16946
        }
      }, {
        "uid" : "a6d0e81d2750e8e0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/79//#testresult/a6d0e81d2750e8e0",
        "status" : "passed",
        "time" : {
          "start" : 1720406841586,
          "stop" : 1720406859839,
          "duration" : 18253
        }
      }, {
        "uid" : "d1cd7bd7e42d0256",
        "reportUrl" : "https://Nat754.github.io/PulseWave/78//#testresult/d1cd7bd7e42d0256",
        "status" : "passed",
        "time" : {
          "start" : 1720320309968,
          "stop" : 1720320330779,
          "duration" : 20811
        }
      }, {
        "uid" : "5f308cfbb6c82e66",
        "reportUrl" : "https://Nat754.github.io/PulseWave/77//#testresult/5f308cfbb6c82e66",
        "status" : "passed",
        "time" : {
          "start" : 1720233535543,
          "stop" : 1720233557138,
          "duration" : 21595
        }
      }, {
        "uid" : "b794679026dc7137",
        "reportUrl" : "https://Nat754.github.io/PulseWave/76//#testresult/b794679026dc7137",
        "status" : "passed",
        "time" : {
          "start" : 1720147224360,
          "stop" : 1720147241110,
          "duration" : 16750
        }
      }, {
        "uid" : "c33958d4c0f14815",
        "reportUrl" : "https://Nat754.github.io/PulseWave/75//#testresult/c33958d4c0f14815",
        "status" : "passed",
        "time" : {
          "start" : 1720060909894,
          "stop" : 1720060926893,
          "duration" : 16999
        }
      } ]
    },
    "tags" : [ "smoke" ]
  },
  "source" : "7b01818ffcb63e.json",
  "parameterValues" : [ "'chrome'" ]
}