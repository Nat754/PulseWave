{
  "uid" : "7e758ca681482c9e",
  "name" : "Проверка цвета кнопки 'Регистрация в хедере https://pulsewave.ru/'",
  "fullName" : "tests.test_header.test_header.TestHeader#test_get_css_property_header_auth_signup",
  "historyId" : "71534d84ab346b8680486e62a26169e2",
  "time" : {
    "start" : 1721718320244,
    "stop" : 1721718320280,
    "duration" : 36
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Не прошла проверка соответствия цвета кнопки 'Регистрация' макету\nassert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\n  \n  - rgba(252, 224, 88, 1)\n  ?             ^  ^^\n  + rgba(252, 225, 90, 1)\n  ?             ^  ^^",
  "statusTrace" : "self = <tests.test_header.test_header.TestHeader object at 0x7f197b53cb60>\nheader_open = <pages.header.HeaderPage object at 0x7f197b56b980>\ncss_property = 'background-color', figma = 'rgba(252, 224, 88, 1)'\nname = 'цвета', url = 'https://pulsewave.ru/'\n\n    @pytest.mark.parametrize('url', [const.MAIN_PAGE, const.LOGIN_PAGE, const.PASSWORD_RECOVERY])\n    @pytest.mark.parametrize('css_property, figma, name', header.CHECK_BUTTON)\n    @pytest.mark.regress\n    def test_get_css_property_header_auth_signup(self, header_open, css_property, figma, name, url):\n        allure.dynamic.title(f\"Проверка {name} кнопки '{self.header.TEXT_SIGNUP} в хедере {url}'\")\n        element = header_open.get_header_auth_login()\n        mean_css = element.value_of_css_property(css_property)\n        with allure.step(f\"Прошла проверка соответствия {name} кнопки '{self.header.TEXT_SIGNUP}' макету\"):\n>           assert mean_css == figma, \\\n                f\"Не прошла проверка соответствия {name} кнопки '{self.header.TEXT_SIGNUP}' макету\"\nE           AssertionError: Не прошла проверка соответствия цвета кнопки 'Регистрация' макету\nE           assert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\nE             \nE             - rgba(252, 224, 88, 1)\nE             ?             ^  ^^\nE             + rgba(252, 225, 90, 1)\nE             ?             ^  ^^\n\ntests/test_header/test_header.py:82: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "header_open",
    "time" : {
      "start" : 1721718317134,
      "stop" : 1721718320244,
      "duration" : 3110
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю всё' в сообщении о принятии файлов cookie на Главной странице",
      "time" : {
        "start" : 1721718320185,
        "stop" : 1721718320216,
        "duration" : 31
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1721717889095,
      "stop" : 1721717889095,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1721717889077,
      "stop" : 1721717889095,
      "duration" : 18
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1721718316937,
      "stop" : 1721718317134,
      "duration" : 197
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Не прошла проверка соответствия цвета кнопки 'Регистрация' макету\nassert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\n  \n  - rgba(252, 224, 88, 1)\n  ?             ^  ^^\n  + rgba(252, 225, 90, 1)\n  ?             ^  ^^",
    "statusTrace" : "self = <tests.test_header.test_header.TestHeader object at 0x7f197b53cb60>\nheader_open = <pages.header.HeaderPage object at 0x7f197b56b980>\ncss_property = 'background-color', figma = 'rgba(252, 224, 88, 1)'\nname = 'цвета', url = 'https://pulsewave.ru/'\n\n    @pytest.mark.parametrize('url', [const.MAIN_PAGE, const.LOGIN_PAGE, const.PASSWORD_RECOVERY])\n    @pytest.mark.parametrize('css_property, figma, name', header.CHECK_BUTTON)\n    @pytest.mark.regress\n    def test_get_css_property_header_auth_signup(self, header_open, css_property, figma, name, url):\n        allure.dynamic.title(f\"Проверка {name} кнопки '{self.header.TEXT_SIGNUP} в хедере {url}'\")\n        element = header_open.get_header_auth_login()\n        mean_css = element.value_of_css_property(css_property)\n        with allure.step(f\"Прошла проверка соответствия {name} кнопки '{self.header.TEXT_SIGNUP}' макету\"):\n>           assert mean_css == figma, \\\n                f\"Не прошла проверка соответствия {name} кнопки '{self.header.TEXT_SIGNUP}' макету\"\nE           AssertionError: Не прошла проверка соответствия цвета кнопки 'Регистрация' макету\nE           assert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\nE             \nE             - rgba(252, 224, 88, 1)\nE             ?             ^  ^^\nE             + rgba(252, 225, 90, 1)\nE             ?             ^  ^^\n\ntests/test_header/test_header.py:82: AssertionError",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Войти' в хэдере",
      "time" : {
        "start" : 1721718320245,
        "stop" : 1721718320272,
        "duration" : 27
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Прошла проверка соответствия цвета кнопки 'Регистрация' макету",
      "time" : {
        "start" : 1721718320279,
        "stop" : 1721718320280,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Не прошла проверка соответствия цвета кнопки 'Регистрация' макету\nassert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\n  \n  - rgba(252, 224, 88, 1)\n  ?             ^  ^^\n  + rgba(252, 225, 90, 1)\n  ?             ^  ^^\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_header/test_header.py\", line 82, in test_get_css_property_header_auth_signup\n    assert mean_css == figma, \\\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d1fdc34ff6dafa71",
      "name" : "Screenshot",
      "source" : "d1fdc34ff6dafa71.png",
      "type" : "image/png",
      "size" : 138686
    }, {
      "uid" : "7a75a047b2c01399",
      "name" : "HTML source",
      "source" : "7a75a047b2c01399.html",
      "type" : "text/html",
      "size" : 103414
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1721718320405,
      "stop" : 1721718320464,
      "duration" : 59
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование Хедера"
  }, {
    "name" : "tag",
    "value" : "regress"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_header"
  }, {
    "name" : "suite",
    "value" : "test_header"
  }, {
    "name" : "subSuite",
    "value" : "TestHeader"
  }, {
    "name" : "host",
    "value" : "fv-az1385-900"
  }, {
    "name" : "thread",
    "value" : "2334-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_header.test_header"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  }, {
    "name" : "css_property",
    "value" : "'background-color'"
  }, {
    "name" : "figma",
    "value" : "'rgba(252, 224, 88, 1)'"
  }, {
    "name" : "name",
    "value" : "'цвета'"
  }, {
    "name" : "url",
    "value" : "'https://pulsewave.ru/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 98,
        "unknown" : 0,
        "total" : 103
      },
      "items" : [ {
        "uid" : "ee1a19c44626208c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/94//#testresult/ee1a19c44626208c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Не прошла проверка соответствия цвета кнопки 'Регистрация' макету\nassert 'rgba(252, 225, 90, 1)' == 'rgba(252, 224, 88, 1)'\n  \n  - rgba(252, 224, 88, 1)\n  ?             ^  ^^\n  + rgba(252, 225, 90, 1)\n  ?             ^  ^^",
        "time" : {
          "start" : 1721717432828,
          "stop" : 1721717432865,
          "duration" : 37
        }
      }, {
        "uid" : "16da9eddb882502c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/94//#testresult/16da9eddb882502c",
        "status" : "passed",
        "time" : {
          "start" : 1721702075898,
          "stop" : 1721702075934,
          "duration" : 36
        }
      }, {
        "uid" : "de438aeec8410e49",
        "reportUrl" : "https://Nat754.github.io/PulseWave/93//#testresult/de438aeec8410e49",
        "status" : "passed",
        "time" : {
          "start" : 1721615974342,
          "stop" : 1721615974378,
          "duration" : 36
        }
      }, {
        "uid" : "540497b788639c98",
        "reportUrl" : "https://Nat754.github.io/PulseWave/92//#testresult/540497b788639c98",
        "status" : "passed",
        "time" : {
          "start" : 1721529394714,
          "stop" : 1721529394750,
          "duration" : 36
        }
      }, {
        "uid" : "69e9bc50fd5bf1d3",
        "reportUrl" : "https://Nat754.github.io/PulseWave/91//#testresult/69e9bc50fd5bf1d3",
        "status" : "passed",
        "time" : {
          "start" : 1721442686824,
          "stop" : 1721442686860,
          "duration" : 36
        }
      }, {
        "uid" : "d7fb36e06217c09a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/90//#testresult/d7fb36e06217c09a",
        "status" : "passed",
        "time" : {
          "start" : 1721356538869,
          "stop" : 1721356538905,
          "duration" : 36
        }
      }, {
        "uid" : "5f46df56aa76983c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/89//#testresult/5f46df56aa76983c",
        "status" : "passed",
        "time" : {
          "start" : 1721270007081,
          "stop" : 1721270007118,
          "duration" : 37
        }
      }, {
        "uid" : "b1aa31dcc0b5b172",
        "reportUrl" : "https://Nat754.github.io/PulseWave/88//#testresult/b1aa31dcc0b5b172",
        "status" : "passed",
        "time" : {
          "start" : 1721183679344,
          "stop" : 1721183679382,
          "duration" : 38
        }
      }, {
        "uid" : "502bfcf2de806dee",
        "reportUrl" : "https://Nat754.github.io/PulseWave/87//#testresult/502bfcf2de806dee",
        "status" : "passed",
        "time" : {
          "start" : 1721097326060,
          "stop" : 1721097326096,
          "duration" : 36
        }
      }, {
        "uid" : "85826334d1e06d82",
        "reportUrl" : "https://Nat754.github.io/PulseWave/86//#testresult/85826334d1e06d82",
        "status" : "passed",
        "time" : {
          "start" : 1721011096053,
          "stop" : 1721011096090,
          "duration" : 37
        }
      }, {
        "uid" : "8e5c0716c2ce711",
        "reportUrl" : "https://Nat754.github.io/PulseWave/85//#testresult/8e5c0716c2ce711",
        "status" : "passed",
        "time" : {
          "start" : 1720924907399,
          "stop" : 1720924907436,
          "duration" : 37
        }
      }, {
        "uid" : "d92745e47cb7bdb",
        "reportUrl" : "https://Nat754.github.io/PulseWave/84//#testresult/d92745e47cb7bdb",
        "status" : "passed",
        "time" : {
          "start" : 1720838007765,
          "stop" : 1720838007802,
          "duration" : 37
        }
      }, {
        "uid" : "1896b1b3dd61462a",
        "reportUrl" : "https://Nat754.github.io/PulseWave/83//#testresult/1896b1b3dd61462a",
        "status" : "passed",
        "time" : {
          "start" : 1720751595495,
          "stop" : 1720751595532,
          "duration" : 37
        }
      }, {
        "uid" : "47c21ecb77291737",
        "reportUrl" : "https://Nat754.github.io/PulseWave/82//#testresult/47c21ecb77291737",
        "status" : "passed",
        "time" : {
          "start" : 1720665672580,
          "stop" : 1720665672617,
          "duration" : 37
        }
      }, {
        "uid" : "8ac92b825ef464e1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/81//#testresult/8ac92b825ef464e1",
        "status" : "passed",
        "time" : {
          "start" : 1720579168344,
          "stop" : 1720579168380,
          "duration" : 36
        }
      }, {
        "uid" : "5dff8f17d854ecc5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/80//#testresult/5dff8f17d854ecc5",
        "status" : "passed",
        "time" : {
          "start" : 1720492751395,
          "stop" : 1720492751436,
          "duration" : 41
        }
      }, {
        "uid" : "1990dbedb1230914",
        "reportUrl" : "https://Nat754.github.io/PulseWave/79//#testresult/1990dbedb1230914",
        "status" : "passed",
        "time" : {
          "start" : 1720406555710,
          "stop" : 1720406555745,
          "duration" : 35
        }
      }, {
        "uid" : "b573aca7c4d1426f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/78//#testresult/b573aca7c4d1426f",
        "status" : "passed",
        "time" : {
          "start" : 1720320091471,
          "stop" : 1720320091508,
          "duration" : 37
        }
      }, {
        "uid" : "e7ebc669b6d5961d",
        "reportUrl" : "https://Nat754.github.io/PulseWave/77//#testresult/e7ebc669b6d5961d",
        "status" : "passed",
        "time" : {
          "start" : 1720233284457,
          "stop" : 1720233284493,
          "duration" : 36
        }
      }, {
        "uid" : "2f8d383801a11a3f",
        "reportUrl" : "https://Nat754.github.io/PulseWave/76//#testresult/2f8d383801a11a3f",
        "status" : "passed",
        "time" : {
          "start" : 1720147015696,
          "stop" : 1720147015733,
          "duration" : 37
        }
      } ]
    },
    "tags" : [ "regress" ]
  },
  "source" : "7e758ca681482c9e.json",
  "parameterValues" : [ "'chrome'", "'background-color'", "'rgba(252, 224, 88, 1)'", "'цвета'", "'https://pulsewave.ru/'" ]
}