{
  "uid" : "64944e30b8c95149",
  "name" : "1.20 Окно регистрации сообщение 'Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.'",
  "fullName" : "tests.test_signup_page.test_signup_page.TestSignupPage#test_signup_message_password_rules",
  "historyId" : "2122ee6003683434e2171c9ef9974cac",
  "time" : {
    "start" : 1722000060463,
    "stop" : 1722000060501,
    "duration" : 38
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Нет сообщения: \"Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\"\nassert 'Пароль долже...без пробелов.' == 'Пароль долже...1 спецсимвол.'\n  \n  - Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\n  + Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол, без пробелов.\n  ?                                                                                                                   ++++++++++++++",
  "statusTrace" : "self = <tests.test_signup_page.test_signup_page.TestSignupPage object at 0x7ff1c0e1c5c0>\nsignup_page_open = <pages.signup_page.SignUpPage object at 0x7ff1c0e561b0>\n\n    @allure.title(f\"1.20 Окно регистрации сообщение '{msg.PASSWORD_RULES_MSG}'\")\n    @pytest.mark.smoke\n    def test_signup_message_password_rules(self, signup_page_open):\n        element = signup_page_open.check_password_rules_message()\n        with (allure.step(f'Проверить текст сообщения: \"{self.msg.PASSWORD_RULES_MSG}\"')):\n>           assert element.text == self.msg.PASSWORD_RULES_MSG, \\\n                f'Нет сообщения: \"{self.msg.PASSWORD_RULES_MSG}\"'\nE           AssertionError: Нет сообщения: \"Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\"\nE           assert 'Пароль долже...без пробелов.' == 'Пароль долже...1 спецсимвол.'\nE             \nE             - Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\nE             + Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол, без пробелов.\nE             ?                                                                                                                   ++++++++++++++\n\ntests/test_signup_page/test_signup_page.py:90: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1721999067423,
      "stop" : 1721999067424,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "signup_page_open",
    "time" : {
      "start" : 1722000057098,
      "stop" : 1722000060463,
      "duration" : 3365
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки 'Принимаю все' в сообщении о принятии файлов cookie",
      "time" : {
        "start" : 1722000060403,
        "stop" : 1722000060433,
        "duration" : 30
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1722000056901,
      "stop" : 1722000057098,
      "duration" : 197
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1721999067406,
      "stop" : 1721999067423,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Нет сообщения: \"Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\"\nassert 'Пароль долже...без пробелов.' == 'Пароль долже...1 спецсимвол.'\n  \n  - Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\n  + Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол, без пробелов.\n  ?                                                                                                                   ++++++++++++++",
    "statusTrace" : "self = <tests.test_signup_page.test_signup_page.TestSignupPage object at 0x7ff1c0e1c5c0>\nsignup_page_open = <pages.signup_page.SignUpPage object at 0x7ff1c0e561b0>\n\n    @allure.title(f\"1.20 Окно регистрации сообщение '{msg.PASSWORD_RULES_MSG}'\")\n    @pytest.mark.smoke\n    def test_signup_message_password_rules(self, signup_page_open):\n        element = signup_page_open.check_password_rules_message()\n        with (allure.step(f'Проверить текст сообщения: \"{self.msg.PASSWORD_RULES_MSG}\"')):\n>           assert element.text == self.msg.PASSWORD_RULES_MSG, \\\n                f'Нет сообщения: \"{self.msg.PASSWORD_RULES_MSG}\"'\nE           AssertionError: Нет сообщения: \"Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\"\nE           assert 'Пароль долже...без пробелов.' == 'Пароль долже...1 спецсимвол.'\nE             \nE             - Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\nE             + Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол, без пробелов.\nE             ?                                                                                                                   ++++++++++++++\n\ntests/test_signup_page/test_signup_page.py:90: AssertionError",
    "steps" : [ {
      "name" : "Видимость подсказки: 'Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.'",
      "time" : {
        "start" : 1722000060464,
        "stop" : 1722000060489,
        "duration" : 25
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить текст сообщения: \"Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\"",
      "time" : {
        "start" : 1722000060489,
        "stop" : 1722000060500,
        "duration" : 11
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Нет сообщения: \"Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\"\nassert 'Пароль долже...без пробелов.' == 'Пароль долже...1 спецсимвол.'\n  \n  - Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол.\n  + Пароль должен содержать не менее 8 символов, включая минимум 1 цифру, 1 строчную и 1 заглавную буквы, 1 спецсимвол, без пробелов.\n  ?                                                                                                                   ++++++++++++++\n",
      "statusTrace" : "  File \"/home/runner/work/PulseWave/PulseWave/tests/test_signup_page/test_signup_page.py\", line 90, in test_signup_message_password_rules\n    assert element.text == self.msg.PASSWORD_RULES_MSG, \\\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "da7e56e202ce5ed",
      "name" : "Screenshot",
      "source" : "da7e56e202ce5ed.png",
      "type" : "image/png",
      "size" : 88749
    }, {
      "uid" : "cde48060612e76ec",
      "name" : "HTML source",
      "source" : "cde48060612e76ec.html",
      "type" : "text/html",
      "size" : 98986
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1722000060631,
      "stop" : 1722000060692,
      "duration" : 61
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование страницы 'Регистрация'"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests.test_signup_page"
  }, {
    "name" : "suite",
    "value" : "test_signup_page"
  }, {
    "name" : "subSuite",
    "value" : "TestSignupPage"
  }, {
    "name" : "host",
    "value" : "fv-az1196-380"
  }, {
    "name" : "thread",
    "value" : "2282-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_signup_page.test_signup_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 105,
        "unknown" : 0,
        "total" : 109
      },
      "items" : [ {
        "uid" : "d73e306c1611ba02",
        "reportUrl" : "https://Nat754.github.io/PulseWave/97//#testresult/d73e306c1611ba02",
        "status" : "passed",
        "time" : {
          "start" : 1721961686029,
          "stop" : 1721961686083,
          "duration" : 54
        }
      }, {
        "uid" : "54aa45b9ef96cf7e",
        "reportUrl" : "https://Nat754.github.io/PulseWave/96//#testresult/54aa45b9ef96cf7e",
        "status" : "passed",
        "time" : {
          "start" : 1721875336430,
          "stop" : 1721875336483,
          "duration" : 53
        }
      }, {
        "uid" : "8f0203e094002928",
        "reportUrl" : "https://Nat754.github.io/PulseWave/213//#testresult/8f0203e094002928",
        "status" : "passed",
        "time" : {
          "start" : 1721797874406,
          "stop" : 1721797874458,
          "duration" : 52
        }
      }, {
        "uid" : "12b1688e17fecac2",
        "reportUrl" : "https://Nat754.github.io/PulseWave/95//#testresult/12b1688e17fecac2",
        "status" : "passed",
        "time" : {
          "start" : 1721788873228,
          "stop" : 1721788873283,
          "duration" : 55
        }
      }, {
        "uid" : "d238441d526be1b1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/213//#testresult/d238441d526be1b1",
        "status" : "passed",
        "time" : {
          "start" : 1721766108427,
          "stop" : 1721766108483,
          "duration" : 56
        }
      }, {
        "uid" : "9f14bcb7b96afa9c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/94//#testresult/9f14bcb7b96afa9c",
        "status" : "passed",
        "time" : {
          "start" : 1721718565365,
          "stop" : 1721718565419,
          "duration" : 54
        }
      }, {
        "uid" : "cbb6acf024f426c1",
        "reportUrl" : "https://Nat754.github.io/PulseWave/94//#testresult/cbb6acf024f426c1",
        "status" : "passed",
        "time" : {
          "start" : 1721717687469,
          "stop" : 1721717687523,
          "duration" : 54
        }
      }, {
        "uid" : "a6bc62e43a62fd2c",
        "reportUrl" : "https://Nat754.github.io/PulseWave/94//#testresult/a6bc62e43a62fd2c",
        "status" : "passed",
        "time" : {
          "start" : 1721702307052,
          "stop" : 1721702307106,
          "duration" : 54
        }
      }, {
        "uid" : "e7ec3470f95ba9d0",
        "reportUrl" : "https://Nat754.github.io/PulseWave/93//#testresult/e7ec3470f95ba9d0",
        "status" : "passed",
        "time" : {
          "start" : 1721616232670,
          "stop" : 1721616232726,
          "duration" : 56
        }
      }, {
        "uid" : "46475173ee5177e6",
        "reportUrl" : "https://Nat754.github.io/PulseWave/92//#testresult/46475173ee5177e6",
        "status" : "passed",
        "time" : {
          "start" : 1721529602151,
          "stop" : 1721529602206,
          "duration" : 55
        }
      }, {
        "uid" : "c0c76a965946022b",
        "reportUrl" : "https://Nat754.github.io/PulseWave/91//#testresult/c0c76a965946022b",
        "status" : "passed",
        "time" : {
          "start" : 1721442914961,
          "stop" : 1721442915016,
          "duration" : 55
        }
      }, {
        "uid" : "eaa1ae40433c4020",
        "reportUrl" : "https://Nat754.github.io/PulseWave/90//#testresult/eaa1ae40433c4020",
        "status" : "passed",
        "time" : {
          "start" : 1721356815617,
          "stop" : 1721356815672,
          "duration" : 55
        }
      }, {
        "uid" : "ace20e83158eeef4",
        "reportUrl" : "https://Nat754.github.io/PulseWave/89//#testresult/ace20e83158eeef4",
        "status" : "passed",
        "time" : {
          "start" : 1721270207029,
          "stop" : 1721270207084,
          "duration" : 55
        }
      }, {
        "uid" : "e5179c1b6f8a4539",
        "reportUrl" : "https://Nat754.github.io/PulseWave/88//#testresult/e5179c1b6f8a4539",
        "status" : "passed",
        "time" : {
          "start" : 1721183908614,
          "stop" : 1721183908673,
          "duration" : 59
        }
      }, {
        "uid" : "c4876fd2087618ec",
        "reportUrl" : "https://Nat754.github.io/PulseWave/87//#testresult/c4876fd2087618ec",
        "status" : "passed",
        "time" : {
          "start" : 1721097561677,
          "stop" : 1721097561733,
          "duration" : 56
        }
      }, {
        "uid" : "bd507c1a45e5e175",
        "reportUrl" : "https://Nat754.github.io/PulseWave/86//#testresult/bd507c1a45e5e175",
        "status" : "passed",
        "time" : {
          "start" : 1721011299955,
          "stop" : 1721011300009,
          "duration" : 54
        }
      }, {
        "uid" : "e507ce13a6ccd4a8",
        "reportUrl" : "https://Nat754.github.io/PulseWave/85//#testresult/e507ce13a6ccd4a8",
        "status" : "passed",
        "time" : {
          "start" : 1720925127133,
          "stop" : 1720925127189,
          "duration" : 56
        }
      }, {
        "uid" : "3bb87bbb3faaa1ab",
        "reportUrl" : "https://Nat754.github.io/PulseWave/84//#testresult/3bb87bbb3faaa1ab",
        "status" : "passed",
        "time" : {
          "start" : 1720838270692,
          "stop" : 1720838270748,
          "duration" : 56
        }
      }, {
        "uid" : "e6d3b9cc6050de86",
        "reportUrl" : "https://Nat754.github.io/PulseWave/83//#testresult/e6d3b9cc6050de86",
        "status" : "passed",
        "time" : {
          "start" : 1720751827476,
          "stop" : 1720751827531,
          "duration" : 55
        }
      }, {
        "uid" : "a917bd9d60cfd5e5",
        "reportUrl" : "https://Nat754.github.io/PulseWave/82//#testresult/a917bd9d60cfd5e5",
        "status" : "passed",
        "time" : {
          "start" : 1720665874937,
          "stop" : 1720665874991,
          "duration" : 54
        }
      } ]
    },
    "tags" : [ "smoke" ]
  },
  "source" : "64944e30b8c95149.json",
  "parameterValues" : [ "'chrome'" ]
}